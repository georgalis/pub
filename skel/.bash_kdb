#!/bin/bash

# kdb mvp 5d6b3d nanou 
#
# Copyright (C) 2015-2019 George Georgalis <george@galis.org>
# All rights reserved. No use or redistribution allowed.
# Including but not limited to algorithms, format, procedures
# and data process function(s). Managed data remains under
# respective copyright of the owners.
#
# Licensing: https://ko-fi.com/dot4space
# Questions: George Georgalis <george@galis.org>

#ks knowledge motive curation query cache pointer db
# 5b9402df %ks curation database cdb (kdb lql) spec
# 5b6cc5aa %ks k4db prefix for development
# 5b56228b %ks design kdb attachments user guide, template spec
# 5afb26f0 %ks mesh chatter (coprocedures)
# 5ad27718 %ks knowledgendian kdb lql spec
# 5a8c6db4 %ks period scheduler and task supervisor spec
# 59dab11b %ks sub kdb idk tools shell functions scraps hex tables
# 59d94184 %ks isbe k4 schema, LQL, knowledge database, k4db Literate Query Language spec
# 59c7febc %ks isbe k4 markdown mermaid mmd spec
# 59bc5f4a %ks isbe kdb tables, types, path, files hist
# 20150807 the only epoch ever used for intervals

arpa ()
{
    [ -z "$1" ] && echo -n "An ip address on the command line returns its ";
    echo "$(ptr "$1")in-addr.arpa"
}
chkerr ()
{
    [ "$*" ] && {
        logerr "$*";
        stderr "$*";
        return 1
    } || true
}
chkwrn ()
{
    [ "$*" ] && {
        logwrn "$*";
        stdwrn "$*";
        return 0
    } || true
}
ecc ()
{
    echo "$2" | cut -c "$1" | sed 's/\^.*//g'
}
ecp ()
{
    echo "$2" | cut -d '^' -f "$1" | sed 's/\^.*//g'
}
idktjz ()
{
    chkwrn "Function works but revisit procedure... noop";
    return 1;
    find -d "$1" -maxdepth 0 -type d || {
        chkwrn "$0 : Not directory : $1";
        return $?
    };
    find -d "$1" -maxdepth 1 -mindepth 1 -name 40000000 || {
        chkwrn "$0 : Not exist $1/40000000";
        return $?
    };
    find -d "$1" -type d -empty -delete;
    find -d "$1" -mindepth 1 -type f | tar cjf "$1"/0x40m.tjf -T - && find -d "$1" -mindepth 1 -type f -not -name 0x40m.tjf -not -name 40000000 -delete;
    find -d "$1" -mindepth 1 -type d -empty -delete;
    head "$1"/40000000 >> "$1"/40000000;
    echo "$1"/0x40m.tjf >> "$1"/40000000;
    tar tjf "$1"/0x40m.tjf >> "$1"/40000000
}
k ()
{
    $k4db_logstd "start $$ : k4since='$k4since' $FUNCNAME $*";
    local idxptr="$k4db/$k4_pool/idxptr";
    local ptrnxd="$k4db/$k4_pool/ptrnx";
    set $(k4db_in_id "$1") || {
        chkerr "$FUNCNAME : error k4_inptr arg1='$1' (bfd7c86)";
        return 1
    };
    k4db_validate_k4 "$1" || return 1;
    export k4="$1";
    export k4uid="$2";
    export k4nptr="$3";
    $EDITOR "$k4";
    k4db_k4_head_seq "$k4";
    k4db_validate_k4 "$k4" || return 1;
    [ -e "${k4},v" ] || ci -m"(by $FUNCNAME)" -l -t-kdb -q "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    k4db_idx "$k4";
    k4_env_wlink "$k4";
    k4db_mk_idxptr "0" "$k4";
    k4db_mk_idxptr "$k4nptr" "$k4";
    k4db_hl '~';
    k4_list_tags;
    k4db_hl '.';
    k4_list_kc;
    k4db_hl '-';
    ksynopsys "$k4";
    k4db_hl '~';
    $k4db_logstd "end $$ : k4since='$k4since' $FUNCNAME $*"
}
k4-modifyall-headers-without-changing-stat ()
{
    xs=$(xs);
    find "$k4h" -regex '.*/[[:xdigit:]]\{2\}/[[:xdigit:]]\{2\}/[[:xdigit:]]\{4\}/[[:xdigit:]]\{8\}/4000[[:xdigit:]]\{4\}' -exec grep -q '^%k ' \{\} \; -print | while read k4; do
        echo "sed 's/^%k /%ks /' $k4 >${k4}~$xs             && touch -r $k4 ${k4}~$xs             && cat ${k4}~$xs >${k4}             && touch -r ${k4}~$xs $k4             && rm -f ${k4}~$xs";
    done
}
k4_arg ()
{
    n=$1;
    [ "$2" ] && {
        echo "$2" | awk -v n="$n" '{printf "%s\n",$n}' && return 0
    };
    awk -v n="$n" '{printf "%s\n",$n}'
}
k4_body ()
{
    local k4="$1";
    awk '/^$/,0' "$k4"
}
k4_count_idxptr ()
{
    local idxptr="$k4db/$k4_pool/idxptr";
    find "$idxptr" -type f | awk 'END{print NR}'
}
k4_count_uidhln ()
{
    local uidhln="$k4db/$k4_pool/uidhln";
    find "$uidhln" -type f | awk 'END{print NR}'
}
k4_count_uidptr ()
{
    local uidptr="$k4db/$k4_pool/uidptr";
    find "$uidptr" -type f | awk 'END{print NR}'
}
k4_env_r_kc ()
{
    $k4db_fstart;
    local env="$k4db/$k4_pool/$k4_env";
    [ -s "$env/kc" ] && cat "$env/kc" || {
        [ -s "$env/kc~" ] && cat "$env/kc~"
    };
    $k4db_fstop
}
k4_env_r_kl ()
{
    $k4db_fstart;
    local env="$k4db/$k4_pool/$k4_env";
    [ -s "$env/kl" ] && cat "$env/kl" || {
        [ -s "$env/kl~" ] && cat "$env/kl~"
    };
    $k4db_fstop
}
k4_env_wlink ()
{
    $k4db_fstart;
    [ "$1" ] && local k4="$1" kl;
    k4db_validate_k4 "$k4" || return 1;
    local env="$k4db/$k4_pool/$k4_env";
    [ -s "$env/kc" ] && mv -i -f "$env/kc" "$env/kc~";
    k4_headg '^%kc\ ' "$k4" > "$env/kc";
    [ -s "$env/kl" ] && mv -i -f "$env/kl" "$env/kl~";
    kl="$(k4_headg '^%kk\ ' "$k4" | k4db_squash_defaults | k4_squeeze )";
    [ "$kl" ] || kl="$(
        { k4_headg '^%km\ ' "$k4" | sed  -e 's/_/ /g' | awk '{printf "%%kl %s %s %s ",$5,$6,$7}'
          k4_headg '^%ks\ ' "$k4" ;} | k4_squeeze )";
    $k4db_fstop
}
k4_headg ()
{
    local e="$1" k4="$2";
    awk 'NR==1,/^$/' "$k4" | awk '!/^$/' | grep -E "$e"
}
k4_headv ()
{
    local e="$1" k4="$2";
    awk 'NR==1,/^$/' "$k4" | awk '!/^$/' | grep -vE "$e"
}
k4_help ()
{
    cat  <<EOF
======== Nomenclature:
 k{name}     user shell function
 k4_{name}   function on elements
 k4db_{name} function on entire db

${FUNCNAME}_1 : Major commands
${FUNCNAME}_2 : Primitive functions
${FUNCNAME}_3 : Unit operations
${FUNCNAME}_4 : Development
${FUNCNAME}_5 : Environment
${FUNCNAME}_6 : GLOSSARY
${FUNCNAME}_7 : PATHs
${FUNCNAME}_8 : K4 file format
${FUNCNAME}_9 : All of the above
EOF

}
k4_help_1 ()
{
    local c;
    cat  <<EOF
======== Major commands #:o
 $(c='#:o' ; grep -Ev '^(#|\$|	)' "$k4db_fun" | grep "$c" | sed -e "s/ ().*$c/	:/"   -e "s/$c/ :/")
EOF

}
k4_help_2 ()
{
    local c;
    cat  <<EOF
======== Primitive functions #::
 $(c='#::' ; grep -Ev '^(#|\$|	)' "$k4db_fun" | grep "$c" | sed -e "s/ ().*$c/	:/"   -e "s/$c/ :/")
EOF

}
k4_help_3 ()
{
    local c;
    cat  <<EOF
======== Unit operations #:>
 $(c='#:>' ; grep -Ev '^(#|\$|	)' "$k4db_fun" | grep "$c" | sed -e "s/ ().*$c/	:/"   -e "s/$c/ :/")
EOF

}
k4_help_4 ()
{
    local c;
    cat  <<EOF
======== Development #:-
 $(c='#:-' ; grep -Ev '^(#|\$|	)' "$k4db_fun" | grep "$c" | sed -e "s/ ().*$c/	:/"   -e "s/$c/ :/")
EOF

}
k4_help_5 ()
{
    local c;
    cat  <<EOF
======== Environment
$(export c='#:$' ; grep -Ev '^(#|\$|	)' "$k4db_fun" | grep "$c" )
$(grep ^export "$k4db_fun")
EOF

}
k4_help_6 ()
{
    cat  <<EOF
======== GLOSSARY
 k4    kdb file and/or path
 k4db  set of k4
 c     query k4db records
 k     act on specific c result
EOF

}
k4_help_7 ()
{
    cat  <<EOF
======== PATHs
 \$k4db/pool/1/ cumulative logs and ptr
 \$k4db/pool/2/ performance indices

 \$k4db/pool/0/ptrid/\$uid
======== FILEPATHs

   local k4d_pool="$k4_pool/$(k4epoch)"
   # mkdir -p pool query directory
    # qury 0
    # root  dot4
    # pool  ${root}/pool/0/...
    # qury  ${root}/0/xsss^/ ${epoch}${span}^
    # ddir  ${root}/${epoch}${span}^
    # k4    ${root}/${epoch}${span}^/_${epoch}.kdb
    # link  ${root}/${epoch}${span}^/^/_${epoch}${span}.kdb
 \$k4db/0/5/c11d 5 5c11d ropr c11d # k4epoch | k4d dot4/0
 \$k4db/pool/: misc tmp files
X\$k4db/pool/0/{ep}/0.log: primary search log
X\$k4db/pool/0/{ep}/1.cmd: invocation command
 \$k4db/pool/0/uidln/\$uid : uid ([:xdigit:]]\{16\}) named link to k4 file
 \$k4db/pool/0/ptrid/\$uid : ptr data (2 lines: k4 path and uid) of k4 uid ([:xdigit:]]\{16\})
 \$k4db/pool/0/ptrnx/\$nx : 0x numbered link to ptrid/\$uid
 \$k4db/pool/0/tx.\$FUNCNAME}.0 : benchmark start time
 \$k4db/pool/0/tx.\$FUNCNAME}.1 : benchmark stop time
X\$k4db/pool/0/{ep}/xss/'[[:xdigit:]]\{24\}$': primary search result (^k4 %k*)
 \$k4db/pool/1/\$(date "+%Y%m%d")/ptrid/: ptrid for abandoned results
 \$k4db/pool/1/xss/{xss}: secondary search result {xss} link to pool/0/*/xss/[[:xdigit:]]\{24\} (^k4 %k*)
X\$k4db/pool/1/{kx}/{xss}: secondary search, xss links to pool/0/*/xss/[[:xdigit:]]\{24\} (^k4 %ks %kx)
 \$k4db/pool/1/secondary.log: secondary search log
 \$k4db/4/: display search index, epoch bundle (local cache)
 \$k4db/4/0/0: last (^k4 %ks %kx)
 \$k4db/4/0/1: prior (^k4 %ks %kx)
 \$k4db/4/0/2: prior (^k4 %ks %kx)
 \$k4db/4/0/3: prior (^k4 %ks %kx)
 \$k4db/4/0/4: prior (^k4 %ks %kx)
 \$k4db/4/0/5: prior (^k4 %ks %kx)
 \$k4db/4/0/6: prior (^k4 %ks %kx)
 \$k4db/4/0/7: prior (^k4 %ks %kx)
?\$k4db/4/0/{epoch}: cumulative prior display, expires (^k4 %ks %kx)
 \$k4db/4/{epoch}/xss/{xss}: layer {epoch} search files, cumulative log, from pool/1/* on epoch reset
 \$k4db/4/{epoch}/nx/{nx}: layer {epoch} search files, cumulative log, from pool/1/* on epoch reset
X\$k4db/4/{epoch}/kx/{kx}: layer {epoch} search files, cumulative log, from pool/1/* on epoch reset
 \$k4db/4/{epoch}/0.log: cumulative log, from pool/1/secondary.log on epoch reset
 \$k4db/5/: kdb master (best available)
 \$k4db/6
 \$k4db/tag.tbl
 \$k4db/finit.bash
 \$k4db/.git
 \$k4db/design
 \$k4db/dev
 \$k4db/bin
 \$k4db/man
 \$k4db/   ./4/{tag} : list of dot3
 \$k4db/   ./3/{[:xdigit:]*/}/ : cache index of
EOF

}
k4_help_8 ()
{
    grep '^	' "$k4db_fun";
    cat  <<'EOF'
EOF

}
k4_help_9 ()
{
    k4_help_1;
    echo;
    k4_help_2;
    echo;
    k4_help_3;
    echo;
    k4_help_4;
    echo;
    k4_help_5;
    echo;
    k4_help_6;
    echo;
    k4_help_7;
    echo;
    k4_help_8
}
k4_inventory ()
{
    $k4db_logstd "start $$ : $FUNCNAME $*";
    local k4="$1" p="${1%/*}" k="${1##*/}";
    local not_find="-not ( -name *,v -o -name $k -o -name ^ )";
    find "$p" -mindepth 1 -prune -type f -name "$k" -exec printf "        K4 %s \n" \{\} \;;
    find "$p" -mindepth 1 -prune -type d $not_find -exec printf "       DIR %s/\n" \{\} \; | sort -d;
    find "$p" -mindepth 1 -prune -type f $not_find -exec printf "      FILE %s \n" \{\} \; | sort -d;
    {
        find "$p" -mindepth 1 -prune -type f $not_find | awk 'END{printf "(%d/",FNR}';
        find "$p" -type f $not_find | awk 'END{printf "%d) ",FNR}';
        du -sh "$p/"
    } | awk '{printf "%-10s %s %s\n%-10s %s\n","     TOTAL",$1,$2,"      ROOT",$3 }';
    kk4 "$k4";
    $k4db_logstd "end $$ : $FUNCNAME $*"
}
k4_list_kc ()
{
    local _list_kc="$k4db/$k4_list/kc";
    [ -e "$_list_kc" ] && cat "${_list_kc}" | sort | column
}
k4_list_tags ()
{
    local count="$1";
    local _idx_dir="$k4db/$k4_idx";
    local _search="$(echo $k4_search | sed -e 's/^^%//' -e 's/[()]//g' -e 's/[\\ ]//'g | tr '|' '\n' | sort -u | tr '\n' ',')";
    local _idx_search="$_idx_dir/${_search}";
    [ "$count" ] || count=100;
    tr '%' '\n' < "$_idx_search" | sed -e '/^kt /!d' -e 's/^kt //' | tr ' ' '\n' | sed '/^$/d' | sort -i | uniq -ic | sort -n | tail -n "$count" | awk '{print $2}' | sort -i | column
}
k4_raw ()
{
    sed -e 's/^%[^ ]* //' -e 's/#.*//' -e 's/ $//'
}
k4_squeeze ()
{
    tr -s '\n\t' ' ' | sed 's/[ ]*$//'
}
k4_valid_dir ()
{
    local d=$1;
    [ -d "$d" ] || {
        chkerr "$FUNCNAME '$d' not a dir (d5c0702)";
        return 1
    };
    [ -w "$d" ] || {
        chkerr "$FUNCNAME '$d' not writeable (d5c073b)";
        return 1
    };
    [ -x "$d" ] || {
        chkerr "$FUNCNAME '$d' not executeable (d5c075f)";
        return 1
    };
    shift;
    [ "$1" ] && $FUNCNAME $@ || true
}
k4_wrapregex ()
{
    expr "$*" : '^(.*)$' > /dev/null && echo "$*" && return 0;
    echo -n '(';
    while [ $# -ne 0 ]; do
        echo -n "$1";
        shift;
        [ $# -ne 0 ] && echo -n '|';
    done;
    echo ')'
}
k4db_addxd ()
{
    local n="0x$1" d="$2";
    echo $(( $n + $d )) | awk '{printf "%x",$1}'
}
k4db_clean ()
{
    k4db_valid_cmd || chkerr "$FUNCNAME : fail k4db_valid_cmd 3ddf08" || return 1;
    find "$k4db" -depth -type d -empty -delete;
    mkdir -p "$k4db/$k4_pool/ptrnx" "$k4db/$k4_pool/ptrid" "$k4db/$k4_pool/uidln"
}
k4db_clean_ks ()
{
    chkerr "$FUNCNAME empty";
    return 1
}
k4db_clean_name ()
{
    tr -dc '\053-\071\101-\132\137\141-\172'
}
k4db_clean_path ()
{
    chkerr "$FUNCNAME empty";
    return 1
}
k4db_clean_xs ()
{
    chkerr "$FUNCNAME empty";
    return 1
}
k4db_clean_xss ()
{
    chkerr "$FUNCNAME empty";
    return 1
}
k4db_dir_km ()
{
    [ "$1" ] || set $(echo | tai64n | sed -e 's/^@4[0]*//' -e 's/.\{8\}/& /');
    local xs=$1 ss=$2;
    set $(k4dir_epoch_span "$k4db" "$xs$ss");
    mkdir -p "$1" || {
        chkerr "$FUNCNAME dir exists, race $1 (d574411)";
        return 1
    };
    local kd="$1" epoch="$2" span="$3";
    local k4hash="$(python $k4db/sub/base.py $(( 0x$xs + 0x$ss )) 32 )";
    local xa="$(python $k4db/sub/base.py $(( 0x${xs} + 0x${epoch} + ${#epoch} )) 16 )";
    local k4span32="$(python $k4db/sub/base.py $((0x$span)) 32 )";
    local hdate="$(date -j -r "$((0x$xs))" "$k4_ht_strftime")";
    local pw="$( gpw 1 $(( ${#epoch} * ${#epoch} / 18 + 4 )) | awk '{printf "%s",$1}' )";
    echo "$kd $xa $xs $ss $epoch $pw $k4hash $k4span32 $hdate"
}
k4db_fk4 ()
{
    $k4db_logstd "find ${k4db} ${k4since} -regex '.*_/.*' -prune -type f -name '*.kdb'";
    find ${k4db} ${k4since} -regex '.*_/.*' -prune -type f -name '*.kdb';
    $k4db_logstd "find ${k4db} ${k4since} -regex '.*^/.*' -prune -type f -name '*.kdb'";
    find ${k4db} ${k4since} -regex '.*^/.*' -prune -type f -name '*.kdb'
}
k4db_fold ()
{
    [ -t 1 ] && {
        local cols="$(tput cols)";
        fold -s -w $cols
    } || cat
}
k4db_hl ()
{
    local char="$1";
    [ "$char" ] || char="-";
    [ -t 1 ] && {
        local cols=$(tput cols);
        tput md;
        printf "%*s" $cols '' | tr ' ' "$char";
        tput me
    } || true
}
k4db_idx ()
{
    local k4;
    local _idx_dir="$k4db/$k4_idx";
    local _search="$(echo $k4_search | sed -e 's/^^%//' -e 's/[()]//g' -e 's/[\\ ]//'g | tr '|' '\n' | sort | tr '\n' ',')";
    local _idx_search="$_idx_dir/${_search}";
    local _list_dir="$k4db/$k4_list";
    local _kc _list_kc="$_list_dir/kc";
    [ -d "$_idx_dir" ] || {
        chkerr "$FUNCNAME _idx_dir not a dir : $_idx_dir (d24ca6a)";
        return 1
    };
    [ -w "$_idx_dir" ] || {
        chkerr "$FUNCNAME _idx_dir not writeable : $_idx_dir (d24ca6b)";
        return 1
    };
    [ -x "$_idx_dir" ] || {
        chkerr "$FUNCNAME _idx_dir not executeable :$_idx_dir (d24ca6c)";
        return 1
    };
    [ -e "$_idx_search" ] || touch "$_idx_search";
    [ -e "$_list_kc" ] || touch "$_list_kc";
    [ "$1" ] && {
        k4="$1";
        k4db_validate_k4 "$k4";
        _kc="$(k4_headg '^%kc ' "$k4" | k4db_squash_defaults | awk NR==1                 | tr -s ' ' | sed 's/ $//' )";
        [ "$_kc" ] && {
            grep -q "^$_kc" "$_list_kc" || echo "$_kc" >> "$_list_kc"
        };
        printf '%s ' "$k4" >> "$_idx_search";
        k4_headg "${k4_search}" "$k4" | k4db_squash_defaults | sed '/%km /s/_/ /g' | tr -s ' ' | sed 's/ $//' | k4_squeeze >> "$_idx_search"
    };
    [ "$1" ] || {
        local _idx_search_n="$(mktemp "${_idx_search}-XXXX")";
        local _list_kc_n="$(mktemp "${_list_kc}-XXXX")";
        k4db_fk4 | while read k4; do
            _kc="$(k4_headg '^%kc ' "$k4" | k4db_squash_defaults | awk NR==1                 | tr -s ' ' | sed 's/ $//' )";
            [ "$_kc" ] && echo "$_kc" >> "$_list_kc_n";
            printf "%s " "$k4" >> "$_idx_search_n";
            k4_headg "${k4_search}" "$k4" | k4db_squash_defaults | sed '/%km /s/_/ /g' | k4_squeeze >> "$_idx_search_n";
        done;
        sort -u "$_list_kc_n" > "${_list_kc_n}.sort" && mv -i -f "${_list_kc_n}.sort" "${_list_kc}" && rm -i -f "$_list_kc_n";
        sort -du "${_idx_search_n}" > "${_idx_search_n}.sort" && mv -i -f "${_idx_search_n}.sort" "${_idx_search}" && rm -i -f "${_idx_search_n}"
    }
}
k4db_idx_dt ()
{
    local arg1="$1";
    [ "$arg1" ] || arg1="$(cat)";
    tr -dc ' %+,-.0123456789:;@ABCDEFGHIJKLMNOPQRSTUVWXYZ^_abcdefghijklmnopqrstuvwxyz' | tr -s ' '
}
k4db_idxptr_ks ()
{
    local idxptr="$k4db/$k4_pool/idxptr";
    local idx=$1;
    local ptrf="$idxptr/$idx";
    local k4="$(awk 'NR==1 {print}' "$ptrf")";
    local uid="$(awk 'END   {print}' "$ptrf")";
    local xs="${uid::8}";
    k4_headg '^%ks ' "$k4" | awk -v n="$idx" -v xs="$xs" 'NR==1 {printf "%4s %8s %s\n",n,xs,$0}' | $k4_unlong
}
k4db_in_id ()
{
    $k4db_logstd "start $$ : $FUNCNAME $*";
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local uidptr="$k4db/$k4_pool/uidptr";
    local in_id="$1";
    local hln uid ptrf uid k4f;
    local ptr ptrf k4f idx idxf;
    [ "$in_id" ] || in_id=0;
    [ "$ptrf" ] || ptrf="$(find "$idxptr" -name "${in_id}"  -regex ".*/idxptr/[[:xdigit:]]*$" )";
    [ "$ptrf" ] || ptrf="$(find "$uidptr" -name "${in_id}"  -regex ".*/uidptr/[[:xdigit:]]\{16\}$" )";
    [ "$ptrf" ] || ptrf="$(find "$uidptr" -name "${in_id}*" -regex ".*/uidptr/${in_id}[[:xdigit:]]\{8\}$" )";
    [ "$ptrf" ] || {
        hln="$(find "$uidhln" -samefile "$in_id" 2>/dev/null | awk 'NR==1 {print}')";
        [ "$hln" ] && uid="${hln##*/}";
        [ -e "$uidptr/$uid" ] && ptrf="$uidptr/$uid"
    };
    [ "$ptrf" ] || {
        chkerr "$FUNCNAME : no match for ${ptr} : $uidptr $idxptr : (bcfce6d)";
        return 1
    };
    [ "$ptrf" ] && k4f="$(awk 'NR==1 {print}' "$ptrf")";
    [ "$ptrf" ] && uid="$(awk 'END   {print}' "$ptrf")";
    [ "$ptrf" ] && idxf="$(find "$idxptr" -type f -exec grep --files-with-matches "$uid" \{\} \;                 | awk 'NR==1' | sed 's=.*/==g' )";
    [ "$idxf" ] && idx=${idxf##*/};
    echo "$k4f" "$uid" "$idx";
    $k4db_logstd "end $$ : $FUNCNAME $*"
}
k4db_init ()
{
    local cksum fail="fail";
    local h="$(cd ~ && pwd -P)";
    [ "$k4db" = "$h/dot4" ] || {
        chkerr "$FUNCNAME : unexpected k4db : $k4db : bc11a92";
        fail="${fail} bc11a92";
        return 1
    };
    export k4="$k4db/0.kdb";
    [ "$LC_ALL" ] || export LC_ALL="C";
    export LC_ALL="C";
    export k4_session="0";
    export k4_pool="0/%";
    export k4_list="0/=";
    export k4_idx="0/^";
    export k4_env="0/_";
    export k4_hst="0/,";
    export k4db_tags="$k4db/c/etc/tags.tbl";
    export k4db_ntag="$k4db/c/etc/ntag.tbl";
    export k4db_logstd="true #";
    export k4db_logstd="k4db_logstd";
    export k4db_fstart="$k4db_logstd"\ 'start $$ : $FUNCNAME $*';
    export k4db_fstop="$k4db_logstd"\ 'stop  $$ : $FUNCNAME $*';
    export k4_unlong='k4db_fold';
    export k4_unlong='k4db_trunc';
    export k4case='-i';
    export k4_search="^%(ks|kt|kk|kc|kp|kj|kr|kl|km|kd|kv)\ ";
    export k4_topic="^%(ks|kt|kk|kc|kp|kj|kl)\ ";
    export k4_ht_strftime="+%s %Y%m%d %H%M %Z %z %a";
    mkdir -p "$k4db/$k4_pool/idxptr" "$k4db/$k4_pool/uidptr" "$k4db/$k4_pool/uidhln";
    mkdir -p "$k4db/$k4_pool" "$k4db/$k4_list" "$k4db/$k4_idx" "$k4db/$k4_env" "$k4db/$k4_hst" || {
        chkerr "cannot create k4db standard directory(ies) $k4db/$k4_pool $k4db/$k4_list $k4db/$k4_idx $k4db/$k4_env $k4db/$k4_hst : bc3fee0";
        fail="${fail} d49f583"
    };
    touch -t 201508060000 "$k4db/$k4_pool/nulltime" || {
        chkerr "$FUNCNAME : cannot create k4db/k4_pool/nulltime : $k4db/$k4_pool/nulltime : bc11d49";
        fail="${fail} bc11d49"
    };
    touch "$k4db/$k4_pool/lasttime" || {
        chkerr "$FUNCNAME : cannot create k4db/k4_pool/lasttime : $k4db/$k4_pool/lasttime : bc11da6";
        fail="${fail} bc11da6"
    };
    touch "$k4db/$k4_list/kc";
    [ "$fail" = "fail" ] && return 0 || chkerr "$FUNCNAME : $fail (bd1faaa)"
}
k4db_k4_head_seq ()
{
    local k4=$1;
    k4db_validate_k4 "$k4" || return 1;
    local k4d="${k4%/*}";
    local k4x="$(mktemp ${k4d}/__tmp.kdb-XXXX)";
    local kre order kinds="
# %ks # subject matter
# %kt # tag list
# %kk # entry keyord
# %kr # matrix reason
# %kp # hier superord
# %kj # motive subord
# %kl # hist link
# %kn # interval align
# %ko # origin owner
# %km # meta hash
# %kc # entry class
# %kpi # pi value
# %kd # markdown index
# %kv # value key
# %ki # review interval
# %ke # event begin
# %kz # event end
";
    kre="^($(echo "$kinds" | sed -e '/^$/d' | awk '{printf "%s",$2"|"}' | sed -e 's/|$//'))\\ ";
    order="$(echo "$kinds" | sed -e '/^$/d' | awk '{print $2}')";
    for kind in $order;
    do
        k4_headg "^${kind}\ " "$k4" >> "$k4x";
    done;
    k4_headv "$kre" "$k4" >> "$k4x";
    k4_body "$k4" >> "$k4x";
    [ -e "${k4},v" ] || ci -m"(by $FUNCNAME)" -l -t-kdb -q "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    cat "$k4x" > "$k4";
    touch "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    rm -i -f "$k4x"
}
k4db_linkcount ()
{
    local idxptr_NR=$(k4_count_idxptr);
    local uidptr_NR=$(k4_count_uidptr);
    local uidhln_NR=$(k4_count_uidhln);
    local k4_term_lines=$(( $(tput li) - 5 ));
    [ $idxptr_NR -eq 0 -o $uidhln_NR -eq 0 ] && printf ">>> null match : ";
    [ $idxptr_NR -ge $k4_term_lines -o $uidhln_NR -ge $k4_term_lines ] && printf ">>> overflow : ";
    printf "%s/%s/%s/%s %s" "$idxptr_NR" "$uidptr_NR" "$uidhln_NR" "$k4_term_lines" "$*"
}
k4db_logstd ()
{
    echo "$*" | tai64n >> "${k4db}/${k4_pool}/log"
}
k4db_mk_idxptr ()
{
    local idx="$1" k4f="$2";
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local idxf="$idxptr/$idx";
    k4db_validate_k4 "$k4" || return 1;
    set $(k4_headg '^%km ' "$k4f" | awk 'NR==1 {print}' | sed 's/_/ /g');
    [ "${#3}${#4}" = "88" ] || {
        chkerr "$FUNCNAME unexpected km 3 4 == '$xs $ss' k4f=$k4f (d5b5c49)";
        return 1
    };
    expr "$3$4" : '^[[:xdigit:]]\{16\}$' > /dev/null || {
        chkerr "$FUNCNAME unexpected km 3 4 == '$3 $4' k4f=$k4f (d5b5c58)";
        return 1
    };
    local uid="${3}${4}";
    printf '%s\n%s' "$k4f" "$3$4" > "$idxf";
    local val=$(k4_headg '^%kv ' "$k4f" |k4_arg 2);
    expr "$val" : '^[[:xdigit:]]\{8\}$' > /dev/null || val="55c305f0";
    touch -t "$(xs2touch "$val")" "$idxf";
    ln -f "$idxf" "$uidptr/$uid";
    ln -f "$k4f" "$uidhln/$uid"
}
k4db_squash_defaults ()
{
    sed -E -e '
        /^%k. .*ord #$/d
        /^%k. .*def #$/d
        /^%k. .*root #$/d
        /^%kk .*# class define #$/d
        /^%kt $/d
        /^%%k(l|r|p)_(%kl )5.* isbe #/d
        /^%%k(l|r|p)_(%kl )5.* self #/d
        /^%%k(l|r|p)_(%kl )5.* self [ ]*# (super|related)/d
        /^%%k(l|r|p)_5.* self [ ]*# (super|related|linked)/d
        /^%%kd_.*index.md$/d
        /^%kc  # class/d
        /^%kc  # hist class/d
        /^%kc blah/d
        /^%kc hist/d
        /^%kc hist # hist class/d
        /^%kc hist exam # class onto/d
        /^%kc hist exmp # class note/d
        /^%kc hist ignore # hist class/d
        '
}
k4db_trunc ()
{
    [ -t 1 ] && {
        local cols="$(tput cols)";
        awk -v cols=$((cols-1)) 'length > cols{$0=substr($0,0,cols)"_"}1'
    } || cat
}
k4db_valid_bg ()
{
    true
}
k4db_valid_cmd ()
{
    local cksum fail="fail";
    [ "$k4db" = "/Users/geo/dot4" ] || {
        chkerr "$FUNCNAME : unexpected k4db : $k4db : bc02189";
        fail="${fail} bc02189"
    };
    [ ${k4_pool##*/} = "%" ] || {
        chkerr "$FUNCNAME : invalid k4_pool : $k4_pool : bbfcf27";
        fail="${fail} bbfcf27"
    };
    [ ${k4_hst##*/} = "," ] || {
        chkerr "$FUNCNAME : invalid k4_hst : $k4_hst : bc029a0";
        fail="${fail} bc029a0"
    };
    [ -d "${k4_hst}" ] || {
        chkerr "$FUNCNAME : invalid k4_hst : $k4_hst (d4a0f42)";
        fail="${fail} d4a0f42"
    };
    [ -e "$k4db/$k4_pool/nulltime" ] || {
        chkerr "$FUNCNAME : no nulltime : $k4_nulltime : bbfd346";
        fail="${fail} bbfd346"
    };
    [ -e "$k4db/$k4_pool/lasttime" ] || {
        chkerr "$FUNCNAME : no lasttime : $k4_lasttime : bbfd371";
        fail="${fail} bbfd371"
    };
    cksum="$(k4_headg "${k4_search}" /Users/geo/dot4/5/c/4/e/1/a/^/^5c4e1a.kdb | cksum)";
    [ "$cksum" = "3868898699 403" ] || {
        chkerr "$FUNCNAME : failed k4_search cksum : c4e1a";
        fail="${fail} bbeec"
    };
    [ "$fail" = "fail" ] && return 0 || chkerr "$FUNCNAME : $fail";
    return 1
}
k4db_validate_functions ()
{
    {
        true && chkwrn "$FUNCNAME : no tests (d55c939)" && return 0
    } || {
        chkerr "$FUNCNAME : test fail (d55c93a)";
        return 1
    }
}
k4db_validate_k4 ()
{
    $k4db_fstart;
    local k4="$1";
    [ -f "$k4" ] || chkerr "$FUNCNAME : not a regular file k4='$k4' (bda5b1e)" || return 1;
    k4_headg "^%ks ." "$k4" > /dev/null || {
        chkerr "$FUNCNAME : Invalid k4 : no %ks : $k4";
        return 1
    };
    k4_headg "^%km ." "$k4" > /dev/null || {
        chkerr "$FUNCNAME : Invalid k4 : no %km : $k4";
        return 1
    };
    $k4db_fstop
}
k4db_xss_ddiff ()
{
    local v t0="${1}.0" t1="${1}.1";
    [ -e "$t0" -a -e "$t1" ] || {
        chkerr "$FUNCNAME $1 : Invalid input $t0 $t1 bc4dcae";
        return 1
    };
    shift;
    local pass="$*";
    set $(sed -e 's/_/ /' "$t1" "$t0"         | awk '{print  $1,$2}' | tr ' ' '\n'         | while read v ; do printf '%d\n' "0x$v" ; done         | tr '\n' ' ');
    dc -e "4k $1 $3 - $2 $4 - 1006632959 / + n";
    echo -n " $pass"
}
k4dir ()
{
    {
        k4dir_epoch_span | awk '{print $1}';
        echo $@
    } | k4_squeeze
}
k4dir_epoch_span ()
{
    local prefix="$1" _xss_=$2;
    shift 2;
    local pass=$@;
    [ "$prefix" ] || prefix="$k4db";
    [ -d "$prefix" ] || {
        chkerr "prefix=$prefix not a directory (d1a0a1d)";
        return 1
    };
    [ -w "$prefix" ] || {
        chkerr "prefix=$prefix not writeable (d1a19d5)";
        return 1
    };
    [ "$_xss_" ] || {
        set $(echo | tai64n | sed -e 's/^@4[0]*//' -e 's/.\{8\}/& /');
        _xss_=$1$2
    };
    local result="/$_xss_";
    while [ -d "${prefix}${result%/*}" ]; do
        result="$(echo "$result" | sed -e 's:.*/.:&/:' -e 's://$:/f:' )";
    done;
    {
        echo "$prefix$result" | sed 's:[[:xdigit:]]*$:^:';
        echo "$result" | sed -e 's:/[^/]*$::' -e 's:[^[:xdigit:]]*::g';
        echo "$result" | sed 's:.*/::';
        echo "$pass"
    } | k4_squeeze
}
k4epoch ()
{
    {
        k4dir_epoch_span | awk '{print $2}';
        echo $@
    } | k4_squeeze
}
k4epochs ()
{
    local _epoch_ _epoch_4_ _epoch_32_;
    k4db_fk4 | sed -e "s,$k4db/,," -e "s,[^/]*/[^/]*$,,g" | tr -d '/' | sort -u | while read _epoch_; do
        [[ "$_epoch_" =~ ^[[:xdigit:]]+$ ]] && {
            _epoch_4_="$(python "$k4dbsub/base.py" "$((0x$_epoch_))" 4)";
            _epoch_32_="$(python "$k4dbsub/base.py" "$((0x$_epoch_))" 32)"
        } || {
            _epoch_4_='0';
            _epoch_32_='0'
        };
        printf "%-33s %-19s %-9s\n" "$_epoch_4_" "$_epoch_" "$_epoch_32_";
    done
}
k4epochspan ()
{
    {
        k4dir_epoch_span | awk '{print $2,$3}';
        echo $@
    } | k4_squeeze
}
k4fdc ()
{
    local _isbe_="$1" _name_="$2";
    local _term_lines_=$(( $(tput li) - 5 ));
    [ "$_isbe_" ] || _isbe_='.';
    local _epoch_="$(k4epoch "$_isbe_" )";
    local _pool_="${_epoch_}/%";
    local _list_="${_epoch_}/=";
    local _idx_="${_epoch_}/^";
    local _env_="${_epoch_}/_";
    local _hst_="${_epoch_}/,";
    [ -d "$_isbe_" ] || {
        chkerr "$FUNC_name_ _isbe_ not a dir : $_isbe_ (d51da6a)";
        return 1
    };
    [ -w "$_isbe_" ] || {
        chkerr "$FUNC_name_ _isbe_ not writeable : $_isbe_ (d51da6b)";
        return 1
    };
    [ -x "$_isbe_" ] || {
        chkerr "$FUNC_name_ _isbe_ not executeable :$_isbe_ (d51da6c)";
        return 1
    };
    [ "$_name_" ] || true;
    mkdir -p "${_epoch_}/%/";
    local _pool_="$(mktemp -d "${_epoch_}/%/_d_XXXX" )";
    k4db_hl '~';
    local _tmpf_="$(mktemp                          "${_pool_}/${FUNCNAME}-XXXX")";
    find "$_isbe_" -maxdepth 1 -type f | sort -id | head "$k4_term_lines" | tee "$_tmpf_" | column;
    [ "$k4_term_lines" -lt "$(( $(wc -l "$_tmpf_" ) ))" ] && k4db_hl '#' || true;
    k4db_hl '~';
    local _tmpf_="$(mktemp                        "${_pool_}/${FUNCNAME}-XXXX")";
    find "$_isbe_" -maxdepth 1 -type d | sort -id | head "$k4_term_lines" | tee "$_tmpf_" | column;
    [ "$k4_term_lines" -lt "$(( $(wc -l "$_tmpf_" ) ))" ] && k4db_hl '#' || true;
    echo "rm -f ${_isbe_}/%/_d_${_epoch_}_...."
}
k4k ()
{
    local uidln="$1" uidlnd="$k4db/pool/0/uidln";
    [ "$uidln" ] && k4kr "$uidln" || knkr "$1" || {
        ls "$uidlnd" | while read uidln; do
            k4kr "${uidlnd}/${uidln}";
        done
    }
}
k4ki ()
{
    local days="$1";
    [ "$days" ] || days=57;
    [[ $days =~ ^-?[0-9]+$ ]] || chkerr "$FUNCNAME : arg1 interger expected days='$days' (af7e0)";
    printf '%x' "$(( $(date '+%s') + 86400 * $days ))"
}
k4kl ()
{
    k4kr $@ | sed 's/^%kr /%kl /'
}
k4km ()
{
    local xs="$1" ss="$2" epoch="$3" span="$4";
    [ "$xs" ] || {
        set $(echo | tai64n | tr '\n' ' ' | sed -e 's/^@4[0]*//' -e 's/.\{8\}/& /');
        xs="$1" ss="$2"
    };
    [ "$ss" ] || ss="00000000";
    local epoch="$(echo "$seed" | sed -e 's:/[^/]*$::' -e 's:/::g' )";
    local xa="$(echo 0x$xs 0x$epoch | awk '{printf "%d %d +p\n",$1,$2}' | dc - | awk '{printf "%x \n",$1}')";
    {
        echo "${pxrt}${seed}" | sed -e 's:.*/:& :' -e 's/ .*//';
        echo $xa;
        echo $xs $ss;
        echo $epoch;
        echo "$( gpw 1 $(( ${#epoch} * ${#epoch} / 18 + 4 )) | awk '{printf "%8s",$1}' )";
        echo "$(python $k4db/sub/base.py $(( 0x$xs + 0x$ss + 0x$epoch )) 32)";
        echo "$(python $k4db/sub/base.py $(( 0x$(echo $seed | sed -e 's;.*/;;') )) 32)";
        date -j -r "$((0x$xs))" "$k4_ht_strftime"
    } | k4_squeeze;
    echo
}
k4kr ()
{
    local kl k4="$1";
    k4db_validate_k4 "$k4" || return 1;
    kl="$( { k4_headg '^%kk ' "$k4" | k4db_squash_defaults | sed 's/^%kk /%kr /'
          k4_headg '^%ks ' "$k4" | sed 's/^%ks /%s /' ;} | k4_squeeze )";
    [ "$kl" ] || kl="$( k4_headg '^%km\ ' "$k4" | sed -e 's/_/ /g'               | awk '{printf "%s %s %s ","\%kr",$5,$6}'
            k4_headg '^%ks\ ' "$k4" | sed -e 's/^%ks /%s /' )";
    echo "$kl" | k4_squeeze
}
k4krm ()
{
    local arg1=$1 k4=$2;
    k4db_validate_k4 "$k4" || return 1;
    local k4d="${k4%/*}";
    local k4x="$(mktemp ${k4d}/__tmp.kdb-XXXX)";
    k4_headv "$arg1" "$k4" >> "$k4x";
    k4_body "$k4" >> "$k4x";
    [ -e "${k4},v" ] || ci -m"(by $FUNCNAME)" -l -t-kdb -q "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    cat "$k4x" > "$k4";
    touch "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    rm -i -f "$k4x"
}
k4new ()
{
    local k4="$1" xs="$2" ss="$3" kd;
    [ "$xs" -a "$ss" ] || {
        chkerr "$FUNCNAME { xs and ss } not set (d1c1edd)";
        return 1
    };
    kd="${k4%/*}";
    [ -d "$kd" ] || {
        chkerr "kd=$kd not directory (d1b0a1d)";
        return 1
    };
    [ -w "$kd" ] || {
        chkerr "kd=$kd not writeable (d1b19d5)";
        return 1
    };
    touch "${k4}-new"
}
k4p ()
{
    find $k4db/$k4_pool -name =\* | sed 's/.*0//' | sort -d | column;
    echo $k4_pool | sed 's/.*0/0/'
}
k4pool ()
{
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local uidptr="$k4db/$k4_pool/uidptr";
    find $idxptr $uidhln $uidptr -type f || true
}
k4poolindex ()
{
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local last="$k4db/$k4_env/$FUNCNAME";
    local ptrf idx uid val k4f idx_uidptr;
    [ -e "$last" ] && {
        expr "$(find $idxptr $uidptr $uidhln -newer $last)" > /dev/null || return 0
    } || true;
    find "$idxptr" -regex '.*/idxptr/[[:xdigit:]]*$' -delete;
    find "$uidhln" -regex '.*/uidhln/[[:xdigit:]]\{16\}$' -delete;
    find "$uidptr" -regex '.*/uidptr/[[:xdigit:]]\{16\}$' -type f | awk '{printf "%d %s\n",NR,$1}' | while read idx_uidptr; do
        set $idx_uidptr;
        ptrf=$2;
        k4f="$(awk 'NR==1 {print}' "$ptrf")";
        uid="$(awk 'END   {print}' "$ptrf")";
        idx="$(python "$k4dbsub/base.py" "$1" 4 )";
        val=$(k4_headg '^%kv ' "$k4f" | k4_arg 2);
        expr "$val" : '^[[:xdigit:]]\{8\}$' > /dev/null || val="55c305f0";
        ln "$k4f" "$uidhln/$uid";
        printf '%s\n%s' "$k4f" "$uid" > "$idxptr/$idx";
        touch -t "$(xs2touch "$val")" "$idxptr/$idx";
    done;
    find "$uidptr" -regex '.*/uidptr/[[:xdigit:]]\{16\}$' -delete;
    find "$idxptr" -regex '.*/idxptr/[[:xdigit:]]*$' -type f | while read ptrf; do
        uid="$(awk 'END   {print}' "$ptrf")";
        ln -f "$ptrf" "$uidptr/$uid";
    done;
    touch $last
}
k4refresh ()
{
    local k4="$1" xs="$2" ss="$3";
    local ok4d="${k4%/*}";
    set $(k4km "$k4db" "$xs" "$ss" );
    local nk4d="${1}";
    mkdir -p "$nk4d";
    ok4d2 = $ok4d rename sans ^;
    mv -i "$ok4d" "$nk4d/$ok4d2"
}
k4setxsss ()
{
    set $(echo | tai64n | sed -e 's/^@4[0]*//' -e 's/.\{8\}/& /');
    export xs=$1 ss=$2
}
k4stat ()
{
    local f fs;
    [ "$1" ] && fs="$1" || fs="$(cat)";
    shift;
    [ "$1" ] && $FUNCNAME $@;
    [ "$fs" = "-h" -o "$fs" = "--help" ] && {
        chkwrn "Usage, for arg1 (or per line stdin)";
        chkwrn "return: n-inode chksum size mdate filename"
    } || {
        echo "$fs" | while read f; do
            [ -f "$f" ] && {
                {
                    stat -f '%l %i %m' "$f";
                    cksum "$f"
                } | tr '\n' ' ' | awk '{printf "%x%07x %08x % 8x %8x ",$1,$2,$4,$5,$3}';
                echo "$f"
            } || chkerr "$FUNCNAME : not a regular file : $f";
        done
    }
}
k_ ()
{
    local day="$1";
    $k4db_logstd "begin $$ : k4since='$k4since' $FUNCNAME $day";
    [ "$day" ] || day=3;
    local k4since;
    k4since="-mtime -${day}" kj .;
    $k4db_logstd "end $$ : k4since='$k4since' $FUNCNAME $day"
}
k__ ()
{
    local min="$1";
    $k4db_logstd "begin $$ : k4since='$k4since' $FUNCNAME $min";
    [ "$min" ] || min=90;
    local k4since;
    k4since="-mmin -${min}" kj .;
    $k4db_logstd "end $$ : k4since='$k4since' $FUNCNAME $arg"
}
ka ()
{
    $k4db_logstd "start $$ : $FUNCNAME $*";
    local k4;
    set $(k4db_in_id "$1");
    k4="$1";
    [ -e "$k4" ] || chkerr "invalid ptr (no $k4)" || return 1;
    aspell -c "$k4";
    k4db_mk_idxptr "0" "$k4";
    [ -e "${k4},v" ] || ci -m"(by $FUNCNAME)" -l -t-kdb -m'aspell' -q "$k4";
    [ "${k4}" -nt "${k4},v" ] && ci -m"(by $FUNCNAME)" -l -q "$k4";
    k4_headg "$k4_topic" "$k4";
    k4_inventory "$k4";
    $k4db_logstd "end $$ : $FUNCNAME $*"
}
kc ()
{
    $k4db_logstd "start $$ : $FUNCNAME $@";
    set $(k4db_in_id "$1");
    export k4="$1";
    k4db_validate_k4 "$k4" || return 1;
    [ -t 1 ] && {
        k4db_hl '=';
        k4db_hl '~';
        k4_headg "." "$k4" | k4db_squash_defaults;
        k4_body "$k4";
        k4db_hl '~';
        k4db_hl '\';
        k4_headg "$k4_topic" "$k4";
        k4_inventory "$k4";
        k4db_hl '/'
    };
    [ -t 1 ] || cat "$k4";
    k4db_mk_idxptr "0" "$k4";
    $k4db_logstd "end $$ : $FUNCNAME $@"
}
kcs ()
{
    kc $@ | less
}
kdel ()
{
    $k4db_fstart;
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    [ "$1" ] && set $(k4db_in_id "$1") || set $(k4db_in_id "0");
    local k4=$1 uid=$2;
    local k4d="${k4%/*}";
    k4db_validate_k4 "$k4" || return 1;
    k4_valid_dir "$k4d" || chkerr "$FUNCNAME $1 : error (d2ec9d0)" || return 1;
    local a;
    k4db_hl '=';
    k4db_hl '~';
    k4_body "$k4";
    k4db_hl '~';
    k4db_hl '\';
    k4_headv "$k4_topic" "$k4";
    k4db_hl '.';
    k4_headg "$k4_topic" "$k4";
    k4_inventory "$k4";
    k4db_hl '/';
    chkwrn "DELETE $k4d/";
    read -n1 -p "(y/N) " a;
    echo;
    [ "$a" = "y" ] && {
        find "$uidhln" -samefile "$k4" -delete;
        find "$uidptr" "$idxptr" -samefile "$uidptr/$uid" -delete;
        rm -i -rf "$k4d/"
    } || chkwrn "$FUNCNAME $1 : cancled"
}
kg ()
{
    k4db_valid_cmd || chkerr "$FUNCNAME : fail k4db_valid_cmd bc73b10 " || return 1;
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local uid ptr uidhlnf;
    local xs filter="$1" k4ex="$2";
    local k4_topic k4_search="$k4_search";
    [ "$k4ex" ] && {
        k4_topic="$k4ex" k4_search="$k4ex"
    } || k4_topic="^%ks ";
    k4db_hl '~';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    find "$uidhln" -type f | while read uidhlnf; do
        uid="${uidhlnf##*/}";
        k4_headg "$k4_search" "$uidhlnf" | grep $k4case -qE "$filter" && {
            idxptrf=$(grep --files-with-matches "$uid" "$idxptr/"* | awk 'NR==1 {print}' );
            id="$(printf '% 4s' "${idxptrf##*/}")";
            xs="${uid::8}";
            k4_headg "$k4_topic" "$uidhln/$uid" | awk -v id="$id" -v xs="$xs" 'NR==1{sub(/^/,id" "xs" ")}1' | sed -e "s/^%/             %/" | $k4_unlong
        } || {
            idxptrf=$(grep --files-with-matches "y $uid" "$idxptr/"* | awk 'NR==1 {print}' );
            rm -i -f "$uidptr/$uid";
            rm -i -f "$uidhln/$uid"
        };
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME '${filter}' : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
kgl ()
{
    k4_search='^%k(s|m|t|j) ' kg $@
}
kgm ()
{
    k4_search='^%km ' kg $@
}
kgs ()
{
    k4_search='^%ks ' kg $@
}
kgt ()
{
    k4_search='^%kt ' kg $@
}
kh ()
{
    $k4db_logstd "start $$ : $FUNCNAME $@";
    set $(k4db_in_id "$1");
    export k4="$1";
    k4db_validate_k4 "$k4" || return 1;
    [ -e "$k4" ] || chkerr "$FUNCNAME no k4='$k4' (bc785a2)" || return 1;
    [ -t 1 ] && {
        k4db_hl '~';
        k4_headg "." "$k4" | k4db_squash_defaults;
        k4db_hl '~'
    };
    [ -t 1 ] || k4_headg "." "$k4";
    k4db_mk_idxptr "0" "$k4";
    $k4db_logstd "end $$ : $FUNCNAME $@"
}
kinv ()
{
    k4_inventory "$(k4db_in_id "$1" | awk '{print $1}' )"
}
kj ()
{
    $k4db_logstd "begin $$ : k4since='$k4since' $FUNCNAME $arg";
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    [ "$#" = 0 ] && {
        k4_help;
        return 1
    };
    local k4 no nx xs filter;
    expr "$*" : '^(.*)$' > /dev/null && filter="$*" || {
        [ "$#" -gt 0 ] && filter=$(echo -n '('
                while [ $# -ne 0 ] ; do
                  echo -n "$1" ; shift ; [ $# -ne 0 ] && echo -n '|'
                  done ; echo ')' )
    };
    local _n4_;
    local _nd_="$(k4_count_uidhln)";
    k4db_valid_cmd || chkerr "$FUNCNAME : fail k4db_valid_cmd d3dde99" || return 1;
    k4db_hl '\';
    k4db_fk4 | while read k4; do
        k4_headg "$k4_search" "$k4" | grep "$k4case" -qE "$filter" && {
            _nd_="$(( _nd_ + 1 ))";
            _n4_="$(python $k4dbsub/base.py "$_nd_" 4)";
            k4db_mk_idxptr "$_n4_" "$k4";
            k4db_idxptr_ks "$_n4_"
        };
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": k4since='$k4since' $FUNCNAME '$filter' : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong;
    $k4db_logstd "end $$ : k4since='$k4since' $FUNCNAME $arg"
}
kjt ()
{
    k4_search="^%kt " kj $@
}
kk4 ()
{
    local filter inid=$2;
    [ "$inid" ] && filter=$1;
    [ "$inid" ] || inid=$1;
    [ "$inid" ] || inid=0;
    [ "$filter" ] || filter='(^%ks|^%kt|^%kk|^%kj|^%kp)';
    set $(k4db_in_id "$inid") || return 1;
    local k4="$1";
    k4db_validate_k4 "$k4" || return 1;
    k4_headg '^%ks\ ' "$k4";
    k4_headg '^%kk\ ' "$k4";
    k4_headg '^%km\ ' "$k4" | sed -e 's/_/ /g' | awk '{printf "%s %s "," \%k",$5}' | tr '\n' ' ';
    k4_headg "$filter" "$k4" | k4db_squash_defaults | tr '\n' ' ';
    echo
}
kkrrr_kv ()
{
    cat  <<eof
    read %kv v c
    recalculate %kv v c
    replace %kv v c
eof

}
kl ()
{
    local ex="$1";
    local uidhln="$k4db/$k4_pool/uidhln" idxptr="$k4db/$k4_pool/idxptr";
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls "$uidhln" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xs="${uid::8}";
        bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $2}')";
        expr "$bg" : '^[[:xdigit:]]\{8\}$' > /dev/null || bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $3}')";
        bg="$(printf "%06x\n" "$(( 0x${bg} % 0xffffff ))")";
        fg="bg xor nulltime xor color";
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xs";
            printf '%s\r' "${xs}";
            k4_headg "$ex" "$uidhln/$uid" | k4db_squash_defaults | awk -v xs="$xs" '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xs";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort acquisi} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
kll ()
{
    kl "$k4_topic"
}
klll ()
{
    kl "$k4_search"
}
klr ()
{
    local ex="$1";
    local uidhln="$k4db/$k4_pool/uidhln" idxptr="$k4db/$k4_pool/idxptr";
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls -r "$uidhln" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xs="${uid::8}";
        bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $2}')";
        expr "$bg" : '^[[:xdigit:]]\{8\}$' > /dev/null || bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $3}')";
        bg="$(printf "%06x\n" "$(( 0x${bg} % 0xffffff ))")";
        fg="bg xor nulltime xor color";
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xs";
            printf '%s\r' "${xs}";
            k4_headg "$ex" "$uidhln/$uid" | k4db_squash_defaults | awk -v xs="$xs" '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xs";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort rev-acquisi} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
klrl ()
{
    klr "$k4_topic"
}
klrll ()
{
    klr "$k4_search"
}
klv ()
{
    local ex="$1";
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local xx;
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls -tr "$uidptr" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xx="$(k4_headg "^%kv " "$uidhln/$uid" | awk 'NR==1 {print}' | k4_arg 2 )";
        [ "$xx" ] || xx='........';
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xx";
            printf '%s\r' "${xx}";
            k4_headg "$ex" "$uidhln/$uid" | awk 'NR==1 {print}' | k4db_squash_defaults | awk '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xx";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort acquisi} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
klvl ()
{
    klv "$k4_topic"
}
klvll ()
{
    klv "$k4_search"
}
klvr ()
{
    local ex="$1";
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    local xx uid id;
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls -t "$uidptr" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xx="$(k4_headg "^%kv " "$uidhln/$uid" | awk 'NR==1 {print}' | k4_arg 2 )";
        [ "$xx" ] || xx='........';
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xx";
            printf '%s\r' "${xx}";
            k4_headg "$ex" "$uidhln/$uid" | k4db_squash_defaults | awk '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xx";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort rev-acquisi} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
klvrl ()
{
    klvr "$k4_topic"
}
klvrll ()
{
    klvr "$k4_search"
}
kn ()
{
    return 1
}
krst ()
{
    k4db_valid_cmd || chkerr "$FUNCNAME : fail k4db_valid_cmd 3ddeb8" || return 1;
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    find $idxptr -regex '.*/idxptr/[[:xdigit:]]*$' -delete;
    find $uidptr -regex '.*/uidptr/[[:xdigit:]]\{16\}$' -delete;
    find $uidhln -regex '.*/uidhln/[[:xdigit:]]\{16\}$' -delete;
    k4db_hl '=';
    k4pool;
    k4db_hl '~';
    k4_list_tags;
    k4db_hl '.';
    k4_list_kc;
    k4db_hl '=';
    export k4since='';
    expr "$*" : '^(.*)$' > /dev/null && kj "$*" || {
        [ "$#" -gt 0 ] && kj $(echo -n '('
                while [ $# -ne 0 ] ; do
                  echo -n "$1" ; shift ; [ $# -ne 0 ] && echo -n '|'
                  done ; echo ')' )
    }
}
ks ()
{
    local invoke="$FUNCNAME $*";
    $k4db_logstd "begin $$ : $invoke";
    local ks="$*";
    k4setxsss;
    set $(k4db_dir_km $xs $ss);
    local kd=$1 xa=$2 xs=$3 ss=$4 epoch=$5 pw=$6 k4hash=$7 k4span32=$8 hdate=$9;
    shift;
    local km="$*";
    local k4x="$(mktemp "${kd}/__k4x-XXXX")";
    echo "%ks $ks" >> "$k4x";
    echo "%kt " >> "$k4x";
    k4_env_r_kc >> "$k4x";
    export k4="$kd/_${k4hash}.kdb";
    echo "%kk $epoch $pw $k4hash # class define #" >> "$k4x";
    echo "%kp $epoch $pw $k4hash # hier superord #" >> "$k4x";
    echo "%kj $epoch $pw $k4hash # motive subord #" >> "$k4x";
    echo "%kr $epoch $pw $k4hash # matrix root #" >> "$k4x";
    k4_env_r_kl >> "$k4x";
    echo "%km $km" >> "$k4x";
    local kn=$(nevernowf $xs);
    local knfd=$(nevernowd $xs);
    local knfx=$(nevernowx $xs);
    echo "%kn $kn %d $knfd %x $knfx" >> "$k4x";
    local vc='0.0029';
    local v="$(dc -e "$((0x$xs)) 2 / $((0x$xs)) v v + $vc * p" | awk '{printf "%08x",$1}')";
    local vv="$(dc -e "$((0x$xs$ss)) v 2 / p" | awk '{printf "%x\n",0x$1}')";
    echo "%kv $v %c $vc # value key #" >> "$k4x";
    local ki="$(k4db_addxd $xs $((86400 * 57)) )";
    local kiht="$(date -j -r 0x$ki "$k4_ht_strftime")";
    echo "%ki $ki $kiht # review interval" >> "$k4x";
    local e="$(printf '%x' "$(( $((0x$xs)) - 86400 * 18 ))" )";
    echo "%ke $e # event begin" >> "$k4x";
    echo "%kz $xs # event end" >> "$k4x";
    [ -e "$k4" ] && k4_headg . "$k4" >> "$k4x";
    printf "\n\n# $ks\n\n" >> "$k4x";
    [ -e "$k4" ] && k4_body . "$k4" >> "$k4x";
    mv -i "$k4x" "$k4";
    k4db_k4_head_seq "$k4";
    k4db_validate_k4 "$k4" || return 1;
    ci -m"(auto $FUNCNAME)" -l -t-kdb -q "$k4";
    k4db_mk_idxptr "$xs" "$k4";
    k4db_mk_idxptr "0" "$k4";
    k 0;
    k4_env_wlink "$k4";
    k4db_idx "$k4";
    $k4db_logstd "end $$ : $invoke"
}
ksynopsys ()
{
    local k4="$(k4db_in_id "$1" | awk '{print $1}' )";
    k4_headg "$k4_topic" "$k4";
    k4_inventory "$k4"
}
kt ()
{
    local ex="$1";
    local uidhln="$k4db/$k4_pool/uidhln" idxptr="$k4db/$k4_pool/idxptr";
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls -tr "$uidhln" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xs="${uid::8}";
        bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $2}')";
        expr "$bg" : '^[[:xdigit:]]\{8\}$' > /dev/null || bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $3}')";
        bg="$(printf "%06x\n" "$(( 0x${bg} % 0xffffff ))")";
        fg="bg xor nulltime xor color";
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xs";
            printf '%s\r' "${xs}";
            k4_headg "$ex" "$uidhln/$uid" | k4db_squash_defaults | awk -v xs="$xs" '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xs";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort mod} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
ktl ()
{
    kt "$k4_topic"
}
ktll ()
{
    kt "$k4_search"
}
ktr ()
{
    local ex="$1";
    local uidhln="$k4db/$k4_pool/uidhln" idxptr="$k4db/$k4_pool/idxptr";
    k4db_hl '\';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    k4poolindex;
    ls -t "$uidhln" | while read uid; do
        id=$(grep --files-with-matches "$uid" "$idxptr"/* | awk 'NR==1 {print}' );
        id="${id##*/}";
        xs="${uid::8}";
        bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $2}')";
        expr "$bg" : '^[[:xdigit:]]\{8\}$' > /dev/null || bg="$(k4_headg "^%km " "$uidhln/$uid" | tr '_' ' ' | awk 'NR==1 {print $3}')";
        bg="$(printf "%06x\n" "$(( 0x${bg} % 0xffffff ))")";
        fg="bg xor nulltime xor color";
        [ "$ex" ] && {
            printf '%-4s %s ' "$id" "$xs";
            printf '%s\r' "${xs}";
            k4_headg "$ex" "$uidhln/$uid" | k4db_squash_defaults | awk -v xs="$xs" '{printf "\033[12C%s %s\n","",$0}'
        } || {
            printf '%4s %s ' "$id" "$xs";
            k4_headg '^%ks ' "$uidhln/$uid" | awk 'NR==1 {print}'
        } | $k4_unlong;
    done;
    k4db_hl '/';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": $FUNCNAME $@ {sort rev-mod} : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
ktrl ()
{
    ktr "$k4_topic"
}
ktrll ()
{
    ktr "$k4_search"
}
kv ()
{
    local idxptr="$k4db/$k4_pool/idxptr";
    local uidptr="$k4db/$k4_pool/uidptr";
    local uidhln="$k4db/$k4_pool/uidhln";
    k4db_valid_cmd || chkerr "$FUNCNAME : fail k4db_valid_cmd bc73b10 " || return 1;
    local uidln uid filter;
    expr "$*" : '^(.*)$' > /dev/null && filter="$*" || {
        [ "$#" -gt 0 ] && filter=$(echo -n '('
                while [ $# -ne 0 ] ; do
                  echo -n "$1" ; shift ; [ $# -ne 0 ] && echo -n '|'
                  done ; echo ')' )
    };
    local k4_topic='^%ks ';
    k4db_hl '~';
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.0;
    find "$uidhln" -regex '.*/uidhln/[[:xdigit:]]\{16\}$' -type f | while read uidhlnf; do
        k4_headg "$k4_search" "$uidhlnf" | grep $k4case -qE "$filter" && {
            uid="${uidhlnf##*/}";
            find "$uidptr" "$idxptr" -samefile "$uidptr/$uid" -delete;
            rm -i -f "$uidhlnf"
        } || {
            uid="${uidhlnf##*/}";
            uidptrf="$uidptr/$uid";
            idxptrf="$(find "$idxptr" -samefile "$uidptrf")";
            id="$(printf '% 4s' "${idxptrf##*/}")";
            xs="${uid::8}";
            printf '%s %s %s' "$id" "$xs" "$(k4_headg '^%ks ' "$uidhlnf" | awk 'NR==1 {print}')" | $k4_unlong
        };
    done;
    xssdaysec > $k4db/$k4_pool/tx.${FUNCNAME}.1;
    [ -t 1 ] && {
        k4epoch ":";
        k4db_linkcount ": k4since='$k4since' $FUNCNAME '${filter}' : ";
        k4db_xss_ddiff "$k4db/$k4_pool/tx.${FUNCNAME}" seconds
    } | k4_squeeze | tee -a "$k4db/$k4_hst/${FUNCNAME}.log" | $k4_unlong
}
kvl ()
{
    k4_search='^%k(s|m|t|j) ' kv $@
}
kvm ()
{
    k4_search='^%km ' kv $@
}
kvs ()
{
    k4_search='^%ks ' kv $@
}
kvt ()
{
    k4_search='^%kt ' kv $@
}
kwds ()
{
    local w;
    sed -E -e '/^%k(d|r|r|p|nd|nx|no|i|e|v|a|z)(_|\ |$)/d' -e '/^[[:xdigit:]]\{8\}/d' -e 's/http.*( |$)//' | tr -c '[:alnum:]_-=#' ' ' | tr ' ' '\n' | sed -e '/^...$/d' -e '/^..$/d' -e '/^.$/d' -e '/^$/d' -e '/^[[:xdigit:]]\{8\}/d' -e '/^_[[:xdigit:]]\{8\}/d' | aspell -l en munch | tr ' ' '\n' | sed -e 's:/.*::' -e '/^...$/d' -e '/^..$/d' -e '/^.$/d' -e '/^$/d' | sort --ignore-case --unique | while read w; do
        {
            grep -iEq "(^|\ )${w}(\ |$)" "$k4db_ntag" || echo "$w"
        };
    done | while read w; do
        {
            grep -iE "(^|\ )${w}(\ |$)" "$k4db_tags" || echo "$w"
        } | awk '{print $1}';
    done
}
logerr ()
{
    echo ">>> $* <<<" | tai64n >> "${k4db}/${k4_pool}/log"
}
logwrn ()
{
    echo "^^^ $* ^^^" | tai64n >> "${k4db}/${k4_pool}/log"
}
nevernowd ()
{
    local i xs=$1 dxs=$(( 0x$xs ));
    local ke=1438844400 day=86400 is="6 7 9 12 14 16 18 24 28 32 38 43 57 63 86 194";
    local dxs=$(( dxs - day ));
    for i in $is;
    do
        printf '%02d/%02d ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
    done
}
nevernowf ()
{
    local i xs=$1;
    local dxs=$(( 0x${xs} - day ));
    local ke=1438844400 day=86400 is="6 7 9 12 14 16 18 24 28 32 38 43 57 63 86";
    local ke=1438844400 day=86400 is="6 7 9 12 14";
    for i in $is;
    do
        {
            python $k4db/sub/base.py "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" 4 | awk '{printf "%02s",$1}';
            echo "f";
            python $k4db/sub/base.py "$i" 4 | awk '{printf "%02s",$1}'
        } | tr -d '\n';
        echo -n ' ';
    done;
    local ke=1438844400 day=86400 is="             16 18 24 28 32 38 43 57 63 86 194";
    for i in $is;
    do
        {
            python $k4db/sub/base18.py "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" 4 | awk '{printf "%02s",$1}';
            echo h;
            python $k4db/sub/base18.py "$i" 4 | awk '{printf "%02s",$1}'
        } | tr -d '\n';
        echo -n ' ';
    done
}
nevernowh ()
{
    local i xs=$1;
    local dxs=$(( 0x${xs} - day ));
    local ke=1438844400 day=86400 is="6 7 9 12 14 16 18 24 28 32 38 43 57 63 86 194";
    for i in $is;
    do
        {
            python $k4db/sub/base.py "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" 18 | awk '{printf "%02s",$1}';
            echo h;
            python $k4db/sub/base.py "$i" 18 | awk '{printf "%02s",$1}'
        } | tr -d '\n';
        echo -n ' ';
    done
}
nevernowo ()
{
    local i;
    local xs=$(xs);
    local dxs=$(printf %d "0x$xs");
    local i xs=$1 dxs=$(( 0x$xs ));
    local ke=1438844400 day=86400 is="6 7 9 12 14 16 18 24 28 32 38 43 57";
    local dxs=$(( dxs - day ));
    for i in $is;
    do
        printf '%02oo%02o ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
    done;
    echo
}
nevernowx ()
{
    local i;
    local xs=$(xs);
    local dxs=$(printf %d "0x$xs");
    local ke=1438844400 day=86400 is="6 7 9 12 14 16 18 24 28 32 38 43 57 63 86 194";
    local dxs=$(( dxs - day ));
    for i in $is;
    do
        printf '%02xx%02x ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
    done
}
ptr ()
{
    rev="$(echo "$1" | cut -d\. -f1).$2";
    ip="$(echo "$1" | cut -d\. -f2-)";
    [ "$ip" = "$1" ] && echo "${rev}" || ptr $ip $rev
}
rdot4 ()
{
    ptr $(echo space.dot4.$@ | tr '\t\ ' '.') | tr '.' '\ '
}
rev ()
{
    local in="${*}^" x1i x1o x2o ot;
    [ "$in" = "^" ] && in="$(cat)^";
    [ -z "$(ecp "1" "$in")" ] && {
        ecp "2-" "$in";
        return 0
    };
    x1a="$(ecc "2-" "$in" )";
    x1b="$(ecc "1"  "$in" )";
    x2o="$(ecp "2-" "$in" )";
    ot="${x1a}^${x1b}${x2o}";
    $FUNCNAME "$ot"
}
revbyte ()
{
    return 1
}
revline ()
{
    return 1
}
revword ()
{
    return 1
}
stderr ()
{
    echo ">>> $* <<<" 1>&2
}
stdstd ()
{
    [ "$*" ] && {
        $k4db_logstd "$*";
        echo "$*";
        return 0
    } || true
}
stdwrn ()
{
    echo "^^^ $* ^^^" 1>&2
}
vk4db_env ()
{
    return 1
}
vk4db_head ()
{
    return 1
}
vk4db_headx ()
{
    return 1
}
vk4db_km ()
{
    return 1
}
xs ()
{
    xss | sed -e 's/.\{9\}$//'
}
xs2local ()
{
    local id="$1";
    [ "$id" ] || id="$(cat)";
    echo "$id" | xs2tai | tai64nlocal | sed 's/[\.|][0]*$//'
}
xs2s ()
{
    local xs="$1";
    [ "$xs" ] || xs="$(cat)";
    echo "$xs" | while read n; do
        printf "%d\n" "0x$n";
    done
}
xs2tai ()
{
    sed -e 's/^/@40000000/' -e 's/$/00000000/'
}
xs2touch ()
{
    local id="$1";
    [ "$id" ] || id="$(cat)";
    echo "$id" | xs2tai | tai64nlocal | sed 's/[\.|][0]*$//' | tr -d ': -' | sed 's/..$/\.&/'
}
xss ()
{
    echo | tai64n | sed -e 's/^@4[0]*//'
}
xssdaysec ()
{
    date "+%Y%m%d %H:%M:%S:%a:%s" | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/&_/'
}
