0, prepare 5d50-kindle-class
643b97ba 20230415 2337 Sat 15 Apr PDT 

\\ 59 files: 144877 sec (1 d 16 h 14 m 37 s)

1, hook
643b97bb 20230415 2337 Sat 15 Apr PDT 

                                 \1\  59 files: 144877 sec (1 d 16 h 14 m 37 s)
        [ $((0x$xs)) -ge 31556926 ] && { 
        [ $((0x$xs)) -ge 31556926 ] && { 
            y=$(( 0x$xs / 31556926 ));
            y=$(( 0x$xs / 31556926 ));
        [ $((0x$xs)) -ge 2629743 ] && { 
        [ $((0x$xs)) -ge 2629743 ] && { 
            m=$(( 0x$xs / 2629743 ));
            m=$(( 0x$xs / 2629743 ));
        [ $((0x$xs)) -ge 604800 ] && { 
        [ $((0x$xs)) -ge 604800 ] && { 
            w=$(( 0x$xs / 604800 ));
            w=$(( 0x$xs / 604800 ));
    for i in 86400 $(for i in 6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162;
    for i in 86400 $(for i in 6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162;
        [ $((0x$xs)) -ge 86400 ] && { 
        [ $((0x$xs)) -ge 86400 ] && { 
            d=$(( 0x$xs / 86400 ));
            d=$(( 0x$xs / 86400 ));
                                Bach  18 files  35913 sec (9 h 58 m 33 s)
SSH_AGENT_ENV='SSH_AGENT_PID 33309 SHELL_PID 33294'
SSH_AGENT_ENV='SSH_AGENT_PID 33309 SHELL_PID 33294'
                              Handel   4 files  28634 sec (7 h 57 m 14 s)
                                Eyck   2 files  25554 sec (7 h 5 m 54 s)
                            Telemann   7 files  13832 sec (3 h 50 m 32 s)
                           Cherubini   1 file   10810 sec (3 h 10 s)
                                Jean   1 file   6549 sec (1 h 49 m 9 s)
                            Coltrane   1 file   5794 sec (1 h 36 m 34 s)
    Handel_complete_recorder_sonatas   1 file   4325 sec (1 h 12 m 5 s)
Telemann_recorder_double_concertos_Bosgraaf   1 file   4264 sec (1 h 11 m 4 s)
Haydn_Niemecz_mechanical_organ_^A9Xsi_0ZMPE.opus.mp3   1 file   4132 sec (1 h 8 m 52 s)
Handel_recorder_sonatas_Bosgraaf_Corti   1 file   4132 sec (1 h 8 m 52 s)
                              Chopin  10 files  3980 sec (1 h 6 m 20 s)
        [ $((0x$xs)) -ge 3600 ] && { 
        [ $((0x$xs)) -ge 3600 ] && { 
            h=$(( 0x$xs / 3600 ));
            h=$(( 0x$xs / 3600 ));
        Early_Italian_Recorder_Music   1 file   2990 sec (49 m 50 s)
Telemann_TWV52f1_recorder_bassoon_Concerto   1 file   1366 sec (22 m 46 s)
                             Tartini   1 file   1315 sec (21 m 55 s)
Telemann_TWV52e1_traverso_recorder_concerto_E   1 file   1286 sec (21 m 26 s)
Paganini_la_carmagnola_^Muf47PVixOk.m4a.mp3   1 file   1156 sec (19 m 16 s)
    Mozart_k265_Variations_Baczewska   1 file   1156 sec (19 m 16 s)
Vivaldi_RV443_recorder_concerto_Steger_Gabetta   1 file   1114 sec (18 m 34 s)
                           Beethoven   1 file   1001 sec (16 m 41 s)
                            francaix   1 file   967 sec (16 m 7 s)
Haydn_Skowronek_mechanical_organ_pieces_Ventorum_^DARsV1   1 file   747 sec (12 m 27 s)
                               Walsh   2 files  609 sec (10 m 9 s)
                            20180808   1 file   267 sec (4 m 27 s)
                              Spirit   1 file   150 sec (2 m 30 s)
               Triple_Flageolet_1825   2 files  99 sec (1 m 39 s)
    [ "${#1}" -le 72 ] || { 
    [ "${#1}" -le 72 ] || { 
        chkerr "$FUNCNAME over 72 characters, not a parm '$1' (6123929b)";
        chkerr "$FUNCNAME over 72 characters, not a parm '$1' (6123929b)";
        [ $((0x$xs)) -ge 60 ] && { 
        [ $((0x$xs)) -ge 60 ] && { 
            n=$(( 0x$xs / 60 ));
            n=$(( 0x$xs / 60 ));
    exec 5>&- 6>&- 7>&- 8>&- 9>&-;
    exec 5>&- 6>&- 7>&- 8>&- 9>&-;
    exec 5>> "${cache_5_km}%" 6>> "${cache_6_search}%" 7>> "${cache_7_graph}%" 8>> "${cache_8_value}%" 9>> "${cache_9_topic}%";
    exec 5>> "${cache_5_km}%" 6>> "${cache_6_search}%" 7>> "${cache_7_graph}%" 8>> "${cache_8_value}%" 9>> "${cache_9_topic}%";
    validfn ckstat 4fe96539 000003ae || { 
    validfn ckstat 4fe96539 000003ae || { 
    } || return 2
    } || return 2
    for i in 2 5 11 17 23 29 41 47 53 59 71 83 89 101 107 113 131 137 149 167 173 179 191 197 227 233 239 251 257 263 269 281 293 311 317 347 353 359 383 389 401 31556952;
    for i in 2 5 11 17 23 29 41 47 53 59 71 83 89 101 107 113 131 137 149 167 173 179 191 197 227 233 239 251 257 263 269 281 293 311 317 347 353 359 383 389 401 31556952;
    [ $# = 2 ] && [ -d "$src" ] || { 
    [ $# = 2 ] && [ -d "$src" ] || { 
    [ "$#" -gt 2 ] && { 
    [ "$#" -gt 2 ] && { 
        find "$inpath" -mindepth 2 -type f -name \*.kdb | _kdb_file_headg '%km ' | awk '{print $6}' | sort -u;
        find "$inpath" -mindepth 2 -type f -name \*.kdb | _kdb_file_headg '%km ' | awk '{print $6}' | sort -u;
    printf "\010%s" "${_spin2:_spin2_p:1}" 1>&2;
    printf "\010%s" "${_spin2:_spin2_p:1}" 1>&2;
    printf "%0${w}xx%0${w}x\n" "$(( 1 + ( 0x$_xs - ke ) % i ))" "$i"
    printf "%0${w}xx%0${w}x\n" "$(( 1 + ( 0x$_xs - ke ) % i ))" "$i"
    find "${kdb}/0/p" -mindepth 1 -maxdepth 1 -type d -name "${kdb_pool}" > /dev/null || { 
    find "${kdb}/0/p" -mindepth 1 -maxdepth 1 -type d -name "${kdb_pool}" > /dev/null || { 
    find "$vkdb" -maxdepth 1 -type f -name kdb\.\*fn\.bash -exec sed -e '/^[_[:alpha:]][_[:alnum:]]* () /!d' -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' \{\} \; | sort | column -s'`' -t;
    find "$vkdb" -maxdepth 1 -type f -name kdb\.\*fn\.bash -exec sed -e '/^[_[:alpha:]][_[:alnum:]]* () /!d' -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' \{\} \; | sort | column -s'`' -t;
    find "$vkdb" -maxdepth 1 -type f -name "$kdb_init_bash" -exec sed -e '/^[_[:alpha:]][_[:alnum:]]* () /!d' -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' \{\} \; | sort | column -s'`' -t;
    find "$vkdb" -maxdepth 1 -type f -name "$kdb_init_bash" -exec sed -e '/^[_[:alpha:]][_[:alnum:]]* () /!d' -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' \{\} \; | sort | column -s'`' -t;
    find "$p" -mindepth 1 -prune -type f -name "$k" -exec printf "        K4 %s \n" \{\} \; | ct;
    find "$p" -mindepth 1 -prune -type f -name "$k" -exec printf "        K4 %s \n" \{\} \; | ct;
    find "$p" -mindepth 1 -prune -type f $not_find -exec printf "      FILE %s \n" \{\} \; | sort | ct;
    find "$p" -mindepth 1 -prune -type f $not_find -exec printf "      FILE %s \n" \{\} \; | sort | ct;
    find "$p" -mindepth 1 -prune -type d $not_find -exec printf "       DIR %s/\n" \{\} \; | sort | ct;
    find "$p" -mindepth 1 -prune -type d $not_find -exec printf "       DIR %s/\n" \{\} \; | sort | ct;
    find "$inpath" -mindepth 1 -maxdepth 1 -type f -name "${infile}-*" -regex ".*/${infile}-[[:xdigit:]]\{8\}$" | sort | sed -n -e :a -e "\$q;N;2,${rotatefile_keep}ba" -e 'P;D' | while IFS= read f; do
    find "$inpath" -mindepth 1 -maxdepth 1 -type f -name "${infile}-*" -regex ".*/${infile}-[[:xdigit:]]\{8\}$" | sort | sed -n -e :a -e "\$q;N;2,${rotatefile_keep}ba" -e 'P;D' | while IFS= read f; do
    find "$d" -maxdepth 1 -mindepth 1 -print0 | xargs -0 du -sk | sort -n | awk '{sum += $1; printf "%+11sk %+10sk %s %s %s\n", sum, $1, $2, $3, $4}'
    find "$d" -maxdepth 1 -mindepth 1 -print0 | xargs -0 du -sk | sort -n | awk '{sum += $1; printf "%+11sk %+10sk %s %s %s\n", sum, $1, $2, $3, $4}'
    [ "$t" = 1 ] && local t= || true;
    [ "$t" = 1 ] && local t= || true;
    [ "$f" = 1 ] && local f= || true;
    [ "$f" = 1 ] && local f= || true;
        mask=$(( mask + 1 ));
        mask=$(( mask + 1 ));
        mask=$(( mask + 1 ));
        mask=$(( mask + 1 ));
        mask=$(( mask + 1 ));
        mask=$(( mask + 1 ));
        find "$p" -mindepth 1 -prune -type f $not_find | awk 'END{printf "(%d/",FNR}';
        find "$p" -mindepth 1 -prune -type f $not_find | awk 'END{printf "(%d/",FNR}';
        find "$inpath" -mindepth 1 -maxdepth 1 -type f -name \*.kdb | grep -v "$_k4" | _kdb_file_headg '%km ' | awk '{print $6}' | sort -u;
        find "$inpath" -mindepth 1 -maxdepth 1 -type f -name \*.kdb | grep -v "$_k4" | _kdb_file_headg '%km ' | awk '{print $6}' | sort -u;
        [ $((0x$xs)) -ge 1 ] && s=$(( 0x$xs ));
        [ $((0x$xs)) -ge 1 ] && s=$(( 0x$xs ));
        [ "$y" -ge 1 ] && yn='y';
        [ "$y" -ge 1 ] && yn='y';
        [ "$w" -ge 1 ] && wn='w';
        [ "$w" -ge 1 ] && wn='w';
        [ "$s" -ge 1 ] && sn='s';
        [ "$s" -ge 1 ] && sn='s';
        [ "$n" -ge 1 ] && nn='m';
        [ "$n" -ge 1 ] && nn='m';
        [ "$m" -ge 1 ] && mn='m';
        [ "$m" -ge 1 ] && mn='m';
        [ "$h" -ge 1 ] && hn='h';
        [ "$h" -ge 1 ] && hn='h';
        [ "$d" -ge 1 ] && dn='d';
        [ "$d" -ge 1 ] && dn='d';
            find "$inpath" -maxdepth 1 -type f -name \*.kdb | _kdb_file_headg '%km ' | awk '{print $6}';
            find "$inpath" -maxdepth 1 -type f -name \*.kdb | _kdb_file_headg '%km ' | awk '{print $6}';
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
{ 
ytdl=/Users/geo/vcs/vend/yt-dlp_macos
ytdl=/Users/geo/vcs/vend/yt-dlp_macos
you=/Users/geo/vcs/you
you=/Users/geo/vcs/you
xssdaysec () 
xssdaysec () 
xss=6463757a2cd69d64
xss=6463757a2cd69d64
xss () 
xss () 
xskv    0xv # xs sum value
xskv    0xv # xs sum value
xs=6463757a
xs=6463757a
xs () 
xs () 
xs      xsd # aquisition time
xs      xsd # aquisition time
xn2float () 
xn2float () 
while [ $# -ne 0 ]; do
while [ $# -ne 0 ]; do
w3md () 
w3md () 
vkdb=/Users/geo/vcs/kdb
vkdb=/Users/geo/vcs/kdb
verb=chktrue
verb=chktrue
verb3=devnul
verb3=devnul
verb2=devnul
verb2=devnul
verb1=
verb1=
vend=/Users/geo/vcs/vend
vend=/Users/geo/vcs/vend
vcs=/Users/geo/vcs
vcs=/Users/geo/vcs
validfn 6fcde5cc 0000046d
validfn 6fcde5cc 0000046d
validfn () 
validfn () 
validex () 
validex () 
unlock () 
unlock () 
tss () 
tss () 
ts () 
ts () 
tmu () 
tmu () 
symview () 
symview () 
stderr 7ccc5704 00000037
stderr 7ccc5704 00000037
stderr 7ccc5704 00000037
stderr 7ccc5704 00000037
stderr () 
stderr () 
std_append () 
std_append () 
ss=2cd69d64
ss=2cd69d64
spin2 1263edf2 00000180
spin2 1263edf2 00000180
spin2 () 
spin2 () 
spin1 () 
spin1 () 
span2ssto () 
span2ssto () 
site=/Users/geo/vcs/site-6295
site=/Users/geo/vcs/site-6295
siffx c20a9040 000002f7
siffx c20a9040 000002f7
siffx () 
siffx () 
rubberband=/opt/pkg-2022Q4/bin/rubberband
rubberband=/opt/pkg-2022Q4/bin/rubberband
rsyncln () 
rsyncln () 
rotatefile () 
rotatefile () 
revargs () 
revargs () 
res=/Users/geo/vcs/pro/job/res
res=/Users/geo/vcs/pro/job/res
rb=/opt/pkg-2022Q4/bin/rubberband
rb=/opt/pkg-2022Q4/bin/rubberband
pub=/Users/geo/vcs/pub
pub=/Users/geo/vcs/pub
probeff () 
probeff () 
prependf ac39e52a 000001b2
prependf ac39e52a 000001b2
prependf () 
prependf () 
pool listing runthrough...
pool listing runthrough...
playffr () 
playffr () 
playff () 
playff () 
pkgsrc=/opt/pkgsrc
pkgsrc=/opt/pkgsrc
path_prepend () 
path_prepend () 
path_append () 
path_append () 
numlistdst () 
numlistdst () 
numlist () 
numlist () 
nevernowz () 
nevernowz () 
nevernowx () 
nevernowx () 
nevernowo () 
nevernowo () 
nevernowh () 
nevernowh () 
nevernowf () 
nevernowf () 
nevernowd () 
nevernowd () 
n=1
n=1
mvi     # mod time + kv * ki
mvi     # mod time + kv * ki
music=/Users/geo/vcs/pub/know/music
music=/Users/geo/vcs/pub/know/music
mp3range () 
mp3range () 
mkv     0xv # mod sum kv
mkv     0xv # mod sum kv
meta=/Users/geo/vcs/meta-61b6
meta=/Users/geo/vcs/meta-61b6
masterlink () 
masterlink () 
man_ops=-a
man_ops=-a
m       # mod time, find  k4 or k4,v
m       # mod time, find  k4 or k4,v
logwrn f279f00e 0000005f
logwrn f279f00e 0000005f
logwrn () 
logwrn () 
logexit () 
logexit () 
logerr 2db98372 0000005e
logerr 2db98372 0000005e
logerr () 
logerr () 
lock () 
lock () 
links='/Users/geo/k/5/a/8/d/b/57a1d24af8c^'
links='/Users/geo/k/5/a/8/d/b/57a1d24af8c^'
link='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/link'
link='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/link'
lacktone () 
lacktone () 
lacks5tone () 
lacks5tone () 
lacks2tone () 
lacks2tone () 
lacks1tone () 
lacks1tone () 
lacks15tones () 
lacks15tones () 
lacks155tones () 
lacks155tones () 
lacks125tones () 
lacks125tones () 
lacks1255tones () 
lacks1255tones () 
kz_mod
kz_mod
kz      xsd # event end
kz      xsd # event end
kx_mod
kx_mod
kx      xsd # topic expire
kx      xsd # topic expire
kwds () 
kwds () 
kv_mod
kv_mod
kv      0xv # value offset
kv      0xv # value offset
kt_mod
kt_mod
ksyn () 
ksyn () 
ksn () 
ksn () 
ks_mod  # %ks mod
ks_mod  # %ks mod
ks () 
ks () 
krst () 
krst () 
kr_mod
kr_mod
kpv -> kdb_pool_vptr ->> kdb_pool_ptr_vset
kpv -> kdb_pool_vptr ->> kdb_pool_ptr_vset
kpv () 
kpv () 
kpv #U> checks and sets arg1 vptr OR lists supported
kpv #U> checks and sets arg1 vptr OR lists supported
kp_mod
kp_mod
ko_mod
ko_mod
know=/Users/geo/vcs/pub/know
know=/Users/geo/vcs/pub/know
knnbxs () 
knnbxs () 
knbxs () 
knbxs () 
knbb2 () 
knbb2 () 
knbb () 
knbb () 
kn_mod
kn_mod
km_mod
km_mod
klv ->> kdb_print_vxssptr
klv ->> kdb_print_vxssptr
klv () 
klv () 
klt kltr         # list pool by mod
klt kltr         # list pool by mod
klr () 
klr () 
kllv () 
kllv () 
kllr () 
kllr () 
klllv () 
klllv () 
klllr () 
klllr () 
klll == tkrpjlnomcdviez
klll == tkrpjlnomcdviez
klll () 
klll () 
kll == kl tkjm
kll == kl tkjm
kll () 
kll () 
kl_mod
kl_mod
kl () 
kl () 
kl  klr          # list pool by xss (kdb_topic: kll kllr ; k4_search klll klllr)
kl  klr          # list pool by xss (kdb_topic: kll kllr ; k4_search klll klllr)
kk_mod
kk_mod
kk_hint () 
kk_hint () 
kj_mod
kj_mod
kj () 
kj () 
kinv () 
kinv () 
kind='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/0/kind'
kind='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/0/kind'
ki_mod
ki_mod
ki      0xs # topic review
ki      0xs # topic review
ke_mod
ke_mod
ke      xsd # event begin
ke      xsd # event begin
kdel () 
kdel () 
kdbxss () 
kdbxss () 
kdbtz () 
kdbtz () 
kdbtx () 
kdbtx () 
kdbt () 
kdbt () 
kdbo=geo@AAAA:k
kdbo=geo@AAAA:k
kdblog=kdblog
kdblog=kdblog
kdblog2=kdblog
kdblog2=kdblog
kdblog () 
kdblog () 
kdbeph () 
kdbeph () 
kdbdf () 
kdbdf () 
kdbd () 
kdbd () 
kdb_xs2touchfmt () 
kdb_xs2touchfmt () 
kdb_xs2tai () 
kdb_xs2tai () 
kdb_xs2local () 
kdb_xs2local () 
kdb_xs2h () 
kdb_xs2h () 
kdb_vptr=k4mi
kdb_vptr=k4mi
kdb_var=v
kdb_var=v
kdb_valid_parm () 
kdb_valid_parm () 
kdb_valid_file () 
kdb_valid_file () 
kdb_valid_dir () 
kdb_valid_dir () 
kdb_tmp=%
kdb_tmp=%
kdb_stdin_fold () 
kdb_stdin_fold () 
kdb_stat_mod () 
kdb_stat_mod () 
kdb_stat () 
kdb_stat () 
kdb_sec2h () 
kdb_sec2h () 
kdb_rcs () 
kdb_rcs () 
kdb_print_vxssptr () 
kdb_print_vxssptr () 
kdb_pool_vptr_xssptr () 
kdb_pool_vptr_xssptr () 
kdb_pool_vptr_ptr () 
kdb_pool_vptr_ptr () 
kdb_pool_vptr () 
kdb_pool_vptr () 
kdb_pool_ptr () 
kdb_pool_ptr () 
kdb_pool_knx () 
kdb_pool_knx () 
kdb_pool_kklink_xssptr () 
kdb_pool_kklink_xssptr () 
kdb_pool_add () 
kdb_pool_add () 
kdb_pool=0
kdb_pool=0
kdb_parm_set () 
kdb_parm_set () 
kdb_parm_get () 
kdb_parm_get () 
kdb_log=,
kdb_log=,
kdb_locksleep=3
kdb_locksleep=3
kdb_k4_synopsis () 
kdb_k4_synopsis () 
kdb_k4_list () 
kdb_k4_list () 
kdb_k4_kk_hint () 
kdb_k4_kk_hint () 
kdb_k4_inventory () 
kdb_k4_inventory () 
kdb_k4_head_seq () 
kdb_k4_head_seq () 
kdb_k4_fortify () 
kdb_k4_fortify () 
kdb_k4_body () 
kdb_k4_body () 
kdb_invoke='/Users/geo/vcs/kdb/kdb.init.bash ~/.profile.local (63b77ea3) #33294 X64636b7903b02144 '
kdb_invoke='/Users/geo/vcs/kdb/kdb.init.bash ~/.profile.local (63b77ea3) #33294 X64636b7903b02144 '
kdb_init_pool () 
kdb_init_pool () 
kdb_init_k4db () 
kdb_init_k4db () 
kdb_init_bash='64636b7d 2f289414 '
kdb_init_bash='64636b7d 2f289414 '
kdb_help () 
kdb_help () 
kdb_find_kp () 
kdb_find_kp () 
kdb_find_kl () 
kdb_find_kl () 
kdb_find_kj () 
kdb_find_kj () 
kdb_decs2touchfmt () 
kdb_decs2touchfmt () 
kdb_conf_bash=/Users/geo/vcs/kdb/kdb.conf
kdb_conf_bash=/Users/geo/vcs/kdb/kdb.conf
kdb_cache_upd () 
kdb_cache_upd () 
kdb_cache=c
kdb_cache=c
kdb_argn () 
kdb_argn () 
kdb_0_flaten_filename () 
kdb_0_flaten_filename () 
kdb=/Users/geo/k
kdb=/Users/geo/k
kd_mod
kd_mod
kc_mod
kc_mod
k4mi    xsd # review date
k4mi    xsd # review date
k4case=-i
k4case=-i
k4_value='^%(ke|ki|km|kq|kv|kx|kz)\ '
k4_value='^%(ke|ki|km|kq|kv|kx|kz)\ '
k4_unlong=ct
k4_unlong=ct
k4_topic='^%(ks|kt|kk)\ '
k4_topic='^%(ks|kt|kk)\ '
k4_search='^%(ks|kt|kk|km)\ '
k4_search='^%(ks|kt|kk|km)\ '
k4_open # open time
k4_open # open time
k4_ht_strftime='+%Y%m%d %a %H%M %Z %z'
k4_ht_strftime='+%Y%m%d %a %H%M %Z %z'
k4_graph='^%(kb|kc|kj|kl|km|kp|kr|kk)\ '
k4_graph='^%(kb|kc|kj|kl|km|kp|kr|kk)\ '
k4='/Users/geo/k//6/4/6/3/7/^/.6463757a.2cd69d64.kdb'
k4='/Users/geo/k//6/4/6/3/7/^/.6463757a.2cd69d64.kdb'
k () 
k () 
import_pubkey () 
import_pubkey () 
hms2sec e7a0bc8b 000001d6
hms2sec e7a0bc8b 000001d6
hms2sec () 
hms2sec () 
gstat () 
gstat () 
gsta () 
gsta () 
gst () 
gst () 
formfilestats () 
formfilestats () 
formfile () 
formfile () 
fdur='1 file: 01:08:52'
fdur='1 file: 00:19:16'
f2rb2mp3 () 
f2rb2mp3 () 
eof
eof
dusum () 
dusum () 
dufiles () 
dufiles () 
double and tripple l applies kdb_topic and k4_search as arg1
double and tripple l applies kdb_topic and k4_search as arg1
done; echo ')')"
done; echo ')')"
done)";
done)";
done)";
done)";
done | tr -d '\n');
done | tr -d '\n');
done | tr '\n' ' ');
done | tr '\n' ' ');
done | tr '\n' ' ') 31556952;
done | tr '\n' ' ') 31556952;
done 2>&1) || return 1;
done 2>&1) || return 1;
do
do
do
do
dirper () 
dirper () 
devnul 216e1370 0000001d
devnul 216e1370 0000001d
devnul 216e1370 0000001d
devnul 216e1370 0000001d
devnul () 
devnul () 
d='                                 \1\  59 files: 144877 sec (1 d 16 h 14 m 37 s)'
d='                                 \1\  59 files: 144877 sec (1 d 16 h 14 m 37 s)'
ct a92ae52e 00000098
ct a92ae52e 00000098
ct () 
ct () 
cmp=parc
cmp=parc
ckstatsum () 
ckstatsum () 
ckstat () 
ckstat () 
chkwrn 2683d3d3 0000005c
chkwrn 2683d3d3 0000005c
chkwrn 2683d3d3 0000005c
chkwrn 2683d3d3 0000005c
chkwrn () 
chkwrn () 
chkwait () 
chkwait () 
chktrue 28662120 00000060
chktrue 28662120 00000060
chktrue () 
chktrue () 
chkstd ee4aa465 00000032
chkstd ee4aa465 00000032
chkstd () 
chkstd () 
chkexit () 
chkexit () 
chkerr 4f18299d 0000005b
chkerr 4f18299d 0000005b
chkerr 4f18299d 0000005b
chkerr 4f18299d 0000005b
chkerr () 
chkerr () 
cf () 
cf () 
c='Paganini_la_carmagnola_^Muf47PVixOk.m4a.mp3'
c='Haydn_Niemecz_mechanical_organ_^A9Xsi_0ZMPE.opus.mp3'
bash_path=/opt/pkg-2022Q4/bin/bash
bash_path=/opt/pkg-2022Q4/bin/bash
base32rep='[/.0123456789abcdefghjkmnpqrstuvxyz]'
base32rep='[/.0123456789abcdefghjkmnpqrstuvxyz]'
base32re='[0123456789abcdefghjkmnpqrstuvxyz]'
base32re='[0123456789abcdefghjkmnpqrstuvxyz]'
base 74730885 000004ea
base 74730885 000004ea
base () 
base () 
back () 
back () 
b () 
b () 
ascii_filter () 
ascii_filter () 
a=1
a=1
_youtube_video_list () 
_youtube_video_list () 
_youtube_video () 
_youtube_video () 
_youtube_list () 
_youtube_list () 
_youtube_json2txt () 
_youtube_json2txt () 
_youtube_comment_unflatten () 
_youtube_comment_unflatten () 
_youtube () 
_youtube () 
_spin2_n=19
_spin2_n=15
_kdb_xss_sec_diff () 
_kdb_xss_sec_diff () 
_kdb_valid_pool () 
_kdb_valid_pool () 
_kdb_valid_k4 () 
_kdb_valid_k4 () 
_kdb_term_pright () 
_kdb_term_pright () 
_kdb_term_pleft () 
_kdb_term_pleft () 
_kdb_term_pcenter () 
_kdb_term_pcenter () 
_kdb_term_hline () 
_kdb_term_hline () 
_kdb_squeeze () 
_kdb_squeeze () 
_kdb_pool_stat () 
_kdb_pool_stat () 
_kdb_k4_default_squash () 
_kdb_k4_default_squash () 
_kdb_help_sub () 
_kdb_help_sub () 
_kdb_help_skel () 
_kdb_help_skel () 
_kdb_file_headv () 
_kdb_file_headv () 
_kdb_file_headg () 
_kdb_file_headg () 
_kdb_0_lockwait () 
_kdb_0_lockwait () 
_kdb_0_lockun () 
_kdb_0_lockun () 
_kdb_0_lock () 
_kdb_0_lock () 
_help_skel () 
_help_skel () 
_=spin2
_=spin2
USER=geo
USER=geo
UID=501
UID=501
TERM=xterm-256color
TERM=xterm-256color
SSH_AUTH_SOCK=/var/folders/2q/38nnbdg96z37p1m_y5sw_q740000gn/T//ssh-iLe1xiYxKufG/agent.33308
SSH_AUTH_SOCK=/var/folders/2q/38nnbdg96z37p1m_y5sw_q740000gn/T//ssh-iLe1xiYxKufG/agent.33308
SSH_AGENT_PID=33309
SSH_AGENT_PID=33309
SHLVL=3
SHLVL=3
SHELLOPTS=braceexpand:errexit:hashall:interactive-comments
SHELLOPTS=braceexpand:errexit:hashall:interactive-comments
SHELL=/bin/bash
SHELL=/bin/bash
PWD='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/5d50-kindle-class'
PWD='/Users/geo/k/5/a/8/d/b/57a1d24af8c^/5d50-kindle-class'
PS4='+ '
PS4='+ '
PPID=84126
PPID=84126
PKG_DEVELOPER=yes
PKG_DEVELOPER=yes
PIPESTATUS=([0]="0")
PIPESTATUS=([0]="0")
PATH='/Users/geo/vcs/pub/know/music:/opt/pkg/bin:/opt/pkg/sbin:/opt/pkg-64196bae/sbin:/opt/pkg-64196bae/bin:/opt/pkg-2022Q4/sbin:/opt/pkg-2022Q4/bin:/Users/geo/local/multitee/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:# /opt/pkg/sbin:# /opt/pkg/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/geo/bin:/Users/geo/sub:/Users/geo/vcs/kdb/sub'
PATH='/Users/geo/vcs/pub/know/music:/opt/pkg/bin:/opt/pkg/sbin:/opt/pkg-64196bae/sbin:/opt/pkg-64196bae/bin:/opt/pkg-2022Q4/sbin:/opt/pkg-2022Q4/bin:/Users/geo/local/multitee/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:# /opt/pkg/sbin:# /opt/pkg/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/geo/bin:/Users/geo/sub:/Users/geo/vcs/kdb/sub'
PARINIT='rTbgqR B=.,?_A_a Q=_s>|'
PARINIT='rTbgqR B=.,?_A_a Q=_s>|'
PAGER='less --jump-target=3'
PAGER='less --jump-target=3'
OSTYPE=darwin22
OSTYPE=darwin22
OS=Darwin
OS=Darwin
OPTIND=1
OPTIND=1
OPTERR=1
OPTERR=1
OPENSCADPATH=/Users/geo/vcs/pro/OpenSCAD/BOLTS
OPENSCADPATH=/Users/geo/vcs/pro/OpenSCAD/BOLTS
OLDPWD=/Users/geo/vcs/pub/know/music
OLDPWD=/Users/geo/vcs/pub/know/music
MACHTYPE=aarch64-apple-darwin22
MACHTYPE=aarch64-apple-darwin22
LSCOLORS=xefxcxdxbxegedabagacad
LSCOLORS=xefxcxdxbxegedabagacad
LOGNAME=geo
LOGNAME=geo
LOCALE=C
LOCALE=C
LOCALBASE=/opt/pkg
LOCALBASE=/opt/pkg
LINES=31
LINES=31
LC_ALL=C
LC_ALL=C
LANG=en_US.US-ASCII
LANG=en_US.US-ASCII
IFS=$' \t\n'
IFS=$' \t\n'
HOSTTYPE=aarch64
HOSTTYPE=aarch64
HOSTNAME=AAAA.local
HOSTNAME=AAAA.local
HOME=/Users/geo
HOME=/Users/geo
HISTSIZE=2600
HISTSIZE=2600
HISTFILESIZE=9600
HISTFILESIZE=9600
HISTFILE=/Users/geo/.bash_history
HISTFILE=/Users/geo/.bash_history
HISTCONTROL=erasedups
HISTCONTROL=erasedups
GROUPS=()
GROUPS=()
GPG_TTY=/dev/ttys001
GPG_TTY=/dev/ttys001
F=
F=
EUID=501
EUID=501
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EOF
EDITOR=/opt/pkg-64196bae/bin/vim
EDITOR=/opt/pkg-64196bae/bin/vim
DIRSTACK=()
DIRSTACK=()
COLUMNS=144
COLUMNS=144
COLORTERM=truecolor
COLORTERM=truecolor
BASH_VERSION='5.2.15(1)-release'
BASH_VERSION='5.2.15(1)-release'
BASH_VERSINFO=([0]="5" [1]="2" [2]="15" [3]="1" [4]="release" [5]="aarch64-apple-darwin22")
BASH_VERSINFO=([0]="5" [1]="2" [2]="15" [3]="1" [4]="release" [5]="aarch64-apple-darwin22")
BASH_SOURCE=([0]="/Users/geo/vcs/pub/know/music/comma_mp3.sh")
BASH_SOURCE=([0]="/Users/geo/vcs/pub/know/music/comma_mp3.sh")
BASH_SILENCE_DEPRECATION_WARNING=1
BASH_SILENCE_DEPRECATION_WARNING=1
BASH_LOADABLES_PATH=/usr/local/lib/bash:/usr/lib/bash:/opt/local/lib/bash:/usr/pkg/lib/bash:/opt/pkg/lib/bash:.
BASH_LOADABLES_PATH=/usr/local/lib/bash:/usr/lib/bash:/opt/local/lib/bash:/usr/pkg/lib/bash:/opt/pkg/lib/bash:.
BASH_LINENO=([0]="0")
BASH_LINENO=([0]="0")
BASH_CMDS=()
BASH_CMDS=()
BASH_ARGV=()
BASH_ARGV=()
BASH_ARGC=()
BASH_ARGC=()
BASH_ALIASES=()
BASH_ALIASES=()
BASHOPTS=checkwinsize:cmdhist:complete_fullquote:extquote:force_fignore:globasciiranges:globskipdots:hostcomplete:interactive_comments:patsub_replacement:progcomp:promptvars:sourcepath
BASHOPTS=checkwinsize:cmdhist:complete_fullquote:extquote:force_fignore:globasciiranges:globskipdots:hostcomplete:interactive_comments:patsub_replacement:progcomp:promptvars:sourcepath
BASH=/opt/pkg-2022Q4/bin/bash
BASH=/opt/pkg-2022Q4/bin/bash
>>>---
>>>---
>>>---
>>>---
>>>---
>>>---
<<<---
<<<---
<<<---
<<<---
---<<<
---<<<
%kt 
%kt 
%ks $ks
%ks $ks
%kr %% matrix reason   (why)
%kr %% matrix reason   (why)
%kq %% value relative  (value for)
%kq %% value relative  (value for)
%kp %% hier superord   (superior)
%kp %% hier superord   (superior)
%kn $knx
%kn $knx
%kn $knd
%kn $knd
%kl %% like rank       (similar)
%kl %% like rank       (similar)
%kk $eph
%kk $eph
%kj %% motive subord   (subordinate)
%kj %% motive subord   (subordinate)
%kc %% subject class   (^type)
%kc %% subject class   (^type)
%kb %% better subject  (better)
%kb %% better subject  (better)
${kdb}/0/pool/${kdb_pool}/vptr  # active vptr backstore
${kdb}/0/pool/${kdb_pool}/vptr  # active vptr backstore
$FUNCNAME error :
$FUNCNAME error :
$FUNCNAME error :
$FUNCNAME error :
#kpv {vptr}      # iff vptr arg1 supported, assign all ptr and backstore, else list
#kpv {vptr}      # iff vptr arg1 supported, assign all ptr and backstore, else list
#kpv xs          # on supported, assign vptr arg1 to all ptr and backstore
#kpv xs          # on supported, assign vptr arg1 to all ptr and backstore
#klv klvr         # list pool by vptr
#klv klvr         # list pool by vptr
#export kdb_vptr="k4mi"        # default vptr setting, kdb_init
#export kdb_vptr="k4mi"        # default vptr setting, kdb_init
#X> Text processing
#X> Text processing
#V> Validation action
#V> Validation action
#U> User command
#U> User command
#T> Time function
#T> Time function
#P> POSIX action
#P> POSIX action
#N> Numeric processing
#N> Numeric processing
#L> Log action
#L> Log action
#K> k4 manipulation
#K> k4 manipulation
#B> Beta development
#B> Beta development
#:: the former is intended to provide data for the latter
#:: the former is intended to provide data for the latter
#:: the former is intended to provide data for the latter
#:: the former is intended to provide data for the latter
#:: env hashfn= to set the hashing function, "%08x %8x %s\n" cksum program
#:: env hashfn= to set the hashing function, "%08x %8x %s\n" cksum program
#:: env hashex= to set the hashing function, other than the cksum default
#:: env hashex= to set the hashing function, other than the cksum default
#:: $FUNCNAME {function} {hash} ; return no error, if hash match
#:: $FUNCNAME {function} {hash} ; return no error, if hash match
#:: $FUNCNAME {function}        ; returns {function-name} {hash}
#:: $FUNCNAME {function}        ; returns {function-name} {hash}
#:: $FUNCNAME {executable} {hash} ; return no error, if hash match
#:: $FUNCNAME {executable} {hash} ; return no error, if hash match
#:: $FUNCNAME {executable}        ; returns {executable} {hash}
#:: $FUNCNAME {executable}        ; returns {executable} {hash}
#0> Internal functions
#0> Internal functions
#,km        {nx|xs|xss}    k4 markdown (default 0) to {PAGER} or stdout to pipe
#,km        {nx|xs|xss}    k4 markdown (default 0) to {PAGER} or stdout to pipe
#,kjtq regex            quiet background tags regex to ^pool
#,kjtq regex            quiet background tags regex to ^pool
#,khx regex {nx|xs|xss}    k4 headx (default k4_search)
#,khx regex {nx|xs|xss}    k4 headx (default k4_search)
#,ker depth {nx|xs|xss}    k4 related walk depth
#,ker depth {nx|xs|xss}    k4 related walk depth
#,kep depth {nx|xs|xss}    k4 super walk depth
#,kep depth {nx|xs|xss}    k4 super walk depth
#,kel depth {nx|xs|xss}    k4 link walk depth
#,kel depth {nx|xs|xss}    k4 link walk depth
#,ke  depth {nx|xs|xss}    k4 edge walk depth (diagram?)
#,ke  depth {nx|xs|xss}    k4 edge walk depth (diagram?)
# xss     0s unix seconds and subseconds
# xss     0s unix seconds and subseconds
# xs      0x unix seconds
# xs      0x unix seconds
# trivial metadata connection expansion
# trivial metadata connection expansion
# ss      0x unix subseconds
# ss      0x unix subseconds
# short key identifiers
# short key identifiers
# results pool manuliplation
# results pool manuliplation
# ref     pool reference {knx|k4|xs|xss}
# ref     pool reference {knx|k4|xs|xss}
# quick indexed searches
# quick indexed searches
# pub/sub/fn.bash 20220105
# pub/sub/fn.bash 20220105
# pub/skel/.profile 20220105
# pub/skel/.profile 20220105
# present catagorial tags, per selection, present sub catagorial tags, kwds
# present catagorial tags, per selection, present sub catagorial tags, kwds
# port to python
# port to python
# port to lua
# port to lua
# parameterized search and element reporting
# parameterized search and element reporting
# optionally present existing catagorial tag tree
# optionally present existing catagorial tag tree
# kz  {pool}        iff arg@ is a valid pool, combine with current
# kz  {pool}        iff arg@ is a valid pool, combine with current
# kw {name}         name current pool, mv 0/p/{kdb_pool} to 0/p/{name} and set kdb_pool={name}'
# kw {name}         name current pool, mv 0/p/{kdb_pool} to 0/p/{name} and set kdb_pool={name}'
# kv regex        grep -v regex from pool
# kv regex        grep -v regex from pool
# ktr             list pool by reverse modification
# ktr             list pool by reverse modification
# kt              list pool by modification
# kt              list pool by modification
# ksp ref           matter aspell
# ksp ref           matter aspell
# ks arg*         new k4 with subj (squashed) args
# ks arg*         new k4 with subj (squashed) args
# krst {args}     delete current pool, set defaults  iff args then follow with kj args
# krst {args}     delete current pool, set defaults  iff args then follow with kj args
# krst              reset (delete pool and kdb_init) current pool
# krst              reset (delete pool and kdb_init) current pool
# kq {atime}        find matter -atime {arg1}
# kq {atime}        find matter -atime {arg1}
# kpv {vptr}        iff vptr arg1 supported, assign all ptr in pool and backstore ptr type, else list supported vptr
# kpv {vptr}        iff vptr arg1 supported, assign all ptr in pool and backstore ptr type, else list supported vptr
# kpt {tag}         add tags to all k4 in pool pool tag, list pool tags on null
# kpt {tag}         add tags to all k4 in pool pool tag, list pool tags on null
# kp {pool}         use pool, list pools on null
# kp {pool}         use pool, list pools on null
# knx     index id of pool record, usually 2 or 3 characters
# knx     index id of pool record, usually 2 or 3 characters
# kn arg1           matter end newer epzch, 0x{epoch) or 0d{unix}
# kn arg1           matter end newer epzch, 0x{epoch) or 0d{unix}
# klr             list pool by reverse acquisition
# klr             list pool by reverse acquisition
# kl              list pool by acquisition
# kl              list pool by acquisition
# kk {mtime}        find matter -mtime {arg1}
# kk {mtime}        find matter -mtime {arg1}
# kjt regex       regex cache kt ks to pool
# kjt regex       regex cache kt ks to pool
# kjq regex             quiet beckground k4db regex to ^pool
# kjq regex             quiet beckground k4db regex to ^pool
# kj regex        regex cache to pool
# kj regex        regex cache to pool
# kh {n}            show {number} lines of command history
# kh {n}            show {number} lines of command history
# kh        {nx|xs|xss}    k4 head (default 0), limit to k4_search
# kh        {nx|xs|xss}    k4 head (default 0), limit to k4_search
# kg regex        grep regex from pool
# kg regex        grep regex from pool
# kdb_pool_knx  re-knx pool from xssptr with kdb_pool_add
# kdb_pool_knx  re-knx pool from xssptr with kdb_pool_add
# kdb in half-octal
# kdb in half-octal
# kd {nx|epzch|xss} graph linked, super and related
# kd {nx|epzch|xss} graph linked, super and related
# kc        {nx|xs|xss}    k4 cat (default 0) to {PAGER} or stdout to pipe
# kc        {nx|xs|xss}    k4 cat (default 0) to {PAGER} or stdout to pipe
# ka arg1           matter begin after epzch, 0x{epoch) or 0d{unix}
# ka arg1           matter begin after epzch, 0x{epoch) or 0d{unix}
# k__ {hours}           k4 mod k4since hours to ^pool
# k__ {hours}           k4 mod k4since hours to ^pool
# k_ {days}             k4 mod k4since days to ^pool
# k_ {days}             k4 mod k4since days to ^pool
# k4k       {nx|xs|xss}    extract k4 link(s) default ^pool
# k4k       {nx|xs|xss}    extract k4 link(s) default ^pool
# k ref           edit k4 (default last)
# k ref           edit k4 (default last)
# intuitative knoledge connections, discover
# intuitative knoledge connections, discover
# future feature
# future feature
# eph     epzch meta value of directory
# eph     epzch meta value of directory
# assured record, arbitrary discrete elements of subject matter
# assured record, arbitrary discrete elements of subject matter
# @@ ## ### ##### ######## Refine
# @@ ## ### ##### ######## Refine
# @@ ## ### ##### ######## Pools
# @@ ## ### ##### ######## Pools
# @@ ## ### ##### ######## Misc
# @@ ## ### ##### ######## Misc
# @@ ## ### ##### ######## Extract
# @@ ## ### ##### ######## Extract
# @@ ## ### ##### ######## Edge
# @@ ## ### ##### ######## Edge
# %kz # event end       xs
# %kz # event end       xs
# %kx # k4 expire       xs
# %kx # k4 expire       xs
# %kv # value key       0x
# %kv # value key       0x
# %kt # tag list        {words}
# %kt # tag list        {words}
# %ks # subject matter  {string}
# %ks # subject matter  {string}
# %kr # matrix reason   {kdbo:}eph {...}       %% (why)
# %kr # matrix reason   {kdbo:}eph {...}       %% (why)
# %kq # value relative  0x/{kdbo:}eph {...}    %% (value for)
# %kq # value relative  0x/{kdbo:}eph {...}    %% (value for)
# %kp # perord hier     {kdbo:}eph {...}       %% (superior)
# %kp # perord hier     {kdbo:}eph {...}       %% (superior)
# %ko # origin owner    (email|pubkey|fingerprint|etc)
# %ko # origin owner    (email|pubkey|fingerprint|etc)
# %kn # interval align  {kn} %d {knfd} %x {knfx}
# %kn # interval align  {kn} %d {knfd} %x {knfx}
# %km # meta hash       xa xs ss kdbo eph span maskx hdate %% see kdbdf
# %km # meta hash       xa xs ss kdbo eph span maskx hdate %% see kdbdf
# %kl # like link       {kdbo:}eph {...}       %% (similar)
# %kl # like link       {kdbo:}eph {...}       %% (similar)
# %kk # epoch list      {eph} {...}
# %kk # epoch list      {eph} {...}
# %kj # subord motive   {kdbo:}eph {...}       %% (subordinate)
# %kj # subord motive   {kdbo:}eph {...}       %% (subordinate)
# %ki # review interval 0x
# %ki # review interval 0x
# %ke # event begin     xs
# %ke # event begin     xs
# %kd # data entry      (.{xs}.{ss}.kdb|./index.md|https://s3.aws.com/|etc)
# %kd # data entry      (.{xs}.{ss}.kdb|./index.md|https://s3.aws.com/|etc)
# %kc # topic class     {kdbo:}eph {...}       %% (^type)
# %kc # topic class     {kdbo:}eph {...}       %% (^type)
# %kb # better k4       {kdbo:}eph {...}       %% (better)
# %kb # better k4       {kdbo:}eph {...}       %% (better)
#   tags, super-ordinates, sub-ordinates, matrix, serial, value, interval alignment, class, definition, identity, initilization, expiration, begin, end
#   tags, super-ordinates, sub-ordinates, matrix, serial, value, interval alignment, class, definition, identity, initilization, expiration, begin, end
#   revision tracking
#   revision tracking
#   novel date based directory for file directories and metadata markdown
#   novel date based directory for file directories and metadata markdown
#   filter, associate, re-value
#   filter, associate, re-value
";
";
";
";
";
";
";
";
 unit:'$sum'
 unit:'$sum'
 unit:'$sum'
 unit:'$sum'
 knx and %ks are always displayed
 knx and %ks are always displayed
  export -f devnul stderr chkstd chkwrn logwrn chkerr logerr chktrue \
  export -f devnul stderr chkstd chkwrn logwrn chkerr logerr chktrue \
  exit with signal and list remaining sessions."
  exit with signal and list remaining sessions."
  eval "$(curl -fsSL --insecure \
  eval "$(curl -fsSL --insecure \
  env:'$check'
  env:'$check'
  env:'$check'
  env:'$check'
  * Use "{name}" to create and/or attach to named session
  * Use "{name}" to create and/or attach to named session
  * Use "se" or "sessions" as arg for report of running sessions
  * Use "se" or "sessions" as arg for report of running sessions
  * Use "at" or "attach" to attach to most recent active session
  * Use "at" or "attach" to attach to most recent active session
  * Default session (no args) is "0"';
  * Default session (no args) is "0"';
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    };
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || { 
    } || while IFS= read xs; do
    } || while IFS= read xs; do
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true;
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || true
    } || stop="0";
    } || stop="0";
    } || echo "$$" > "$LOCK"
    } || echo "$$" > "$LOCK"
    } || chkerr "$invoke : ptr not found (6125218f)";
    } || chkerr "$invoke : ptr not found (6125218f)";
    } || cat
    } || cat
    } || cat
    } || cat
    } || cat
    } || cat
    } | while IFS= read k4; do
    } | while IFS= read k4; do
    } | while IFS= read f; do
    } | while IFS= read f; do
    } | w3m -T text/html -O UTF-8 -o display_link=1 -o display_link_number=1 -o document_root='https://www.science.org' | iconv -c --from-code=UTF-8 --to-code=ASCII//TRANSLIT | sed 's= file:///= https://www.science.org/=';
    } | w3m -T text/html -O UTF-8 -o display_link=1 -o display_link_number=1 -o document_root='https://www.science.org' | iconv -c --from-code=UTF-8 --to-code=ASCII//TRANSLIT | sed 's= file:///= https://www.science.org/=';
    } | tr -s ' ' | sed 's/ $//'
    } | tr -s ' ' | sed 's/ $//'
    } | tr -C '[:alnum:]' ' ' | tr ' ' '\n' | sort -u | tr '\n' ' ' | kdb_stdin_fold
    } | tr -C '[:alnum:]' ' ' | tr ' ' '\n' | sort -u | tr '\n' ' ' | kdb_stdin_fold
    } | tr '\n' ' ';
    } | tr '\n' ' ';
    } | tr '\n' ' ';
    } | tr '\n' ' ';
    } | tr '\n' ' ';
    } | tr '\n' ' ';
    } | tai64nlocal | sed -e 's/[0]*$//' -e 's/\.$//';
    } | tai64nlocal | sed -e 's/[0]*$//' -e 's/\.$//';
    } | sed -e 's,\\u0332,,g' -e 's,\\u2013,-,' >> "${1}.txt";
    } | sed -e 's,\\u0332,,g' -e 's,\\u2013,-,' >> "${1}.txt";
    } | sed -e '/\./s/[0]*$//' -e 's/\.$//'
    } | sed -e '/\./s/[0]*$//' -e 's/\.$//'
    } | awk -v n="$n" '{printf "%s\n",$n}'
    } | awk -v n="$n" '{printf "%s\n",$n}'
    } | awk '{printf "%s %06s\n",$1,$2}'
    } | awk '{printf "%s %06s\n",$1,$2}'
    } | awk '{printf "%-10s %s %s\n%-10s %s\n","     TOTAL",$1,$2,"      ROOT",$3 }';
    } | awk '{printf "%-10s %s %s\n%-10s %s\n","     TOTAL",$1,$2,"      ROOT",$3 }';
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } | _kdb_squeeze | $k4_unlong;
    } >> "$k4";
    } >> "$k4";
    } && { 
    } && { 
    } && [ -e "$pool/knxptr/$2" ] && { 
    } && [ -e "$pool/knxptr/$2" ] && { 
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    { 
    xss | sed -e 's/.\{9\}$//'
    xss | sed -e 's/.\{9\}$//'
    xd="$(printf "%*s" $k '' | tr ' ' "f")";
    xd="$(printf "%*s" $k '' | tr ' ' "f")";
    x=$(( x * "${sign}1" ));
    x=$(( x * "${sign}1" ));
    while test $# -gt 0; do
    while test $# -gt 0; do
    while grep "^$(sed -e 's:/::g' <<< "${res%/*}") " "$cache_km" > /dev/null; do
    while grep "^$(sed -e 's:/::g' <<< "${res%/*}") " "$cache_km" > /dev/null; do
    while grep "^$(sed -e 's:/::g' <<< "${res%/*}") " "$cache_km" > /dev/null; do
    while grep "^$(sed -e 's:/::g' <<< "${res%/*}") " "$cache_km" > /dev/null; do
    while [ -e "$lock" ]; do
    while [ -e "$lock" ]; do
    while [ -d "${kdb}/${res%/*}" ]; do
    while [ -d "${kdb}/${res%/*}" ]; do
    while [ $x -gt 0 ]; do
    while [ $x -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while [ $# -gt 0 ]; do
    while IFS= read fndata; do
    while IFS= read fndata; do
    while IFS= read a; do
    while IFS= read a; do
    while IFS= read a; do
    while IFS= read a; do
    while IFS= read a; do
    while IFS= read a; do
    which tai64n > /dev/null || { 
    which tai64n > /dev/null || { 
    which tai64n > /dev/null || { 
    which tai64n > /dev/null || { 
    which rubberband-r3 > /dev/null 2>&1 && [ -z "$c" ] && [ -z "$rb" ] && { 
    which rubberband-r3 > /dev/null 2>&1 && [ -z "$c" ] && [ -z "$rb" ] && { 
    which rubberband-r3 > /dev/null 2>&1 && [ "$c" = "r3" ] && [ -z "$rb" ] && { 
    which rubberband-r3 > /dev/null 2>&1 && [ "$c" = "r3" ] && [ -z "$rb" ] && { 
    which find > /dev/null || { 
    which find > /dev/null || { 
    which ci > /dev/null || { 
    which ci > /dev/null || { 
    which "$exin" > /dev/null || { 
    which "$exin" > /dev/null || { 
    w3m -dump_source -o auto_uncompress=1 "$url" > "${_t}/${_html}";
    w3m -dump_source -o auto_uncompress=1 "$url" > "${_t}/${_html}";
    w3m -T text/html -O UTF-8 "$url" -o auto_uncompress=1 -o display_link=1 -o display_link_number=1 | iconv -c --from-code=UTF-8 --to-code=ASCII//TRANSLIT;
    w3m -T text/html -O UTF-8 "$url" -o auto_uncompress=1 -o display_link=1 -o display_link_number=1 | iconv -c --from-code=UTF-8 --to-code=ASCII//TRANSLIT;
    verb2=chkwrn;
    verb2=chkwrn;
    tre="^%($(echo "$types" | sed -e '/^$/d' | awk '{printf "%s",$1"|"}' | sed -e 's/%//g' -e 's/|$//'))\\ ";
    tre="^%($(echo "$types" | sed -e '/^$/d' | awk '{printf "%s",$1"|"}' | sed -e 's/%//g' -e 's/|$//'))\\ ";
    tr -s '\r\n\t' ' ' | sed -e 's/ [ ]*/ /g' -e 's/[ ]*$//'
    tr -s '\r\n\t' ' ' | sed -e 's/ [ ]*/ /g' -e 's/[ ]*$//'
    tr -c '[:alpha:]' ' ' | tr '\ ' '\n' | tr '[:upper:]' '[:lower:]' | sort -ru | while read w; do
    tr -c '[:alpha:]' ' ' | tr '\ ' '\n' | tr '[:upper:]' '[:lower:]' | sort -ru | while read w; do
    tr -c '[:alnum:]-' '_' <<< "_${n}_${s}" | tr '[:upper:]' '[:lower:]'
    tr -c '[:alnum:]-' '_' <<< "_${n}_${s}" | tr '[:upper:]' '[:lower:]'
    tput sgr0;
    tput sgr0;
    touch -t 201508060000 "${tmp}/nulltime";
    touch -t 201508060000 "${tmp}/nulltime";
    touch "${tmp}/lasttime";
    touch "${tmp}/lasttime";
    touch "${kkf}";
    touch "${kkf}";
    touch "${cache_dir}/nulltime";
    touch "${cache_dir}/nulltime";
    touch "$tmp/lacktone";
    touch "$tmp/lacktone";
    touch "$NULL"
    touch "$NULL"
    tmux new -A -s $args;
    tmux new -A -s $args;
    test -n "$i" || i=86016;
    test -n "$i" || i=86016;
    test -n "$i" || i=86016;
    test -n "$i" || i=86016;
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -n "$_xs" || _xs=$(xs);
    test -f "$k4" > /dev/null 2>&1 || { 
    test -f "$k4" > /dev/null 2>&1 || { 
    test -f "$f" || { 
    test -f "$f" || { 
    test -f "$1" || { 
    test -f "$1" || { 
    test -e "$f" || { 
    test -e "$f" || { 
    test $(_kdb_file_headg '^%ks ' "$k4" | wc -l) -eq 1 || { 
    test $(_kdb_file_headg '^%ks ' "$k4" | wc -l) -eq 1 || { 
    test $(_kdb_file_headg '^%km ' "$k4" | wc -l) -eq 1 || { 
    test $(_kdb_file_headg '^%km ' "$k4" | wc -l) -eq 1 || { 
    test $(_kdb_file_headg '^%ki ' "$k4" | wc -l) -eq 1 || { 
    test $(_kdb_file_headg '^%ki ' "$k4" | wc -l) -eq 1 || { 
    test "$rotatefile_secs" || local rotatefile_secs="$((18 * 60 * 60 * 24 ))";
    test "$rotatefile_secs" || local rotatefile_secs="$((18 * 60 * 60 * 24 ))";
    test "$rotatefile_secs" -ge 0 || { 
    test "$rotatefile_secs" -ge 0 || { 
    test "$rotatefile_keep" || local rotatefile_keep="7";
    test "$rotatefile_keep" || local rotatefile_keep="7";
    test "$rotatefile_keep" -ge 0 || { 
    test "$rotatefile_keep" -ge 0 || { 
    test "$k" || k=0;
    test "$k" || k=0;
    test "$f" || { 
    test "$f" || { 
    test "$f" = "-?" -o "$f" = "-h" -o "$f" = "--help" && { 
    test "$f" = "-?" -o "$f" = "-h" -o "$f" = "--help" && { 
    test "$3$4" = "$5$8" && p=true;
    test "$3$4" = "$5$8" && p=true;
    test "$1" && local kdb="$1" || local kdb="${kdb}";
    test "$1" && local kdb="$1" || local kdb="${kdb}";
    test "$1" && local kdb="$1" || local kdb="${kdb}";
    test "$1" && local kdb="$1" || local kdb="${kdb}";
    test "$(declare -f validfn 2> /dev/null)" || { 
    test "$(declare -f validfn 2> /dev/null)" || { 
    t="$(mktemp "${d}/${f}-XXXXX")";
    t="$(mktemp "${d}/${f}-XXXXX")";
    strn="${#str}";
    strn="${#str}";
    strn="${#str}";
    strn="${#str}";
    strn="${#str}";
    strn="${#str}";
    strings $(which find) | grep -q BSD || { 
    strings $(which find) | grep -q BSD || { 
    stat -f %08Xm "$1"
    stat -f %08Xm "$1"
    stat -f %02Xl\ %06Xi\ %8Xz\ %08Xm "$1"
    stat -f %02Xl\ %06Xi\ %8Xz\ %08Xm "$1"
    start="/^${start}/";
    start="/^${start}/";
    span=$(dc -e "$2 $offc p");
    span=$(dc -e "$2 $offc p");
    sort -u "${kkf}~" > "${kkf}";
    sort -u "${kkf}~" > "${kkf}";
    sort "$t" > "${d}/${f}" && rm -i -f "$t";
    sort "$t" > "${d}/${f}" && rm -i -f "$t";
    sig=$?;
    sig=$?;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || true;
    shift || chkerr "$FUNCNAME internal error (62bb5ac0)";
    shift || chkerr "$FUNCNAME internal error (62bb5ac0)";
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    shift 2 || shift || true;
    set -o pipefail;
    set -o pipefail;
    set -o functrace;
    set -o functrace;
    set -o errtrace;
    set -o errtrace;
    set $m;
    set $m;
    set $(sed -e 's/_/ /' "$t1" "$t0" | awk '{print  $1,$2}' | tr ' ' '\n' | while read v; do
    set $(sed -e 's/_/ /' "$t1" "$t0" | awk '{print  $1,$2}' | tr ' ' '\n' | while read v; do
    set $(kdbtx);
    set $(kdbtx);
    set $(kdbeph "$kdb" "$xs" "$ss" "$pass");
    set $(kdbeph "$kdb" "$xs" "$ss" "$pass");
    set $(kdbdf "$kdb" "$xs" "$ss");
    set $(kdbdf "$kdb" "$xs" "$ss");
    set $(kdbd $@);
    set $(kdbd $@);
    set $(kdb_pool_ptr "$k") || { 
    set $(kdb_pool_ptr "$k") || { 
    set $(echo | tai64n | sed -e 's/^\(@4[0]*\)\([[:xdigit:]]\{8\}\)\([[:xdigit:]]\{8\}\)\(.*\)/\1\2\3\4 \2/');
    set $(echo | tai64n | sed -e 's/^\(@4[0]*\)\([[:xdigit:]]\{8\}\)\([[:xdigit:]]\{8\}\)\(.*\)/\1\2\3\4 \2/');
    set $(echo | tai64n | sed -e 's/^\(@4[0]*\)\([[:xdigit:]]\{8\}\)\([[:xdigit:]]\{8\}\)\(.*\)/\1\2\3\4 \2 \3/');
    set $(echo | tai64n | sed -e 's/^\(@4[0]*\)\([[:xdigit:]]\{8\}\)\([[:xdigit:]]\{8\}\)\(.*\)/\1\2\3\4 \2 \3/');
    set $(echo | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/& /');
    set $(echo | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/& /');
    set $(_kdb_file_headg '^%km ' "$k4");
    set $(_kdb_file_headg '^%km ' "$k4");
    set $(_kdb_file_headg '^%km ' "$k4" | awk 'NR==1');
    set $(_kdb_file_headg '^%km ' "$k4" | awk 'NR==1');
    set $(_kdb_file_headg '^%km ' "$k4" | awk 'END{print}');
    set $(_kdb_file_headg '^%km ' "$k4" | awk 'END{print}');
    sed -e '
    sed -e '
    sed -E -e '
    sed -E -e '
    rsync -aH --link-dest="$src" "$src/" "$dst/"
    rsync -aH --link-dest="$src" "$src/" "$dst/"
    rm -i -rf "${pool}/xsshln" "${pool}/knxhln" "${pool}/xssptr" "${pool}/knxptr";
    rm -i -rf "${pool}/xsshln" "${pool}/knxhln" "${pool}/xssptr" "${pool}/knxptr";
    rm -i -rf "${pool}/vptr" "${pool}/kk" "${tmp}";
    rm -i -rf "${pool}/vptr" "${pool}/kk" "${tmp}";
    rm -i -rf "${pool}/knxptr" "${pool}/knxhln" "${pool}/xsshln" "${pool}/xssptr";
    rm -i -rf "${pool}/knxptr" "${pool}/knxhln" "${pool}/xsshln" "${pool}/xssptr";
    rm -i -f "${kkf}~"
    rm -i -f "${kkf}~"
    rm -i -f "${kdb}/%/zz-$(date "+%Y%m%d")/${_html}"
    rm -i -f "${kdb}/%/zz-$(date "+%Y%m%d")/${_html}"
    rm -i -f "$pool/xsshln/$xs$ss" "$pool/knxhln/0";
    rm -i -f "$pool/xsshln/$xs$ss" "$pool/knxhln/0";
    rm -i -f "$lock";
    rm -i -f "$lock";
    rm -i -f "$HOME/%/ytdl/$t"
    rm -i -f "$HOME/%/ytdl/$t"
    rm -i $key_in
    rm -i $key_in
    rm -i "$LOCK";
    rm -i "$LOCK";
    return 1;
    return 1;
    return 1;
    return 1;
    return 1;
    return 1;
    return 1
    return 1
    return 0
    return 0
    return 0
    return 0
    return $sig
    return $sig
    return $?
    return $?
    return "$e"
    return "$e"
    return "$_r"
    return "$_r"
    ps | grep "^[ ]*$$ " | grep bash > /dev/null 2>&1 || { 
    ps | grep "^[ ]*$$ " | grep bash > /dev/null 2>&1 || { 
    ps | grep "^[ ]*$$ " | grep bash > /dev/null 2>&1 || { 
    ps | grep "^[ ]*$$ " | grep bash > /dev/null 2>&1 || { 
    ps | grep "^[ ]*$$ " | grep -q bash 2> /dev/null || { 
    ps | grep "^[ ]*$$ " | grep -q bash 2> /dev/null || { 
    printf '\n\n%s\n\n' "%%\\"
    printf '\n\n%s\n\n' "%%\\"
    printf '\n%s\n\n' "%%/ $url";
    printf '\n%s\n\n' "%%/ $url";
    printf '%d\n' "0x$v";
    printf '%d\n' "0x$v";
    printf "\010%s" "${_spin1:_spin1_p:1}";
    printf "\010%s" "${_spin1:_spin1_p:1}";
    printf "%xn%x\n" "$(( 0 + ( 0x$_xs - ke ) / i ))" "$i"
    printf "%xn%x\n" "$(( 0 + ( 0x$_xs - ke ) / i ))" "$i"
    printf "%%km %s\n" "${km}" > "$k4";
    printf "%%km %s\n" "${km}" > "$k4";
    printf "$(ssh-keygen -if "$key_in") " && sed -e '/Comment/!d' -e 's/^Comment: "//' -e 's/"$//' "$key_in";
    printf "$(ssh-keygen -if "$key_in") " && sed -e '/Comment/!d' -e 's/^Comment: "//' -e 's/"$//' "$key_in";
    out="$1";
    out="$1";
    order="$(echo "$types" | sed -e '/^$/d' | awk '{print $1}')";
    order="$(echo "$types" | sed -e '/^$/d' | awk '{print $1}')";
    null="${null##*/}";
    null="${null##*/}";
    null="$(mktemp "${inpath}/tmp/nulltime-XXXXX")";
    null="$(mktemp "${inpath}/tmp/nulltime-XXXXX")";
    n="$1";
    n="$1";
    mv -i -f "${inpath}/tmp/${out}${vn}.mp3" "./loss/${prependt}${out}${vn}.mp3" && rm -i -f "${inpath}/tmp/$null" && $verb "$(hms2sec $(ffprobe -hide_banner -loglevel info "./loss/${prependt}${out}${vn}.mp3" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds mp3" && echo "./loss/${prependt}${out}${vn}.mp3" )
    mv -i -f "${inpath}/tmp/${out}${vn}.mp3" "./loss/${prependt}${out}${vn}.mp3" && rm -i -f "${inpath}/tmp/$null" && $verb "$(hms2sec $(ffprobe -hide_banner -loglevel info "./loss/${prependt}${out}${vn}.mp3" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds mp3" && echo "./loss/${prependt}${out}${vn}.mp3" )
    mv -i -f "$k4x" "$k4";
    mv -i -f "$k4x" "$k4";
    mv -i "${pool}/xssptr" "$xssptrtmp";
    mv -i "${pool}/xssptr" "$xssptrtmp";
    mv -i "$f" "${f}-$(ckstat "$f" | awk '{print $5}')"
    mv -i "$f" "${f}-$(ckstat "$f" | awk '{print $5}')"
    mkdir -p "${pool}/${kdb_tmp}" || { 
    mkdir -p "${pool}/${kdb_tmp}" || { 
    mkdir -p "${inpath}/tmp" "./loss";
    mkdir -p "${inpath}/tmp" "./loss";
    mkdir -p "$tmp";
    mkdir -p "$tmp";
    mkdir -p "$pool" "$log" "$tmp" "$cache" || { 
    mkdir -p "$pool" "$log" "$tmp" "$cache" || { 
    mkdir -p "$inpath/@/meta" "$inpath/orig";
    mkdir -p "$inpath/@/meta" "$inpath/orig";
    mkdir -p "$dir";
    mkdir -p "$dir";
    mkdir -p "$_t";
    mkdir -p "$_t";
    mkdir -p "$HOME/var/run";
    mkdir -p "$HOME/var/run";
    maskx="$(printf %0x $mask)";
    maskx="$(printf %0x $mask)";
    m=$(dc -e "8 k 31 $(awk 'END{print NR}' <<< "$fs") / p");
    m=$(dc -e "8 k 31 $(awk 'END{print NR}' <<< "$fs") / p");
    ls -rt "${pool}/xssptr" | while IFS= read ptr; do
    ls -rt "${pool}/xssptr" | while IFS= read ptr; do
    ls "${pool}/xsshln"/* 2> /dev/null | while IFS= read hln; do
    ls "${pool}/xsshln"/* 2> /dev/null | while IFS= read hln; do
    local xssptrtmp="$(mktemp -d "${pool}/xssptr-XXXX")";
    local xssptrtmp="$(mktemp -d "${pool}/xssptr-XXXX")";
    local xssptr="${pool}/xssptr";
    local xssptr="${pool}/xssptr";
    local xsshln="${pool}/xsshln";
    local xsshln="${pool}/xsshln";
    local xss="${ptrf##*/}";
    local xss="${ptrf##*/}";
    local xss="$1";
    local xss="$1";
    local xss xssf type="$1";
    local xss xssf type="$1";
    local xss knx ptr;
    local xss knx ptr;
    local xss knx hln;
    local xss knx hln;
    local xss knx hln;
    local xss knx hln;
    local xss knx hln;
    local xss knx hln;
    local xs="${xss::8}";
    local xs="${xss::8}";
    local xs="$3" ss="$4";
    local xs="$3" ss="$4";
    local xs="$1" ss="$2";
    local xs="$1" ss="$2";
    local xs="$1" ss="$2";
    local xs="$1" ss="$2";
    local xs="$1" ss="$2";
    local xs="$1" ss="$2";
    local xs="$(xs)";
    local xs="$(xs)";
    local xn=$1;
    local xn=$1;
    local xa=$2 o="$5" eph=$6 span=$7 maskx=$8;
    local xa=$2 o="$5" eph=$6 span=$7 maskx=$8;
    local xa="643d8451";
    local xa="643d8451";
    local xa="$2" xs="$3" ss="$4" kdbo="$5" eph="$6" span="$7" maskx="$8";
    local xa="$2" xs="$3" ss="$4" kdbo="$5" eph="$6" span="$7" maskx="$8";
    local w=$(printf "%x" "$i" | awk '{ print length }');
    local w=$(printf "%x" "$i" | awk '{ print length }');
    local vptrfmt="$(printf "%7s" "$vptr")";
    local vptrfmt="$(printf "%7s" "$vptr")";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptrf="${kdb}/0/p/${kdb_pool}/vptr";
    local vptr="$(awk 'NR==1' "$vptrf")";
    local vptr="$(awk 'NR==1' "$vptrf")";
    local vptr="$(awk 'NR==1' "$vptrf")";
    local vptr="$(awk 'NR==1' "$vptrf")";
    local vn='' vc='';
    local vn='' vc='';
    local vn="${kdb}/0/v/${fn}";
    local vn="${kdb}/0/v/${fn}";
    local vn="${kdb}/0/v/${fn}";
    local vn="${kdb}/0/v/${fn}";
    local vn="${kdb}/0/v/${fn}";
    local vn="${kdb}/0/v/${fn}";
    local verb="${verb:=devnul}";
    local verb="${verb:=devnul}";
    local verb="${verb:=chkwrn}";
    local verb="${verb:=chkwrn}";
    local verb="${verb:-devnul}" s="$1" f='' b='';
    local verb="${verb:-devnul}" s="$1" f='' b='';
    local verb3="${verb3:=devnul}";
    local verb3="${verb3:=devnul}";
    local verb2="${verb2:=devnul}";
    local verb2="${verb2:=devnul}";
    local var="${kdb}/0/${kdb_var}";
    local var="${kdb}/0/${kdb_var}";
    local v vptr="$1" ptrf="$2";
    local v vptr="$1" ptrf="$2";
    local v cv vptr="$1" xss="$2";
    local v cv vptr="$1" xss="$2";
    local url="$1";
    local url="$1";
    local url="$1";
    local url="$1";
    local unsupported_types="
    local unsupported_types="
    local types="
    local types="
    local type="$1" types="
    local type="$1" types="
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/p/${kdb_pool}/${kdb_tmp}";
    local tmp="${kdb}/0/${kdb_tmp}";
    local tmp="${kdb}/0/${kdb_tmp}";
    local title="$2";
    local title="$2";
    local tc='' tn='';
    local tc='' tn='';
    local tail tmp;
    local tail tmp;
    local t=$(mkdir -p "$HOME/%/ytdl" && cd "$HOME/%/ytdl" && mktemp ytdl-XXXX);
    local t=$(mkdir -p "$HOME/%/ytdl" && cd "$HOME/%/ytdl" && mktemp ytdl-XXXX);
    local t0="${b}.0" t1="${b}.1";
    local t0="${b}.0" t1="${b}.1";
    local sum="$fn $*";
    local sum="$fn $*";
    local sum="$exin $*";
    local sum="$exin $*";
    local str="$1" char="${2::1}";
    local str="$1" char="${2::1}";
    local str="$1" char="${2::1}";
    local str="$1" char="${2::1}";
    local str="$1" char="${2::1}";
    local str="$1" char="${2::1}";
    local stdin="$(tr -s '\n' ' ')";
    local stdin="$(tr -s '\n' ' ')";
    local start=$@;
    local start=$@;
    local start="$1" stop="$2" dirs= a= opwd="$PWD" prefix=;
    local start="$1" stop="$2" dirs= a= opwd="$PWD" prefix=;
    local ss=$1 span= offc=;
    local ss=$1 span= offc=;
    local src="$1" dst="$2";
    local src="$1" dst="$2";
    local span="${res##*/}";
    local span="${res##*/}";
    local sign='' out='' p='' base="$1" x="$2";
    local sign='' out='' p='' base="$1" x="$2";
    local secc='' secn='' ssec='' tsec='';
    local secc='' secn='' ssec='' tsec='';
    local s="$(cksum <<< "$n")";
    local s="$(cksum <<< "$n")";
    local res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "/${xs}${ss}")";
    local res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "/${xs}${ss}")";
    local ptrf knx hlnf;
    local ptrf knx hlnf;
    local prependt="$2";
    local prependt="$2";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pool="${kdb}/0/p/${kdb_pool}";
    local pc='' pn='';
    local pc='' pn='';
    local pass="$*";
    local pass="$*";
    local pass="$*";
    local pass="$*";
    local pass="$*" v;
    local pass="$*" v;
    local p="${k4%/*}" k="${k4##*/}";
    local p="${k4%/*}" k="${k4##*/}";
    local p="$1" d="${2%/*}" f="${2##*/}" s t;
    local p="$1" d="${2%/*}" f="${2##*/}" s t;
    local out="${infile}${secn}${lnn}";
    local out="${infile}${secn}${lnn}";
    local orig='' args='' sortargs='' parm='' origfiles='';
    local orig='' args='' sortargs='' parm='' origfiles='';
    local order=$(awk '{print $2}' <<< "$kinds");
    local order=$(awk '{print $2}' <<< "$kinds");
    local not_find="-not ( -name "${k},v" -o -name "$k" -o -name _ )";
    local not_find="-not ( -name "${k},v" -o -name "$k" -o -name _ )";
    local name="$(basename "$0")";
    local name="$(basename "$0")";
    local name="$(basename "$0")";
    local name="$(basename "$0")";
    local n=;
    local n=;
    local n knx knxf k4="$1";
    local n knx knxf k4="$1";
    local n knx knxf k4="$1";
    local n knx knxf k4="$1";
    local m=$(_kdb_file_headg '^%km ' "$k4");
    local m=$(_kdb_file_headg '^%km ' "$k4");
    local log="${kdb}/0/${kdb_log}";
    local log="${kdb}/0/${kdb_log}";
    local lock="${vn}.pid";
    local lock="${vn}.pid";
    local lock="${vn}.pid";
    local lock="${vn}.pid";
    local lock="${vn}.pid";
    local lock="${vn}.pid";
    local lnn offn tpn lran in measured_thresh measured_LRA measured_TP measured_I;
    local lnn offn tpn lran in measured_thresh measured_LRA measured_TP measured_I;
    local ks="$*";
    local ks="$*";
    local kre="$(awk '{printf "%s",$2"|"}' <<< "$kinds" | sed -e 's/%k//g' -e 's/^|/^%k(/' -e 's/||$/)\\ /')";
    local kre="$(awk '{printf "%s",$2"|"}' <<< "$kinds" | sed -e 's/%k//g' -e 's/^|/^%k(/' -e 's/||$/)\\ /')";
    local knxptr="${pool}/knxptr";
    local knxptr="${pool}/knxptr";
    local knx=$(nevernowx $xs);
    local knx=$(nevernowx $xs);
    local knd=$(nevernowd $xs);
    local knd=$(nevernowd $xs);
    local km="$*";
    local km="$*";
    local kkf="${pool}/kk";
    local kkf="${pool}/kk";
    local kinds="
    local kinds="
    local kind=;
    local kind=;
    local key_in="$(mktemp /tmp/pubkey-XXXXXX)";
    local key_in="$(mktemp /tmp/pubkey-XXXXXX)";
    local ke=1438844400;
    local ke=1438844400;
    local ke=1438844400;
    local ke=1438844400;
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local ke=1438844400 day=86400 is="6 7 9 11 14 16 18 24 28 33 35 38 43 57 63 162";
    local k="$1";
    local k="$1";
    local k4x="$(mktemp ${k4d}/__tmp.kdb-XXXX)";
    local k4x="$(mktemp ${k4d}/__tmp.kdb-XXXX)";
    local k4x="$(mktemp "${k4}-XXXX")";
    local k4x="$(mktemp "${k4}-XXXX")";
    local k4s='' k4='';
    local k4s='' k4='';
    local k4h="$(_kdb_file_headg . "$k4")";
    local k4h="$(_kdb_file_headg . "$k4")";
    local k4d="${k4%/*}";
    local k4d="${k4%/*}";
    local k4='' filter='' cache_dir="${kdb}/0/${kdb_cache}";
    local k4='' filter='' cache_dir="${kdb}/0/${kdb_cache}";
    local k4=$1;
    local k4=$1;
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1";
    local k4="$1" p=;
    local k4="$1" p=;
    local k4="$(kdb_pool_ptr "$in" | kdb_argn 1)";
    local k4="$(kdb_pool_ptr "$in" | kdb_argn 1)";
    local k4="$(awk 'NR==1' "${pool}/xssptr/${xss}")";
    local k4="$(awk 'NR==1' "${pool}/xssptr/${xss}")";
    local k4="$(awk 'NR==1' "$ptrf")";
    local k4="$(awk 'NR==1' "$ptrf")";
    local k4 pool="${kdb}/0/p/${kdb_pool}";
    local k4 pool="${kdb}/0/p/${kdb_pool}";
    local invoke="$FUNCNAME $@";
    local invoke="$FUNCNAME $@";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local invoke="$FUNCNAME $@ #$$ X$(xss)";
    local inpath='' _fout="_^$(jq --ascii-output --raw-output '(.id, .acodec)' "$1" | tr -d '"' | tr '\n' '.' | sed 's/\.$//')";
    local inpath='' _fout="_^$(jq --ascii-output --raw-output '(.id, .acodec)' "$1" | tr -d '"' | tr '\n' '.' | sed 's/\.$//')";
    local infilep="$(cd "${inpath}"; pwd -P)/${infile}";
    local infilep="$(cd "${inpath}"; pwd -P)/${infile}";
    local infile="${1##*/}";
    local infile="${1##*/}";
    local infile inpath infilep;
    local infile inpath infilep;
    local in="$1";
    local in="$1";
    local in="$1";
    local in="$1";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local id="$1" d="$2";
    local i="$1" _xs="$2";
    local i="$1" _xs="$2";
    local i="$1" _xs="$2";
    local i="$1" _xs="$2";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local i _xs="$1";
    local hdate="$(date -j -r "$((0x$xs))" "$k4_ht_strftime")";
    local hdate="$(date -j -r "$((0x$xs))" "$k4_ht_strftime")";
    local hang="$1";
    local hang="$1";
    local fs="$1";
    local fs="$1";
    local fn="$(sed -e 's/#.*//' -e 's/^[ ]*//' -e 's/[ ]*$//' -e '/^$/d' <<< "$1")";
    local fn="$(sed -e 's/#.*//' -e 's/^[ ]*//' -e 's/[ ]*$//' -e '/^$/d' <<< "$1")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local fn="$(kdb_0_flaten_filename "$*")";
    local filter='^%(ks|kt|kr|kp|kj|kl|kb|kc|ko)\ ';
    local filter='^%(ks|kt|kr|kp|kj|kl|kb|kc|ko)\ ';
    local filter='(^%ks|^%kt|^%kk|^%kj|^%kp)';
    local filter='(^%ks|^%kt|^%kk|^%kj|^%kp)';
    local fhzc='' fhzn='';
    local fhzc='' fhzn='';
    local f='' fs='' v='';
    local f='' fs='' v='';
    local f="$1";
    local f="$1";
    local f="$1";
    local f="$1";
    local f="$(find $links -name \*$($ytdl --dump-json $id | jq --ascii-output --raw-output '(.id)' | yq --yaml-output | head -n1)\* | grep -Ev '/(tmp|0)/' | sort)";
    local f="$(find $links -name \*$($ytdl --dump-json $id | jq --ascii-output --raw-output '(.id)' | yq --yaml-output | head -n1)\* | grep -Ev '/(tmp|0)/' | sort)";
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs;
    local f fs p="$1";
    local f fs p="$1";
    local f fs p c b a src dst;
    local f fs p c b a src dst;
    local f fs fss;
    local f fs fss;
    local exin="$(sed -e 's/#.*//' -e 's/^[ ]*//' -e 's/[ ]*$//' -e '/^$/d' <<< "$1")";
    local exin="$(sed -e 's/#.*//' -e 's/^[ ]*//' -e 's/[ ]*$//' -e '/^$/d' <<< "$1")";
    local eph="$(sed -e 's:/::g' <<< "${res%/*}")";
    local eph="$(sed -e 's:/::g' <<< "${res%/*}")";
    local e="$?";
    local e="$?";
    local e="$1" k4="$2";
    local e="$1" k4="$2";
    local e="$1" f fs a _k4;
    local e="$1" f fs a _k4;
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dxs=$(( 0x$_xs ));
    local dir=$(sed -e 's:/[^/]*$:/^:' <<< "${kdb}/${res}");
    local dir=$(sed -e 's:/[^/]*$:/^:' <<< "${kdb}/${res}");
    local dir a b;
    local dir a b;
    local digs="0123456789abcdefghjkmnpqrstuvxyz" sans="ilow";
    local digs="0123456789abcdefghjkmnpqrstuvxyz" sans="ilow";
    local d=$1;
    local d=$1;
    local d="${k4%/*}";
    local d="${k4%/*}";
    local d="${k4%/*}";
    local d="${k4%/*}";
    local d="$*";
    local d="$*";
    local cmpn='' cmpc='';
    local cmpn='' cmpc='';
    local cksum="$(_kdb_file_headg "${k4_search}" ${kdb}/5/c/4/e/1/a/^/.5c4e1acc.03453244.kdb | cksum)";
    local cksum="$(_kdb_file_headg "${k4_search}" ${kdb}/5/c/4/e/1/a/^/.5c4e1acc.03453244.kdb | cksum)";
    local check="$("$_hashfn" "$fn")";
    local check="$("$_hashfn" "$fn")";
    local check="$("$_hashex" "$exin")";
    local check="$("$_hashex" "$exin")";
    local char="${1::1}";
    local char="${1::1}";
    local cfc='' cfn='';
    local cfc='' cfn='';
    local cc='' cn='';
    local cc='' cn='';
    local cache_km="${cache_dir}/k4db_km,";
    local cache_km="${cache_dir}/k4db_km,";
    local cache_km="${cache_dir}/k4db_km,";
    local cache_km="${cache_dir}/k4db_km,";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_dir="${kdb}/0/${kdb_cache}";
    local cache_9_topic="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_topic" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_9_topic="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_topic" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_8_value="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_value" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_8_value="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_value" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_7_graph="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_graph" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_7_graph="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_graph" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_6_search="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_search" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_6_search="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_search" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_5_km="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "^%km\ " | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache_5_km="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "^%km\ " | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache="${kdb}/0/${kdb_cache}";
    local cache="${kdb}/0/${kdb_cache}";
    local cache="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_search" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local cache="$cache_dir/k4db_$(tr -d '[)(% ^\\]' <<< "$k4_search" | tr '|' '\n' | sort -u | tr '\n' ',')";
    local c="$1";
    local c="$1";
    local basefp="$1";
    local basefp="$1";
    local basefn="$(basename "$basefp")";
    local basefn="$(basename "$basefp")";
    local b="${1}" m="${2}";
    local b="${1}" m="${2}";
    local b32char=$(for a in {0..31};
    local b32char=$(for a in {0..31};
    local args sig;
    local args sig;
    local arg="${vn}.arg";
    local arg="${vn}.arg";
    local arg="${vn}.arg";
    local arg="${vn}.arg";
    local arg="${vn}.arg";
    local arg="${vn}.arg";
    local addl="$1" addl_re='';
    local addl="$1" addl_re='';
    local addl="$1" addl_re;
    local addl="$1" addl_re;
    local addl="$1" addl_re;
    local addl="$1" addl_re;
    local a="$*";
    local a="$*";
    local a="$*";
    local a="$*";
    local a= use="$FUNCNAME {file}"'
    local a= use="$FUNCNAME {file}"'
    local a;
    local a;
    local a;
    local a;
    local a out;
    local a out;
    local a mask="4";
    local a mask="4";
    local a log="${kdb}/0/${kdb_log}/$(kdbtx | sed -E 's/^(.{4}).*/\1/').log";
    local a log="${kdb}/0/${kdb_log}/$(kdbtx | sed -E 's/^(.{4}).*/\1/').log";
    local a b c n="$(find "$pool/knxptr" -type f -not -name 0 | awk 'END{print NR}')";
    local a b c n="$(find "$pool/knxptr" -type f -not -name 0 | awk 'END{print NR}')";
    local _t="${kdb}/%/zz-$(date "+%Y%m%d")";
    local _t="${kdb}/%/zz-$(date "+%Y%m%d")";
    local _spin2_p=$(( _spin2_n % _spin2_len ));
    local _spin2_p=$(( _spin2_n % _spin2_len ));
    local _spin1_p=$(( _spin1_n % _spin1_len ));
    local _spin1_p=$(( _spin1_n % _spin1_len ));
    local _r=0;
    local _r=0;
    local _k4 f fs a inpath;
    local _k4 f fs a inpath;
    local _k4 f fs a inpath;
    local _k4 f fs a inpath;
    local _k4 f fs a inpath eph;
    local _k4 f fs a inpath eph;
    local _html="$(cd "$_t" && mktemp html-XXXXX)";
    local _html="$(cd "$_t" && mktemp html-XXXXX)";
    local _hashfn='';
    local _hashfn='';
    local _hashfn='';
    local _hashfn='';
    local NULL="$HOME/var/run/${name}.null";
    local NULL="$HOME/var/run/${name}.null";
    local NULL="$HOME/var/run/${name}.null";
    local NULL="$HOME/var/run/${name}.null";
    local LOCK="$HOME/var/run/${name}.pid";
    local LOCK="$HOME/var/run/${name}.pid";
    local LOCK="$HOME/var/run/${name}.pid";
    local LOCK="$HOME/var/run/${name}.pid";
    local Fc='' Fn='';
    local Fc='' Fn='';
    ln -f "${k4}" "$pool/xsshln/$xs$ss";
    ln -f "${k4}" "$pool/xsshln/$xs$ss";
    ln -f "${k4}" "$pool/knxhln/0";
    ln -f "${k4}" "$pool/knxhln/0";
    ln "$inpath"/*${_fout} "$inpath"/@/${_fout} && mv -i "$inpath"/*${_fout} "$inpath/orig" && mv -i "$1" "$inpath"/*${_fout%%.*}.webp "$inpath"'/@/meta';
    ln "$inpath"/*${_fout} "$inpath"/@/${_fout} && mv -i "$inpath"/*${_fout} "$inpath/orig" && mv -i "$1" "$inpath"/*${_fout%%.*}.webp "$inpath"'/@/meta';
    lacktone5a $g & lacktone5b $g & lacktone;
    lacktone5a $g & lacktone5b $g & lacktone;
    lacktone2a $g & lacktone2b $g & lacktone;
    lacktone2a $g & lacktone2b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone5a $g & lacktone5b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone5a $g & lacktone5b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone2a $g & lacktone2b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone2a $g & lacktone2b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone2a $g & lacktone2b $g & lacktone5a $g & lacktone5b $g & lacktone5a $g & lacktone5b $g & lacktone;
    lacktone1a $g & lacktone1b $g & lacktone2a $g & lacktone2b $g & lacktone5a $g & lacktone5b $g & lacktone5a $g & lacktone5b $g & lacktone;
    knxf="$(find "$pool/knxptr" -type f -not -name 0 -exec grep --files-with-matches "^${xs}${ss}$" \{\} \; | awk 'END {print}')";
    knxf="$(find "$pool/knxptr" -type f -not -name 0 -exec grep --files-with-matches "^${xs}${ss}$" \{\} \; | awk 'END {print}')";
    klv "$1$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    klv "$1$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    klv "$1$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    klv "$1$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    klr "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    klr "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    klr "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    klr "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    kl "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    kl "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_topic")"
    kl "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    kl "$(sed -e 's/\^%(k//' -e 's/)\\ //' -e 's/|k//g' <<< "$k4_search")"
    kdbtz $@
    kdbtz $@
    kdb_xs2tai | tai64nlocal | sed -e 's/\.[0]\{9\}$//' -e "s/[: -]//g" -e 's/..$/\.&/'
    kdb_xs2tai | tai64nlocal | sed -e 's/\.[0]\{9\}$//' -e "s/[: -]//g" -e 's/..$/\.&/'
    kdb_xs2h $(printf "%x" "$1")
    kdb_xs2h $(printf "%x" "$1")
    kdb_valid_parm "$p" || { 
    kdb_valid_parm "$p" || { 
    kdb_valid_file "$1" || { 
    kdb_valid_file "$1" || { 
    kdb_valid_dir "${pool}/${kdb_tmp}";
    kdb_valid_dir "${pool}/${kdb_tmp}";
    kdb_valid_dir "${kdb}" || { 
    kdb_valid_dir "${kdb}" || { 
    kdb_valid_dir "$cache_dir" || { 
    kdb_valid_dir "$cache_dir" || { 
    kdb_valid_dir "$cache_dir" || { 
    kdb_valid_dir "$cache_dir" || { 
    kdb_rcs "${k4}" "++ $invoke irregular diff";
    kdb_rcs "${k4}" "++ $invoke irregular diff";
    kdb_rcs "$k4";
    kdb_rcs "$k4";
    kdb_rcs "$k4" "$invoke" || { 
    kdb_rcs "$k4" "$invoke" || { 
    kdb_rcs "$k4" "$invoke : sequence";
    kdb_rcs "$k4" "$invoke : sequence";
    kdb_rcs "$k4" "$invoke : edit";
    kdb_rcs "$k4" "$invoke : edit";
    kdb_rcs "$d/$f" "$FUNCNAME pst";
    kdb_rcs "$d/$f" "$FUNCNAME pst";
    kdb_rcs "$d/$f" "$FUNCNAME pre";
    kdb_rcs "$d/$f" "$FUNCNAME pre";
    kdb_print_vxssptr ()    #0> render vptr arg1 for xssptr arg2
    kdb_print_vxssptr ()    #0> render vptr arg1 for xssptr arg2
    kdb_pool_vptr ()        #0> Set the pool ptr mtime and vptrf, per type from arg1
    kdb_pool_vptr ()        #0> Set the pool ptr mtime and vptrf, per type from arg1
    kdb_pool_vptr "$type" || { 
    kdb_pool_vptr "$type" || { 
    kdb_pool_ptr_vset ()    #0> Set vptr arg1 on ptr arg2
    kdb_pool_ptr_vset ()    #0> Set vptr arg1 on ptr arg2
    kdb_pool_kklink_xssptr "$xs$ss";
    kdb_pool_kklink_xssptr "$xs$ss";
    kdb_pool_add "$k4" || { 
    kdb_pool_add "$k4" || { 
    kdb_pool_add "$k4" || { 
    kdb_pool_add "$k4" || { 
    kdb_k4_synopsis $(kdb_pool_ptr "$1");
    kdb_k4_synopsis $(kdb_pool_ptr "$1");
    kdb_k4_synopsis "$k4";
    kdb_k4_synopsis "$k4";
    kdb_k4_kk_hint "$k4"
    kdb_k4_kk_hint "$k4"
    kdb_k4_inventory $(kdb_pool_ptr "$1");
    kdb_k4_inventory $(kdb_pool_ptr "$1");
    kdb_k4_inventory "$k4";
    kdb_k4_inventory "$k4";
    kdb_k4_head_seq "$k4";
    kdb_k4_head_seq "$k4";
    kdb_k4_head_seq "$k4" || { 
    kdb_k4_head_seq "$k4" || { 
    kdb_k4_body "$k4" >> "$k4x";
    kdb_k4_body "$k4" >> "$k4x";
    kdb_init_pool;
    kdb_init_pool;
    kdb_init_pool;
    kdb_init_pool;
    kdb_init_pool || { 
    kdb_init_pool || { 
    kdb_cache_upd "$k4";
    kdb_cache_upd "$k4";
    kdb_cache_upd "$k4" || { 
    kdb_cache_upd "$k4" || { 
    kdb_cache_upd "$k4" || { 
    kdb_cache_upd "$k4" || { 
    k=$(( ( 16 * k ) / 10 ));
    k=$(( ( 16 * k ) / 10 ));
    k="${#xn}";
    k="${#xn}";
    k ${xs}${ss} || { 
    k ${xs}${ss} || { 
    jq --compact-output 'del(.formats, .thumbnail, .thumbnails, .downloader_options, .http_headers,
    jq --compact-output 'del(.formats, .thumbnail, .thumbnails, .downloader_options, .http_headers,
    infilep="$(cd "${inpath}"; pwd -P)/${infile}";
    infilep="$(cd "${inpath}"; pwd -P)/${infile}";
    infile="${f##*/}";
    infile="${f##*/}";
    https://raw.githubusercontent.com/georgalis/pub/master/skel/.profile)"
    https://raw.githubusercontent.com/georgalis/pub/master/skel/.profile)"
    gsta $@ | sed 's/^...//' | while IFS= read a; do
    gsta $@ | sed 's/^...//' | while IFS= read a; do
    grep -v "^${p} " "${d}/${f}" > "$t";
    grep -v "^${p} " "${d}/${f}" > "$t";
    grep -Ev "$kre" <<< "$k4h" >> "$k4x";
    grep -Ev "$kre" <<< "$k4h" >> "$k4x";
    grep "$k4case" -E "$filter" "$cache" | awk '{print $2}' | while IFS= read k4; do
    grep "$k4case" -E "$filter" "$cache" | awk '{print $2}' | while IFS= read k4; do
    git status --short $@ | sed -e 's/^ /_/' -e 's/^\(.\) /\1_/' | sort
    git status --short $@ | sed -e 's/^ /_/' -e 's/^\(.\) /\1_/' | sort
    function xs () 
    function xs () 
    function term_pleft () 
    function term_pleft () 
    function _tmu_active_sessions () 
    function _tmu_active_sessions () 
    fs="$(sed -e 's/^\.\///' <<< "$fs" | while IFS= read f; do
    fs="$(sed -e 's/^\.\///' <<< "$fs" | while IFS= read f; do
    fs="$(sed 's/^\.\///' <<< "$fs" | while IFS= read f; do
    fs="$(sed 's/^\.\///' <<< "$fs" | while IFS= read f; do
    for part in ${pool}/xssptr;
    for part in ${pool}/xssptr;
    for p in {0..31};
    for p in {0..31};
    for n in $(kpv all);
    for n in $(kpv all);
    for kind in $order;
    for kind in $order;
    for kind in $order;
    for kind in $order;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for i in $is;
    for dir in $@;
    for dir in $@;
    for a in xss knx;
    for a in xss knx;
    for a in xss knx;
    for a in xss knx;
    for a in $(seq 2 $mask);
    for a in $(seq 2 $mask);
    for a in "$pool" "$log" "$tmp" "$cache";
    for a in "$pool" "$log" "$tmp" "$cache";
    find $start -name .git -type d | while IFS= read a; do
    find $start -name .git -type d | while IFS= read a; do
    find "${pool}/xsshln" -type f -regex ".*/xsshln/[[:xdigit:]]\{16\}$" | while IFS= read xssf; do
    find "${pool}/xsshln" -type f -regex ".*/xsshln/[[:xdigit:]]\{16\}$" | while IFS= read xssf; do
    find "${pool}/xsshln" -type f -regex "${pool}/xsshln/[[:xdigit:]]\{16\}$" | sort -r | while IFS= read hln; do
    find "${pool}/xsshln" -type f -regex "${pool}/xsshln/[[:xdigit:]]\{16\}$" | sort -r | while IFS= read hln; do
    find "${kdb}/0/v" -type f -name \*.pid -mtime +1 2> /dev/null | while IFS= read a; do
    find "${kdb}/0/v" -type f -name \*.pid -mtime +1 2> /dev/null | while IFS= read a; do
    find "${kdb}" \( -regex "${kdb}/0" -prune -type f \) -o -type f -name \.\*\.kdb 2> /dev/null
    find "${kdb}" \( -regex "${kdb}/0" -prune -type f \) -o -type f -name \.\*\.kdb 2> /dev/null
    find "${kdb}" -depth -type d -empty -delete;
    find "${kdb}" -depth -type d -empty -delete;
    find "$xssptrtmp/xssptr" -type f -exec awk 'NR==1' \{\} \; | while IFS= read k4; do
    find "$xssptrtmp/xssptr" -type f -exec awk 'NR==1' \{\} \; | while IFS= read k4; do
    find "$a" -maxdepth 0 -mmin +4 -exec rm -rf \{\} \;;
    find "$a" -maxdepth 0 -mmin +4 -exec rm -rf \{\} \;;
    file "$f" | grep -E '(UTF-8 text|ASCII text)' > /dev/null || { 
    file "$f" | grep -E '(UTF-8 text|ASCII text)' > /dev/null || { 
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg;
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    fg
    expr "${xa} ${xs} ${ss} ${maskx}" : '^[[:xdigit:]]\{8\} [[:xdigit:]]\{8\} [[:xdigit:]]\{8\} [[:xdigit:]]$' > /dev/null || { 
    expr "${xa} ${xs} ${ss} ${maskx}" : '^[[:xdigit:]]\{8\} [[:xdigit:]]\{8\} [[:xdigit:]]\{8\} [[:xdigit:]]$' > /dev/null || { 
    expr "${eph}${span}${maskx}" : "^${xs}${ss}${maskx}$" > /dev/null || { 
    expr "${eph}${span}${maskx}" : "^${xs}${ss}${maskx}$" > /dev/null || { 
    expr "${3}" : "${5}" > /dev/null && p=true;
    expr "${3}" : "${5}" > /dev/null && p=true;
    expr "$xn" : '^[[:xdigit:]]*$' > /dev/null || { 
    expr "$xn" : '^[[:xdigit:]]*$' > /dev/null || { 
    expr "$t" : '^-' > /dev/null && { 
    expr "$t" : '^-' > /dev/null && { 
    expr "$p" : '^-[[:digit:]]*$' > /dev/null && p="${p}.0" || true;
    expr "$p" : '^-[[:digit:]]*$' > /dev/null && p="${p}.0" || true;
    expr "$kdb_locksleep" : '^[[:digit:]]*$' > /dev/null || { 
    expr "$kdb_locksleep" : '^[[:digit:]]*$' > /dev/null || { 
    expr "$k4" : "^/.*" > /dev/null || { 
    expr "$k4" : "^/.*" > /dev/null || { 
    expr "$k4" : "^${kdb}/.*/${k4##*/}" > /dev/null || { 
    expr "$k4" : "^${kdb}/.*/${k4##*/}" > /dev/null || { 
    expr "$f" : '^-[[:digit:]]*$' > /dev/null && f="${f}.0" || true;
    expr "$f" : '^-[[:digit:]]*$' > /dev/null && f="${f}.0" || true;
    expr "$f" : ".*/" > /dev/null && inpath="${f%/*}" || inpath=".";
    expr "$f" : ".*/" > /dev/null && inpath="${f%/*}" || inpath=".";
    expr "$1" : '[[:alpha:]][_[:alnum:]]*$' > /dev/null || { 
    expr "$1" : '[[:alpha:]][_[:alnum:]]*$' > /dev/null || { 
    expr "$1" : ".*\.kdb$" > /dev/null || { 
    expr "$1" : ".*\.kdb$" > /dev/null || { 
    expr "$1" : ".*/" > /dev/null && inpath="${1%/*}" || inpath=".";
    expr "$1" : ".*/" > /dev/null && inpath="${1%/*}" || inpath=".";
    expr "$1" : ".*/" > /dev/null && inpath="${1%/*}" || inpath=".";
    expr "$1" : ".*/" > /dev/null && inpath="${1%/*}" || inpath=".";
    expr "$1" : "-[-]*h" > /dev/null && { 
    expr "$1" : "-[-]*h" > /dev/null && { 
    expr "$*" : '^(.*)$' > /dev/null && filter="$*" || { 
    expr "$*" : '^(.*)$' > /dev/null && filter="$*" || { 
    export xss="$2";
    export xss="$2";
    export xs=$3 ss=$4;
    export xs=$3 ss=$4;
    export xs=$1 ss=$2
    export xs=$1 ss=$2
    export to=$(dc -e "$(hms2sec $ss) $(hms2sec $span) + $offc p");
    export to=$(dc -e "$(hms2sec $ss) $(hms2sec $span) + $offc p");
    export knx="$3";
    export knx="$3";
    export k4case='-i';
    export k4case='-i';
    export k4_unlong='kdb_stdin_fold';
    export k4_unlong='kdb_stdin_fold';
    export k4_unlong='k4db_fold';
    export k4_unlong='k4db_fold';
    export k4_unlong='ct';
    export k4_unlong='ct';
    export k4="$1";
    export k4="$1";
    export k4="$1";
    export k4="$1";
    export k4="$(kdbdf "${kdb}" $(kdbtx) | awk 'END{print $1}')";
    export k4="$(kdbdf "${kdb}" $(kdbtx) | awk 'END{print $1}')";
    esac;
    esac;
    esac;
    esac;
    esac;
    esac;
    esac
    esac
    echo;
    echo;
    echo;
    echo;
    echo | tai64n | sed -e 's/^@4[0]*//'
    echo | tai64n | sed -e 's/^@4[0]*//'
    echo | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/& /'
    echo | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/& /'
    echo ss=$ss to=$to f2rb2mp3 '$_f' $*;
    echo ss=$ss to=$to f2rb2mp3 '$_f' $*;
    echo -n "$1"; shift; [ $# -ne 0 ] && echo -n '|';
    echo -n "$1"; shift; [ $# -ne 0 ] && echo -n '|';
    echo -n " $pass"
    echo -n " $pass"
    echo 'export -f spin2 base ct ' 1>&2
    echo 'export -f spin2 base ct ' 1>&2
    echo ' export -f devnul stderr chkstd chkwrn logwrn chkerr logerr chktrue chkexit logexit siff siffx validfn' 1>&2
    echo ' export -f devnul stderr chkstd chkwrn logwrn chkerr logerr chktrue chkexit logexit siff siffx validfn' 1>&2
    echo ' eval "$(curl -fsSL --insecure https://raw.githubusercontent.com/georgalis/pub/master/sub/fn.bash)"' 1>&2;
    echo ' eval "$(curl -fsSL --insecure https://raw.githubusercontent.com/georgalis/pub/master/sub/fn.bash)"' 1>&2;
    echo ' eval "$(curl -fsSL --insecure https://raw.githubusercontent.com/georgalis/pub/master/skel/.profile)"' 1>&2;
    echo ' eval "$(curl -fsSL --insecure https://raw.githubusercontent.com/georgalis/pub/master/skel/.profile)"' 1>&2;
    echo ${pool};
    echo ${pool};
    echo $PATH | grep -E "(^$1:|^$1$)" 2>&1 > /dev/null || export PATH="${1}:${PATH}"
    echo $PATH | grep -E "(^$1:|^$1$)" 2>&1 > /dev/null || export PATH="${1}:${PATH}"
    echo $PATH | grep -E "(:$1$|^$1$|^$1:|:$1:)" 2>&1 > /dev/null || export PATH="${PATH}:${1}"
    echo $PATH | grep -E "(:$1$|^$1$|^$1:|:$1:)" 2>&1 > /dev/null || export PATH="${PATH}:${1}"
    echo $(( 86400 * i ));
    echo $(( 86400 * i ));
    echo "ss= ; export verb=chkwrn _f=@/$_fout _a= _r=" | tr -d '"' > "${1}.txt";
    echo "ss= ; export verb=chkwrn _f=@/$_fout _a= _r=" | tr -d '"' > "${1}.txt";
    echo "%km $* $(_kdb_file_headv '^%km ' "$k4" | sed 's/^%km /%m /')" >> "${r}/$k4x"
    echo "%km $* $(_kdb_file_headv '^%km ' "$k4" | sed 's/^%km /%m /')" >> "${r}/$k4x"
    echo "${sign}${out}"
    echo "${sign}${out}"
    echo "${p} ${s}" >> "$t";
    echo "${p} ${s}" >> "$t";
    echo "${1}.txt"
    echo "${1}.txt"
    echo "$url";
    echo "$url";
    echo "$types";
    echo "$types";
    echo "$type" > "$vptrf";
    echo "$type" > "$vptrf";
    echo "$out"
    echo "$out"
    echo "$kdb_vptr" > "${vptrf}" || { 
    echo "$kdb_vptr" > "${vptrf}" || { 
    echo "$k4"
    echo "$k4"
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read f; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _k4; do
    echo "$fs" | while IFS= read _fpath; do
    echo "$fs" | while IFS= read _fpath; do
    echo "$fs" | sed -e 's/\.\///' -e '/^$/d' | sort -u | while IFS= read i; do
    echo "$fs" | sed -e 's/\.\///' -e '/^$/d' | sort -u | while IFS= read i; do
    echo "$dirs" | sed -e '/^$/d' | while IFS= read a; do
    echo "$dirs" | sed -e '/^$/d' | while IFS= read a; do
    echo "$dir/.${xs}.${ss}.kdb $xa $xs $ss $kdbo $eph $span $maskx $hdate $pass"
    echo "$dir/.${xs}.${ss}.kdb $xa $xs $ss $kdbo $eph $span $maskx $hdate $pass"
    echo "$dir" "$xs" "$ss" "$eph" "$span" "$maskx" "$pass"
    echo "$dir" "$xs" "$ss" "$eph" "$span" "$maskx" "$pass"
    echo "$a"
    echo "$a"
    echo "$a"
    echo "$a"
    echo "$*" > "$arg";
    echo "$*" > "$arg";
    echo "# $to is 0x$(kdb_xs2hu $(printf '%x' $to))"
    echo "# $to is 0x$(kdb_xs2hu $(printf '%x' $to))"
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    echo
    dot4find "$hash" | grep -vE '(.vtt$|.json$)' | ckstat | sort -k5 | head -n1 | awk -v m="$dir/$hash" '{print "ln",$5,m}'
    dot4find "$hash" | grep -vE '(.vtt$|.json$)' | ckstat | sort -k5 | head -n1 | awk -v m="$dir/$hash" '{print "ln",$5,m}'
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done;
    done | while IFS= read a; do
    done | while IFS= read a; do
    done | while IFS= read a; do
    done | while IFS= read a; do
    done | tr '\n' ' ';
    done | tr '\n' ' ';
    done | tr '\n' ' ';
    done | tr '\n' ' ';
    done | sort -u
    done | sort -u
    done | sort -u
    done | sort -u
    done | sort -u
    done | sort -u
    done | sort -rn | awk '{print $2}' | tr '\n' '\ ';
    done | sort -rn | awk '{print $2}' | tr '\n' '\ ';
    done | sort -n -t '=' -k 2 | uniq -c
    done | sort -n -t '=' -k 2 | uniq -c
    done | sort -k5 | awk -F "\t" '{print $3}'
    done | sort -k5 | awk -F "\t" '{print $3}'
    done | sort
    done | sort
    done | awk '{printf "%s %d %s\n",$0,NR,$0}' | while IFS= read a; do
    done | awk '{printf "%s %d %s\n",$0,NR,$0}' | while IFS= read a; do
    done <<EOF
    done <<EOF
    done <<EOF
    done <<EOF
    done <<EOF
    done <<EOF
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    done
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    do
    dir="$1" xs="$2" ss="$3" eph="$4" span="$5" maskx="$6" pass="$7";
    dir="$1" xs="$2" ss="$3" eph="$4" span="$5" maskx="$6" pass="$7";
    declare -f validfn > /dev/null 2>&1 || { 
    declare -f validfn > /dev/null 2>&1 || { 
    declare -f kdb_k4_head_seq | grep '^# %';
    declare -f kdb_k4_head_seq | grep '^# %';
    declare -f chkerr > /dev/null 2>&1 || { 
    declare -f chkerr > /dev/null 2>&1 || { 
    dc -e "4k $1 $3 - $2 $4 - 1006632959 / + n";
    dc -e "4k $1 $3 - $2 $4 - 1006632959 / + n";
    dc -e "$k k $((0x$xn)) $((0x$xd)) / p"
    dc -e "$k k $((0x$xn)) $((0x$xd)) / p"
    date "+%Y%m%d %H:%M:%S:%a:%s" | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/&_/'
    date "+%Y%m%d %H:%M:%S:%a:%s" | tai64n | sed -e "s/^@4[0]*//" -e 's/^[[:xdigit:]]\{8\}/&_/'
    d="${d#./}";
    d="${d#./}";
    ci -m"($invoke)" -l -t-kdb -q "$in";
    ci -m"($invoke)" -l -t-kdb -q "$in";
    chkwrn incomplete;
    chkwrn incomplete;
    chkwrn "reimplement when named pool scheme is complete";
    chkwrn "reimplement when named pool scheme is complete";
    chkwrn "parameter '$1' valid";
    chkwrn "parameter '$1' valid";
    chkwrn "$FUNCNAME not implemented (62d6e7f2)";
    chkwrn "$FUNCNAME not implemented (62d6e7f2)";
    chkexit logexit siffx validfn
    chkexit logexit siffx validfn
    chkerr $(ls -d "$log"/*.log 2> /dev/null | sed -n -e :a -e '$q;N;2,50ba' -e 'P;D' | while IFS= read a; do
    chkerr $(ls -d "$log"/*.log 2> /dev/null | sed -n -e :a -e '$q;N;2,50ba' -e 'P;D' | while IFS= read a; do
    cd "$OLDPWD"
    cd "$OLDPWD"
    cd "$OLDPWD"
    cd "$OLDPWD"
    cat >> "$k4" <<EOF
    cat >> "$k4" <<EOF
    cat > /dev/null <<EOF
    cat > /dev/null <<EOF
    cat > /dev/null <<EOF
    cat > /dev/null <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat <<EOF
    cat 1>&2 <<'eof'
    cat 1>&2 <<'eof'
    cat $kdb_conf_bash;
    cat $kdb_conf_bash;
    cat "${kkf}" > "${kkf}~";
    cat "${kkf}" > "${kkf}~";
    case "$vptr" in 
    case "$vptr" in 
    case "$vptr" in 
    case "$vptr" in 
    case "$(uname)" in 
    case "$(uname)" in 
    case "$(uname)" in 
    case "$(uname)" in 
    base 32 $a;
    base 32 $a;
    awk '{printf "%s %s\n",$0,NR}' <<< "$fs" | while IFS= read a; do
    awk '{printf "%s %s\n",$0,NR}' <<< "$fs" | while IFS= read a; do
    awk '{print $1}' <<< "$unsupported_types" | grep -q "^${type}$" && { 
    awk '{print $1}' <<< "$unsupported_types" | grep -q "^${type}$" && { 
    awk '{print $1}' <<< "$types" | grep -q "^${type}$" || { 
    awk '{print $1}' <<< "$types" | grep -q "^${type}$" || { 
    awk 'NR==1,/^$/' "$k4" | awk '!/^$/' | grep -vE "$e"
    awk 'NR==1,/^$/' "$k4" | awk '!/^$/' | grep -vE "$e"
    awk 'NR==1' "$vptrf";
    awk 'NR==1' "$vptrf";
    awk 'NR<=3' "$ptrf" | tr '\n' ' ';
    awk 'NR<=3' "$ptrf" | tr '\n' ' ';
    awk '/^$/,0' "$k4"
    awk '/^$/,0' "$k4"
    _youtube_json2txt $(sed -e '/as JSON to/!d' -e 's/.*to: //' < "$HOME/%/ytdl/$t");
    _youtube_json2txt $(sed -e '/as JSON to/!d' -e 's/.*to: //' < "$HOME/%/ytdl/$t");
    _tmu_active_sessions;
    _tmu_active_sessions;
    _spin2_n=$((++_spin2_n))
    _spin2_n=$((++_spin2_n))
    _spin1_n=$((++_spin1_n))
    _spin1_n=$((++_spin1_n))
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 1;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" 0;
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_pool "${kdb_pool}" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_valid_k4 "$k4" || { 
    _kdb_term_pright "(${pool}:$(find "${pool}/xssptr" -type f | awk 'END{print NR}')) $invoke" '~';
    _kdb_term_pright "(${pool}:$(find "${pool}/xssptr" -type f | awk 'END{print NR}')) $invoke" '~';
    _kdb_term_pright "$invoke" '~';
    _kdb_term_pright "$invoke" '~';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '\';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pright "$invoke" '/';
    _kdb_term_pleft 'root files';
    _kdb_term_pleft 'root files';
    _kdb_term_pleft 'Complex Functions';
    _kdb_term_pleft 'Complex Functions';
    _kdb_term_pleft 'Basic Functions';
    _kdb_term_pleft 'Basic Functions';
    _kdb_term_pleft "Configuration $kdb_conf_bash";
    _kdb_term_pleft "Configuration $kdb_conf_bash";
    _kdb_term_pleft "$vkdb/kdb.*.fn.bash";
    _kdb_term_pleft "$vkdb/kdb.*.fn.bash";
    _kdb_term_pleft "$kdb_init_bash";
    _kdb_term_pleft "$kdb_init_bash";
    _kdb_term_pcenter 'Glossary';
    _kdb_term_pcenter 'Glossary';
    _kdb_term_pcenter "kdb help" '=';
    _kdb_term_pcenter "kdb help" '=';
    _kdb_term_pcenter "k4 Header Types";
    _kdb_term_pcenter "k4 Header Types";
    _kdb_term_pcenter "Function Types";
    _kdb_term_pcenter "Function Types";
    _kdb_term_pcenter "" "-";
    _kdb_term_pcenter "" "-";
    _kdb_term_hline '~';
    _kdb_term_hline '~';
    _kdb_term_hline '~';
    _kdb_term_hline '~';
    _kdb_term_hline '\';
    _kdb_term_hline '\';
    _kdb_term_hline '/';
    _kdb_term_hline '/';
    _kdb_term_hline '-';
    _kdb_term_hline '-';
    _kdb_file_headg "^%k(r|p|j|l|b|c|q) " "${pool}/xsshln/${xss}" | _kdb_k4_default_squash | awk '{print $2}' | sort -u >> "${kkf}~";
    _kdb_file_headg "^%k(r|p|j|l|b|c|q) " "${pool}/xsshln/${xss}" | _kdb_k4_default_squash | awk '{print $2}' | sort -u >> "${kkf}~";
    _kdb_file_headg "$k4_topic" "$k4" | _kdb_k4_default_squash;
    _kdb_file_headg "$k4_topic" "$k4" | _kdb_k4_default_squash;
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "pool $kdb_pool";
    _kdb_0_lockwait "k4";
    _kdb_0_lockwait "k4";
    _kdb_0_lockwait "k4";
    _kdb_0_lockwait "k4";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockwait "$FUNCNAME";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "pool $kdb_pool";
    _kdb_0_lockun "k4";
    _kdb_0_lockun "k4";
    _kdb_0_lockun "k4";
    _kdb_0_lockun "k4";
    _kdb_0_lockun "$FUNCNAME";
    _kdb_0_lockun "$FUNCNAME";
    _kdb_0_lockun "$FUNCNAME";
    _kdb_0_lockun "$FUNCNAME";
    _kdb_0_lock $@ || { 
    _kdb_0_lock $@ || { 
    [[ "$x" =~ ^-?[0-9]+$ ]] || { 
    [[ "$x" =~ ^-?[0-9]+$ ]] || { 
    [[ "$base" =~ ^-?[0-9]+$ ]] || { 
    [[ "$base" =~ ^-?[0-9]+$ ]] || { 
    [ -z "$ss" -a "$to" ] && secc="-to $tsec" secn="-to$tsec";
    [ -z "$ss" -a "$to" ] && secc="-to $tsec" secn="-to$tsec";
    [ -z "$d" -o "$d" = "." -o "$d" = "./" ] && d="$PWD";
    [ -z "$d" -o "$d" = "." -o "$d" = "./" ] && d="$PWD";
    [ -z "$basefp" ] && { 
    [ -z "$basefp" ] && { 
    [ -z "$1" ] && d="./" || d="$1";
    [ -z "$1" ] && d="./" || d="$1";
    [ -x "$d" ] || { 
    [ -x "$d" ] || { 
    [ -x "$(which sox)" ] || { 
    [ -x "$(which sox)" ] || { 
    [ -x "$(which ffmpeg)" ] || { 
    [ -x "$(which ffmpeg)" ] || { 
    [ -x "$(which "$rb")" ] || { 
    [ -x "$(which "$rb")" ] || { 
    [ -w "$f" -a -f "$f" ] || { 
    [ -w "$f" -a -f "$f" ] || { 
    [ -w "$d" ] || { 
    [ -w "$d" ] || { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -t 1 ] && { 
    [ -f "${inpath}/tmp/${infile}${secn}.meas" ] || { 
    [ -f "${inpath}/tmp/${infile}${secn}.meas" ] || { 
    [ -f "${inpath}/tmp/${infile}${secn}${lnn}.flac" ] || { 
    [ -f "${inpath}/tmp/${infile}${secn}${lnn}.flac" ] || { 
    [ -f "${f%%/*}" ] && echo "${f%%/*}" || true;
    [ -f "${f%%/*}" ] && echo "${f%%/*}" || true;
    [ -f "${f%%/*}" ] && echo "${f%%/*}" || true;
    [ -f "${f%%/*}" ] && echo "${f%%/*}" || true;
    [ -f "${1}.txt" ] && { 
    [ -f "${1}.txt" ] && { 
    [ -f "${1}" ] || { 
    [ -f "${1}" ] || { 
    [ -f "$basefp" ] || { 
    [ -f "$basefp" ] || { 
    [ -f "$LOCK" ] && { 
    [ -f "$LOCK" ] && { 
    [ -f "$1" ] || { 
    [ -f "$1" ] || { 
    [ -e "${pool}/xssptr/${xss}" ] || { 
    [ -e "${pool}/xssptr/${xss}" ] || { 
    [ -e "${cache_9_topic}%" ] && { 
    [ -e "${cache_9_topic}%" ] && { 
    [ -e "${cache_8_value}%" ] && { 
    [ -e "${cache_8_value}%" ] && { 
    [ -e "${cache_7_graph}%" ] && { 
    [ -e "${cache_7_graph}%" ] && { 
    [ -e "${cache_6_search}%" ] && { 
    [ -e "${cache_6_search}%" ] && { 
    [ -e "${cache_5_km}%" ] && { 
    [ -e "${cache_5_km}%" ] && { 
    [ -e "$t0" -a -e "$t1" ] || { 
    [ -e "$t0" -a -e "$t1" ] || { 
    [ -e "$pool/xssptr/$2" ] && { 
    [ -e "$pool/xssptr/$2" ] && { 
    [ -e "$lock" ] && { 
    [ -e "$lock" ] && { 
    [ -e "$k4" ] || { 
    [ -e "$k4" ] || { 
    [ -e "$1" ] && cat "$1" > "$key_in" || cat /dev/stdin > "$key_in";
    [ -e "$1" ] && cat "$1" > "$key_in" || cat /dev/stdin > "$key_in";
    [ -d $HOME/Downloads ] && tmp="$HOME/Downloads/tmp" || tmp="$HOME/tmp";
    [ -d $HOME/Downloads ] && tmp="$HOME/Downloads/tmp" || tmp="$HOME/tmp";
    [ -d "$d" ] || { 
    [ -d "$d" ] || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || mkdir -p "$d" || { 
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" ] || d="$(pwd -P)";
    [ -d "$d" -a -w "$d" -a -f "$d/$f" -a -w "$d/$f" ] || { 
    [ -d "$d" -a -w "$d" -a -f "$d/$f" -a -w "$d/$f" ] || { 
    [ $x -lt 0 ] && sign='-' || { 
    [ $x -lt 0 ] && sign='-' || { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && { 
    [ $# -gt 0 ] && while [ $# -gt 0 ]; do
    [ $# -gt 0 ] && while [ $# -gt 0 ]; do
    [ $# -gt 0 ] && while [ $# -gt 0 ]; do
    [ $# -gt 0 ] && while [ $# -gt 0 ]; do
    [ $# -gt 0 ] && fs="$1";
    [ $# -gt 0 ] && fs="$1";
    [ "${xs}${ss}" ] || { 
    [ "${xs}${ss}" ] || { 
    [ "${xs}" ] || { 
    [ "${xs}" ] || { 
    [ "${xs}" ] || { 
    [ "${xs}" ] || { 
    [ "${prependt}" ] || prependt=00,;
    [ "${prependt}" ] || prependt=00,;
    [ "${offn}${lran}${tpn}${in}" ] && lnn="-ln${lran}${tpn}${in}${offn}" || lnn="-ln";
    [ "${offn}${lran}${tpn}${in}" ] && lnn="-ln${lran}${tpn}${in}${offn}" || lnn="-ln";
    [ "${kdb}" = "$HOME/k" ] || { 
    [ "${kdb}" = "$HOME/k" ] || { 
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$ytdl" ] || ytdl="youtube-dl";
    [ "$v" ] && { 
    [ "$v" ] && { 
    [ "$v" ] && v="-volume $v" || v="-volume 100";
    [ "$v" ] && v="-volume $v" || v="-volume 100";
    [ "$v" ] && v="-volume $v" || v="-volume 100";
    [ "$v" ] && v="-volume $v" || v="-volume 100";
    [ "$v" ] && local v=4db;
    [ "$v" ] && local v=4db;
    [ "$type" ] || { 
    [ "$type" ] || { 
    [ "$type" = "all" ] && { 
    [ "$type" = "all" ] && { 
    [ "$tp" ] && tpn="-tp$tp";
    [ "$tp" ] && tpn="-tp$tp";
    [ "$to" ] || local to="$(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')";
    [ "$to" ] || local to="$(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')";
    [ "$to" ] && { 
    [ "$to" ] && { 
    [ "$title" ] || return 0;
    [ "$title" ] || return 0;
    [ "$t" ] && tc="--time $t" tn="-t${t}" || true;
    [ "$t" ] && tc="--time $t" tn="-t${t}" || true;
    [ "$t" -o "$p" ] && { 
    [ "$t" -o "$p" ] && { 
    [ "$t" -o "$p" -o "$f" ] && { 
    [ "$t" -o "$p" -o "$f" ] && { 
    [ "$sum" = "$check" ] || { 
    [ "$sum" = "$check" ] || { 
    [ "$sum" = "$check" ] || { 
    [ "$sum" = "$check" ] || { 
    [ "$stop" ] && { 
    [ "$stop" ] && { 
    [ "$start" ] || start='.';
    [ "$start" ] || start='.';
    [ "$ss" = 0 ] && local ss= || { 
    [ "$ss" = 0 ] && local ss= || { 
    [ "$ss" -a "$to" ] && secc="-ss $ssec -to $tsec" secn="-ss${ssec}-to${tsec}";
    [ "$ss" -a "$to" ] && secc="-ss $ssec -to $tsec" secn="-ss${ssec}-to${tsec}";
    [ "$s" = "-n" -o "$s" = "--no-source" ] && { 
    [ "$s" = "-n" -o "$s" = "--no-source" ] && { 
    [ "$s" = "$f" ] && { 
    [ "$s" = "$f" ] && { 
    [ "$rev" = "y" ] && vn="${vn}-rev" vc="$vc reverse";
    [ "$rev" = "y" ] && vn="${vn}-rev" vc="$vc reverse";
    [ "$ptrf" ] || { 
    [ "$ptrf" ] || { 
    [ "$ptrf" ] || { 
    [ "$ptrf" ] || { 
    [ "$ptrf" ] || ptrf="$(find "$xssptr" -name "${in}*" -regex "^${xssptr}/${in}[[:xdigit:]]\{8\}$")";
    [ "$ptrf" ] || ptrf="$(find "$xssptr" -name "${in}*" -regex "^${xssptr}/${in}[[:xdigit:]]\{8\}$")";
    [ "$ptrf" ] || ptrf="$(find "$xssptr" -name "${in}" -regex "^${xssptr}/[[:xdigit:]]\{16\}$")";
    [ "$ptrf" ] || ptrf="$(find "$xssptr" -name "${in}" -regex "^${xssptr}/[[:xdigit:]]\{16\}$")";
    [ "$ptrf" ] || ptrf="$(find "$knxptr" -name "${in}" -regex "^${knxptr}/${in}$")";
    [ "$ptrf" ] || ptrf="$(find "$knxptr" -name "${in}" -regex "^${knxptr}/${in}$")";
    [ "$p" ] || { 
    [ "$p" ] || { 
    [ "$p" ] && pc="--pitch $p" pn="-p${p}" || true;
    [ "$p" ] && pc="--pitch $p" pn="-p${p}" || true;
    [ "$p" = 0 ] && local p= || true;
    [ "$p" = 0 ] && local p= || true;
    [ "$offset" ] && offc="$offset +" || offc='';
    [ "$offset" ] && offc="$offset +" || offc='';
    [ "$off" ] && offn="-off$off";
    [ "$off" ] && offn="-off$off";
    [ "$n" -gt 0 ] || { 
    [ "$n" -gt 0 ] || { 
    [ "$m" = "1" ] && { 
    [ "$m" = "1" ] && { 
    [ "$m" = "0" ] && { 
    [ "$m" = "0" ] && { 
    [ "$lra" ] && lran="-lra$lra";
    [ "$lra" ] && lran="-lra$lra";
    [ "$knxf" ] && { 
    [ "$knxf" ] && { 
    [ "$kdbo" ] || local kdbo="${USER}@$(hostname -s):$(sed "s;^$HOME/;;" <<< $kdb)";
    [ "$kdbo" ] || local kdbo="${USER}@$(hostname -s):$(sed "s;^$HOME/;;" <<< $kdb)";
    [ "$kdb_vptr" ] || kdb_vptr="k4mi";
    [ "$kdb_vptr" ] || kdb_vptr="k4mi";
    [ "$kdb_var" ] || export kdb_var='v';
    [ "$kdb_var" ] || export kdb_var='v';
    [ "$kdb_tmp" ] || kdb_tmp="%";
    [ "$kdb_tmp" ] || kdb_tmp="%";
    [ "$kdb_tmp" ] || export kdb_tmp='%';
    [ "$kdb_tmp" ] || export kdb_tmp='%';
    [ "$kdb_pool" ] || { 
    [ "$kdb_pool" ] || { 
    [ "$kdb_pool" ] || kdb_pool="0";
    [ "$kdb_pool" ] || kdb_pool="0";
    [ "$kdb_pool" ] || export kdb_pool='0';
    [ "$kdb_pool" ] || export kdb_pool='0';
    [ "$kdb_log" ] || kdb_log=",";
    [ "$kdb_log" ] || kdb_log=",";
    [ "$kdb_log" ] || export kdb_log=',';
    [ "$kdb_log" ] || export kdb_log=',';
    [ "$kdb_cache" ] || export kdb_cache='c';
    [ "$kdb_cache" ] || export kdb_cache='c';
    [ "$k4s" ] && { 
    [ "$k4s" ] && { 
    [ "$k4" ] || { 
    [ "$k4" ] || { 
    [ "$in" ] || in="0";
    [ "$in" ] || in="0";
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || { 
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$id" ] || read -p "youtube id: " id;
    [ "$i" ] && in="-i$i";
    [ "$i" ] && in="-i$i";
    [ "$hashfn" ] || { 
    [ "$hashfn" ] || { 
    [ "$hashex" ] || { 
    [ "$hashex" ] || { 
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" ] || fs="$(cat)";
    [ "$fs" = '-volume' ] && { 
    [ "$fs" = '-volume' ] && { 
    [ "$fs" = '-volume' ] && { 
    [ "$fs" = '-volume' ] && { 
    [ "$fn" ] || return 0;
    [ "$fn" ] || return 0;
    [ "$f" ] && { 
    [ "$f" ] && { 
    [ "$f" = "chz" ] && { 
    [ "$f" = "chz" ] && { 
    [ "$f" = "bhz" ] && { 
    [ "$f" = "bhz" ] && { 
    [ "$exin" ] || return 0;
    [ "$exin" ] || return 0;
    [ "$dst" ] && mkdir -p "$dst" || { 
    [ "$dst" ] && mkdir -p "$dst" || { 
    [ "$dirs" ] || dirs="$PWD";
    [ "$dirs" ] || dirs="$PWD";
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" ] || read -p "directory: " d;
    [ "$d" = "/" ] && return || dirper $(dirname "$d")
    [ "$d" = "/" ] && return || dirper $(dirname "$d")
    [ "$d" = "$f" ] && d='.' || true;
    [ "$d" = "$f" ] && d='.' || true;
    [ "$cmpn" ] && vn="-$cmpn" vc="$cmpc" || true;
    [ "$cmpn" ] && vn="-$cmpn" vc="$cmpc" || true;
    [ "$cmp" = "parc" ] && cmpn="$cmp" cmpc="$parc";
    [ "$cmp" = "parc" ] && cmpn="$cmp" cmpc="$parc";
    [ "$cmp" = "par4" ] && cmpn="$cmp" cmpc="$par4";
    [ "$cmp" = "par4" ] && cmpn="$cmp" cmpc="$par4";
    [ "$cmp" = "par2" ] && cmpn="$cmp" cmpc="$par2";
    [ "$cmp" = "par2" ] && cmpn="$cmp" cmpc="$par2";
    [ "$cmp" = "hrn3" ] && cmpn="$cmp" cmpc="$hrn3";
    [ "$cmp" = "hrn3" ] && cmpn="$cmp" cmpc="$hrn3";
    [ "$cmp" = "hrn" -o "$cmp" = "hrn1" ] && cmpn="hrn3" cmpc="$hrn3";
    [ "$cmp" = "hrn" -o "$cmp" = "hrn1" ] && cmpn="hrn3" cmpc="$hrn3";
    [ "$cmp" = "cps1" ] && cmpn="$cmp" cmpc="$cps1";
    [ "$cmp" = "cps1" ] && cmpn="$cmp" cmpc="$cps1";
    [ "$cmp" = "cps" ] && cmpn="cps1" cmpc="$cps1";
    [ "$cmp" = "cps" ] && cmpn="cps1" cmpc="$cps1";
    [ "$cmp" = "ckb3" ] && cmpn="$cmp" cmpc="$ckb3";
    [ "$cmp" = "ckb3" ] && cmpn="$cmp" cmpc="$ckb3";
    [ "$cmp" = "ckb2" ] && cmpn="$cmp" cmpc="$ckb2";
    [ "$cmp" = "ckb2" ] && cmpn="$cmp" cmpc="$ckb2";
    [ "$cmp" = "ckb" ] && cmpn="$cmp" cmpc="$ckb0";
    [ "$cmp" = "ckb" ] && cmpn="$cmp" cmpc="$ckb0";
    [ "$cksum" = "2549266757 281" ] || { 
    [ "$cksum" = "2549266757 281" ] || { 
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$char" ] || char="-";
    [ "$c" ] || c=1;
    [ "$c" ] || c=1;
    [ "$c" = "r3" ] && cc='--fine' cn='-r3';
    [ "$c" = "r3" ] && cc='--fine' cn='-r3';
    [ "$c" -ge 0 ] || c=0;
    [ "$c" -ge 0 ] || c=0;
    [ "$c" -a -z "$cc" ] && { 
    [ "$c" -a -z "$cc" ] && { 
    [ "$c" -a -z "$cc" ] && { 
    [ "$c" -a -z "$cc" ] && { 
    [ "$base" -a "$x" ] || { 
    [ "$base" -a "$x" ] || { 
    [ "$args" ] || args=0;
    [ "$args" ] || args=0;
    [ "$args" = "se" -o "$args" = "sessions" ] && { 
    [ "$args" = "se" -o "$args" = "sessions" ] && { 
    [ "$args" = "at" -o "$args" = "attach" -o -z "$args" ] && args="$(_tmu_active_sessions | awk 'END {print $1}')";
    [ "$args" = "at" -o "$args" = "attach" -o -z "$args" ] && args="$(_tmu_active_sessions | awk 'END {print $1}')";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$addl" ] && addl_re="$(echo "$addl" | sed -e 's/s//g' -e 's/\(.\)/&|/g' -e 's/|$//' -e 's/^/^%k(/' -e 's/$/)\ /')" || addl_re="^$";
    [ "$_spin2_n" ] || _spin2_n=1;
    [ "$_spin2_n" ] || _spin2_n=1;
    [ "$_spin2" ] || local _spin2='_./-|-\+/-|-\ ' && local _spin2_len="${#_spin2}";
    [ "$_spin2" ] || local _spin2='_./-|-\+/-|-\ ' && local _spin2_len="${#_spin2}";
    [ "$_spin1_n" ] || _spin1_n=1;
    [ "$_spin1_n" ] || _spin1_n=1;
    [ "$_spin1" ] || local _spin1='_./-|-\+/-|-\ ' && local _spin1_len="${#_spin1}";
    [ "$_spin1" ] || local _spin1='_./-|-\+/-|-\ ' && local _spin1_len="${#_spin1}";
    [ "$_hashfn" ] || _hashfn="$hashfn";
    [ "$_hashfn" ] || _hashfn="$hashfn";
    [ "$_hashex" ] || _hashex="$hashex";
    [ "$_hashex" ] || _hashex="$hashex";
    [ "$OS" ] || local OS="$(uname)";
    [ "$OS" ] || local OS="$(uname)";
    [ "$OS" ] || local OS="$(uname)";
    [ "$OS" ] || local OS="$(uname)";
    [ "$OS" = "Linux" ] && function _stat () 
    [ "$OS" = "Linux" ] && function _stat () 
    [ "$OS" = "Linux" ] && function _stat () 
    [ "$OS" = "Linux" ] && function _stat () 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" ] && function _stat () 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" ] && function _stat () 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" ] && function _stat () 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" ] && function _stat () 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" -o "$OS" = "Linux" ] || { 
    [ "$OS" = "Darwin" -o "$OS" = "NetBSD" -o "$OS" = "Linux" ] || { 
    [ "$LC_ALL" = "C" ] || { 
    [ "$LC_ALL" = "C" ] || { 
    [ "$LANG" = "en_US.US-ASCII" ] || { 
    [ "$LANG" = "en_US.US-ASCII" ] || { 
    [ "$@" ] && args=$@;
    [ "$@" ] && args=$@;
    [ "$2" ] || local dir="$links/_ln" && local dir="$2";
    [ "$2" ] || local dir="$links/_ln" && local dir="$2";
    [ "$1" ] || { 
    [ "$1" ] || { 
    [ "$1" ] || { 
    [ "$1" ] || { 
    [ "$1" ] || { 
    [ "$1" ] || { 
    [ "$1" ] || set .;
    [ "$1" ] || set .;
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && { 
    [ "$1" ] && local kdb_pool="$1" || local kdb_pool="$kdb_pool";
    [ "$1" ] && local kdb_pool="$1" || local kdb_pool="$kdb_pool";
    [ "$1" ] && local hash="$1" || { 
    [ "$1" ] && local hash="$1" || { 
    [ "$1" ] && local _spin2="$1" && local _spin2_len="${#_spin2}";
    [ "$1" ] && local _spin2="$1" && local _spin2_len="${#_spin2}";
    [ "$1" ] && local _spin1="$1" && local _spin1_len="${#_spin1}";
    [ "$1" ] && local _spin1="$1" && local _spin1_len="${#_spin1}";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && g="$1" || g="-45";
    [ "$1" ] && $FUNCNAME $@ || true;
    [ "$1" ] && $FUNCNAME $@ || true;
    [ "$1" ] && $FUNCNAME $@ || true;
    [ "$1" ] && $FUNCNAME $@ || true;
    [ "$1" = "help" ] && { 
    [ "$1" = "help" ] && { 
    [ "$1" = "0" ] && printf "\010" 1>&2 && return 0;
    [ "$1" = "0" ] && printf "\010" 1>&2 && return 0;
    [ "$1" = "0" ] && printf "\010" && return 0;
    [ "$1" = "0" ] && printf "\010" && return 0;
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" ] && { 
    [ "$1" = "-h" -o "$1" = "--help" -o "$#" = 0 ] && { 
    [ "$1" = "-h" -o "$1" = "--help" -o "$#" = 0 ] && { 
    [ "$1" = "%km" -a "$2" = "62ad8685" ] && chktrue km ok $k4;
    [ "$1" = "%km" -a "$2" = "62ad8685" ] && chktrue km ok $k4;
    [ "$*" ] || { 
    [ "$*" ] || { 
    [ "$*" ] || { 
    [ "$*" ] || { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && { 
    [ "$*" ] && n="$(awk 'NR==1' <<< "$*")" || IFS= read n;
    [ "$*" ] && n="$(awk 'NR==1' <<< "$*")" || IFS= read n;
    [ "$*" ] && echo "$*" || true
    [ "$*" ] && echo "$*" || true
    [ "$*" ] && echo "$*" 1>&2 || true
    [ "$*" ] && echo "$*" 1>&2 || true
    [ "$(find "${kdb}/0/${kdb_pool}" -mindepth 1 | awk 'END{print NR}')" -eq 0 ] && rm -i -rf "${kdb}/0/${kdb_pool}" || { 
    [ "$(find "${kdb}/0/${kdb_pool}" -mindepth 1 | awk 'END{print NR}')" -eq 0 ] && rm -i -rf "${kdb}/0/${kdb_pool}" || { 
    [ "$(find "$cache_km" -type f -mtime -1 2> /dev/null)" ] || kdb_cache_upd & _kdb_0_lockun "$FUNCNAME";
    [ "$(find "$cache_km" -type f -mtime -1 2> /dev/null)" ] || kdb_cache_upd & _kdb_0_lockun "$FUNCNAME";
    [ "$(dirname "$d")" = '.' ] && d="$PWD/$d";
    [ "$(dirname "$d")" = '.' ] && d="$PWD/$d";
    [ "$#" = 0 ] && { 
    [ "$#" = 0 ] && { 
    [ "$#" -gt 0 ] && k $@ || true;
    [ "$#" -gt 0 ] && k $@ || true;
    XXX;
    XXX;
    IFS= read s;
    IFS= read s;
    ( set -o errexit;
    ( set -o errexit;
    ( cd $(dirname "$basefp") && mv -i -f "$basefn" "${title}${basefn}" )
    ( cd $(dirname "$basefp") && mv -i -f "$basefn" "${title}${basefn}" )
    $ytdl --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id | tee "$HOME/%/ytdl/$t";
    $ytdl --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id | tee "$HOME/%/ytdl/$t";
    $verb2 "input='$inpath/$infile'";
    $verb2 "input='$inpath/$infile'";
    $verb2 "cmpn='$cmpn'";
    $verb2 "cmpn='$cmpn'";
    $verb2 "cmpc='$cmpc'";
    $verb2 "cmpc='$cmpc'";
    $verb2 "$(hms2sec $(ffprobe -hide_banner -loglevel info "${inpath}/tmp/${infile}${secn}.flac" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds flac";
    $verb2 "$(hms2sec $(ffprobe -hide_banner -loglevel info "${inpath}/tmp/${infile}${secn}.flac" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds flac";
    $verb for expr "${stop}" : "${start}";
    $verb for expr "${stop}" : "${start}";
    $verb "./loss/${prependt}${out}${vn}.mp3";
    $verb "./loss/${prependt}${out}${vn}.mp3";
    $verb "${inpath}/tmp/${infile}${secn}.meas";
    $verb "${inpath}/tmp/${infile}${secn}.meas";
    $verb "${inpath}/tmp/${infile}${secn}${lnn}.{flac,meas}";
    $verb "${inpath}/tmp/${infile}${secn}${lnn}.{flac,meas}";
    $verb "$(hms2sec $(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds gross";
    $verb "$(hms2sec $(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds gross";
    $verb "$(awk '{ print $2 - $1 }' <<< "${ssec} ${tsec}") seconds request";
    $verb "$(awk '{ print $2 - $1 }' <<< "${ssec} ${tsec}") seconds request";
    $tail "$tmp/lacktone"
    $tail "$tmp/lacktone"
    $kdblog "find \"${kdb}\" \( -regex \"${kdb}/0\" -prune -type f \) -o -type f -name \.\*\.kdb 2>/dev/null";
    $kdblog "find \"${kdb}\" \( -regex \"${kdb}/0\" -prune -type f \) -o -type f -name \.\*\.kdb 2>/dev/null";
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "fin $$ : $invoke"
    $kdblog "beg $$ : k4since='$k4since' $invoke";
    $kdblog "beg $$ : k4since='$k4since' $invoke";
    $kdblog "V> $invoke";
    $kdblog "V> $invoke";
    $kdblog "V> $invoke";
    $kdblog "V> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "U> $invoke";
    $kdblog "N> $invoke";
    $kdblog "N> $invoke";
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<V $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<U $invoke"
    $kdblog "<N $invoke"
    $kdblog "<N $invoke"
    $kdblog "<0 $invoke";
    $kdblog "<0 $invoke";
    $kdblog "<0 $invoke";
    $kdblog "<0 $invoke";
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "<0 $invoke"
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0> $invoke";
    $kdblog "0< $invoke #$$"
    $kdblog "0< $invoke #$$"
    $kdblog "0. $invoke {kdb}";
    $kdblog "0. $invoke {kdb}";
    $kdblog "0. $invoke vlidfn check";
    $kdblog "0. $invoke vlidfn check";
    $kdblog "0. $invoke timestamps";
    $kdblog "0. $invoke timestamps";
    $kdblog "0. $invoke set local dir paths";
    $kdblog "0. $invoke set local dir paths";
    $kdblog "0. $invoke prerequisite check";
    $kdblog "0. $invoke prerequisite check";
    $kdblog "0. $invoke misc env";
    $kdblog "0. $invoke misc env";
    $kdblog "0. $invoke locale";
    $kdblog "0. $invoke locale";
    $kdblog "0. $invoke keep 50 recent and delete logs over 4 minutes XXX days old";
    $kdblog "0. $invoke keep 50 recent and delete logs over 4 minutes XXX days old";
    $kdblog "0. $invoke kdb_valid_dir";
    $kdblog "0. $invoke kdb_valid_dir";
    $kdblog "0. $invoke kdb_init_pool";
    $kdblog "0. $invoke kdb_init_pool";
    $kdblog "0. $invoke find -empty -delete";
    $kdblog "0. $invoke find -empty -delete";
    $kdblog "0. $invoke export unset default dir names";
    $kdblog "0. $invoke export unset default dir names";
    $kdblog "0. $invoke create dir paths";
    $kdblog "0. $invoke create dir paths";
    $kdblog "0. $invoke ad hoc";
    $kdblog "0. $invoke ad hoc";
    $kdblog "0. $invoke _kdb_valid_pool '${kdb_pool}'";
    $kdblog "0. $invoke _kdb_valid_pool '${kdb_pool}'";
    $kdblog "0. $invoke : inc 0 knx";
    $kdblog "0. $invoke : inc 0 knx";
    $EDITOR "$k4";
    $EDITOR "$k4";
    $1, $3, $4, $5, $8, $7, $6, $9}';
    $1, $3, $4, $5, $8, $7, $6, $9}';
    "$ytdl" --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id;
    "$ytdl" --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id;
    "$ytdl" --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --keep-video --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id
    "$ytdl" --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --keep-video --abort-on-error --no-playlist -o "$d/00,%(title)s-%(upload_date)s_^%(id)s.%(ext)s" $id
    "$ytdl" --abort-on-error --yes-playlist --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id;
    "$ytdl" --abort-on-error --yes-playlist --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id;
    "$ytdl" --abort-on-error --yes-playlist --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id
    "$ytdl" --abort-on-error --yes-playlist --write-info-json --write-comments --write-sub --write-thumbnail --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id
    "$ytdl" --abort-on-error --yes-playlist --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --keep-video --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id
    "$ytdl" --abort-on-error --yes-playlist --restrict-filenames --audio-quality 0 --audio-format best --extract-audio --keep-video --playlist-start 1 -o "$d/%(playlist_title)s/%(playlist_index)s,%(title)s-%(playlist_title)s-%(playlist_id)s-%(upload_date)s_^%(id)s.%(ext)s" $id
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        };
        } || { 
        } || { 
        } || { 
        } || { 
        } || { 
        } || { 
        } || true;
        } || true;
        } || true;
        } || true;
        } || chkwrn "not a dir with mp3 files : '$a'" );
        } || chkwrn "not a dir with mp3 files : '$a'" );
        } || chkwrn "$0 : not a file : '$f'";
        } || chkwrn "$0 : not a file : '$f'";
        } || chkwrn "$0 : not a file : '$f'";
        } || chkwrn "$0 : not a file : '$f'";
        } || chkerr "$FUNCNAME : not a regular file : $f";
        } || chkerr "$FUNCNAME : not a regular file : $f";
        } || chkerr "$FUNCNAME : does not exist '$f'";
        } || chkerr "$FUNCNAME : does not exist '$f'";
        } | while IFS= read str; do
        } | while IFS= read str; do
        } | while IFS= read f; do
        } | while IFS= read f; do
        } | tr -d '\n';
        } | tr -d '\n';
        } | tr -d '\n';
        } | tr -d '\n';
        } | tr -d '\n';
        } | tr -d '\n';
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' ":";
        } | tr '\n' " ";
        } | tr '\n' " ";
        } | ct;
        } | ct;
        } | ct;
        } | ct;
        } | ct;
        } | ct;
        } | ct;
        } | ct;
        } > "${inpath}/tmp/${infile}${secn}.meas~";
        } > "${inpath}/tmp/${infile}${secn}.meas~";
        } > "${inpath}/tmp/${infile}${secn}${lnn}.meas~";
        } > "${inpath}/tmp/${infile}${secn}${lnn}.meas~";
        } 1>&9;
        } 1>&9;
        } 1>&8;
        } 1>&8;
        } 1>&7;
        } 1>&7;
        } 1>&6;
        } 1>&6;
        } 1>&5;
        } 1>&5;
        } && _hashfn="_hashfn"
        } && _hashfn="_hashfn"
        } && _hashex="_hashex"
        } && _hashex="_hashex"
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        { 
        xssdaysec > "$t1";
        xssdaysec > "$t1";
        xssdaysec > "$t0";
        xssdaysec > "$t0";
        xss="${xssf##*/}";
        xss="${xssf##*/}";
        xss="${ptr}";
        xss="${ptr}";
        xss="${hln##*/}";
        xss="${hln##*/}";
        xss="${hln##*/}";
        xss="${hln##*/}";
        xskv)
        xskv)
        xskv)
        xskv)
        xs=$1;
        xs=$1;
        xs=$1;
        xs=$1;
        xs)
        xs)
        xs)
        xs)
        x=$((x / base));
        x=$((x / base));
        while [ -e "$pool/knxptr/$knx" ]; do
        while [ -e "$pool/knxptr/$knx" ]; do
        while [ -d "$inpath" ]; do
        while [ -d "$inpath" ]; do
        while IFS= read a; do
        while IFS= read a; do
        vn="${vn}-v${v}" vc="${vc} vol ${v} dither"
        vn="${vn}-v${v}" vc="${vc} vol ${v} dither"
        validfn $fndata || { 
        validfn $fndata || { 
        validfn $a && true || { 
        validfn $a && true || { 
        validfn $a && true || { 
        validfn $a && true || { 
        v="$1";
        v="$1";
        v="$1";
        v="$1";
        tsec=$(hms2sec ${to})
        tsec=$(hms2sec ${to})
        tput sgr0
        tput sgr0
        tput sgr0
        tput sgr0
        tput sgr0
        tput sgr0
        tput sgr0
        tput sgr0
        tput dim;
        tput dim;
        tput dim;
        tput dim;
        tput bold;
        tput bold;
        tput bold;
        tput bold;
        tput bold;
        tput bold;
        tmux list-sessions -F '#{session_name} #{session_activity}' | column -t | sort -k2n | while IFS= read -r a; do
        tmux list-sessions -F '#{session_name} #{session_activity}' | column -t | sort -k2n | while IFS= read -r a; do
        tai64nlocal <<< $1 | sed -e 's/-//g' -e 's/://' -e 's/[:]/ /g' -e 's/.\{4\}$//';
        tai64nlocal <<< $1 | sed -e 's/-//g' -e 's/://' -e 's/[:]/ /g' -e 's/.\{4\}$//';
        tai64nlocal <<< $1 | sed -e 's/-//g' -e 's/://' -e 's/[:]/ /g' -e 's/ ..\..*$//';
        tai64nlocal <<< $1 | sed -e 's/-//g' -e 's/://' -e 's/[:]/ /g' -e 's/ ..\..*$//';
        stop="/^${stop}/"
        stop="/^${stop}/"
        stderr "^^^ $*";
        stderr "^^^ $*";
        stderr "^^ $* ^^";
        stderr "^^ $* ^^";
        stderr ">>> $*";
        stderr ">>> $*";
        stderr ">>> $*";
        stderr ">>> $*";
        stderr "><> $*";
        stderr "><> $*";
        stat -f %i\ %l\ %z\ %m "$1"
        stat -f %i\ %l\ %z\ %m "$1"
        stat -f %i\ %l\ %z\ %m "$1"
        stat -f %i\ %l\ %z\ %m "$1"
        stat -c %i\ %h\ %s\ %Y "$1"
        stat -c %i\ %h\ %s\ %Y "$1"
        stat -c %i\ %h\ %s\ %Y "$1"
        stat -c %i\ %h\ %s\ %Y "$1"
        ssec=$(hms2sec ${ss})
        ssec=$(hms2sec ${ss})
        ss=$2
        ss=$2
        ss=$2
        ss=$2
        sortargs=$(tr '\n' ' ' <<< ${sortargs} | sed -e '
        sortargs=$(tr '\n' ' ' <<< ${sortargs} | sed -e '
        sortargs="$(tr ' ' '\n' <<< "$sortargs" | sed '/^$/d')";
        sortargs="$(tr ' ' '\n' <<< "$sortargs" | sed '/^$/d')";
        sleep 2;
        sleep 2;
        sleep "$kdb_locksleep";
        sleep "$kdb_locksleep";
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift;
        shift || true;
        shift || true;
        shift || true;
        shift || true;
        shift || true;
        shift || true;
        shift || true;
        shift || true;
        shift || true
        shift || true
        shift || true
        shift || true
        shift || true
        shift || true
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        shift
        set $a;
        set $a;
        set $a;
        set $a;
        set $a;
        set $a;
        set $a;
        set $a;
        set $(kdbtx);
        set $(kdbtx);
        set $(kdbtx);
        set $(kdbtx);
        sed -e "/^[${b32char}]*,/d" -e '/^$/d' <<< "$fs" || true
        sed -e "/^[${b32char}]*,/d" -e '/^$/d' <<< "$fs" || true
        sed -e "/^${p}/!d" -e "s/^${p}//" "$f" | awk 'NR==1';
        sed -e "/^${p}/!d" -e "s/^${p}//" "$f" | awk 'NR==1';
        sed 's/^[    ]*//' <<< "$use" | term_pleft;
        sed 's/^[    ]*//' <<< "$use" | term_pleft;
        s/^[ ]*text: "//
        s/^[ ]*text: "//
        s/^[ ]*//
        s/^[ ]*//
        s/\\t/	/g
        s/\\t/	/g
        s/\\r//g
        s/\\r//g
        s/\\$//
        s/\\$//
        s/\\"/"/g
        s/\\"/"/g
        s/\\ / /g
        s/\\ / /g
        s/%%.*//
        s/%%.*//
        s/ 00be 00000000 # value key #$//
        s/ 00be 00000000 # value key #$//
        rotatefile_secs="$((18 * 60 * 60 * 24 ))" rotatefile_keep="7"';
        rotatefile_secs="$((18 * 60 * 60 * 24 ))" rotatefile_keep="7"';
        rm -i -f "${cache_5_km}%" "${cache_6_search}%" "${cache_7_graph}%" "${cache_8_value}%" "${cache_9_topic}%"
        rm -i -f "${cache_5_km}%" "${cache_6_search}%" "${cache_7_graph}%" "${cache_8_value}%" "${cache_9_topic}%"
        rm -i -f "$pool/xssptr/$xs$ss" "$pool/knxptr/0";
        rm -i -f "$pool/xssptr/$xs$ss" "$pool/knxptr/0";
        return 2
        return 2
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 1
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return 0
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        return $?
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        res="$(sed -e 's:.*/.:&/:' -e 's://$:/z:' <<< "$res")";
        remove backups older than {rotatefile_secs}
        remove backups older than {rotatefile_secs}
        read -n1 -t3 a || true;
        read -n1 -t3 a || true;
        read -n1 -p "files found, continue (N/y) " f;
        read -n1 -p "files found, continue (N/y) " f;
        rb=rubberband-r3 c=r3
        rb=rubberband-r3 c=r3
        rb=rubberband-r3
        rb=rubberband-r3
        printf '\n\n\n' ""
        printf '\n\n\n' ""
        printf '%s\n' "$knx" >> "$pool/knxptr/0";
        printf '%s\n' "$knx" >> "$pool/knxptr/0";
        printf '%s\n%s\n' "$k4" "$xs$ss" > "$pool/knxptr/0";
        printf '%s\n%s\n' "$k4" "$xs$ss" > "$pool/knxptr/0";
        printf '%02xx%02x ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf '%02xx%02x ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf '%02oo%02o ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf '%02oo%02o ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf '%02d/%02d ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf '%02d/%02d ' "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" "$i";
        printf "%s\n" "$f";
        printf "%s\n" "$f";
        printf "%s %s%s%02s,%s\n" "$3" "$numlist" "0" "$(base 32 $2)" "$1";
        printf "%s %s%s%02s,%s\n" "$3" "$numlist" "0" "$(base 32 $2)" "$1";
        printf "%s %s%02s,%s\n" "$1" "$(base 32 $(dc -e "$2 $m * p" | awk '{printf "%.0f\n",$1}'))" "$(base 32 $2)" "$b";
        printf "%s %s%02s,%s\n" "$1" "$(base 32 $(dc -e "$2 $m * p" | awk '{printf "%.0f\n",$1}'))" "$(base 32 $2)" "$b";
        printf "%*s\n" "$rcols" '' | tr ' ' "$char";
        printf "%*s\n" "$rcols" '' | tr ' ' "$char";
        printf "%*s\n" "$cols" '' | tr ' ' "$char";
        printf "%*s\n" "$cols" '' | tr ' ' "$char";
        printf "%*s\n" "$cols" '' | tr ' ' "$char";
        printf "%*s\n" "$cols" '' | tr ' ' "$char";
        printf "%*s" "$lcols" '' | tr ' ' "$char";
        printf "%*s" "$lcols" '' | tr ' ' "$char";
        printf "%*s" "$cols" '' | tr ' ' "$char";
        printf "%*s" "$cols" '' | tr ' ' "$char";
        par $(( cols )) ${hang}h
        par $(( cols )) ${hang}h
        p=$((x % base));
        p=$((x % base));
        out="${digs:p:1}$out";
        out="${digs:p:1}$out";
        out="$1 $out";
        out="$1 $out";
        origfiles="$(find $(find "$path" -name \@) -maxdepth 1 -type f -name \*${id}\* 2> /dev/null | head -n1)";
        origfiles="$(find $(find "$path" -name \@) -maxdepth 1 -type f -name \*${id}\* 2> /dev/null | head -n1)";
        n="$(find "$pool/knxptr" -type f | awk 'END{print NR}')";
        n="$(find "$pool/knxptr" -type f | awk 'END{print NR}')";
        mv -i -f "${inpath}/tmp/${out}${vn}.tmp.mp3" "${inpath}/tmp/${out}${vn}.mp3"
        mv -i -f "${inpath}/tmp/${out}${vn}.tmp.mp3" "${inpath}/tmp/${out}${vn}.mp3"
        mv -i -f "${inpath}/tmp/${out}${vn}.tmp.mp3" "${inpath}/tmp/${out}${vn}.mp3"
        mv -i -f "${inpath}/tmp/${out}${vn}.tmp.mp3" "${inpath}/tmp/${out}${vn}.mp3"
        mv -i -f "${inpath}/tmp/${infile}${secn}.meas~" "${inpath}/tmp/${infile}${secn}.meas"
        mv -i -f "${inpath}/tmp/${infile}${secn}.meas~" "${inpath}/tmp/${infile}${secn}.meas"
        mv -i -f "${inpath}/tmp/${infile}${secn}.flac~" "${inpath}/tmp/${infile}${secn}.flac";
        mv -i -f "${inpath}/tmp/${infile}${secn}.flac~" "${inpath}/tmp/${infile}${secn}.flac";
        mv -i -f "${inpath}/tmp/${infile}${secn}${lnn}.meas~" "${inpath}/tmp/${infile}${secn}${lnn}.meas";
        mv -i -f "${inpath}/tmp/${infile}${secn}${lnn}.meas~" "${inpath}/tmp/${infile}${secn}${lnn}.meas";
        mv -i -f "${inpath}/tmp/${infile}${secn}${lnn}.flac~" "${inpath}/tmp/${infile}${secn}${lnn}.flac";
        mv -i -f "${inpath}/tmp/${infile}${secn}${lnn}.flac~" "${inpath}/tmp/${infile}${secn}${lnn}.flac";
        mv -i -f "${cache_9_topic}%" "${cache_9_topic}"
        mv -i -f "${cache_9_topic}%" "${cache_9_topic}"
        mv -i -f "${cache_8_value}%" "${cache_8_value}";
        mv -i -f "${cache_8_value}%" "${cache_8_value}";
        mv -i -f "${cache_7_graph}%" "${cache_7_graph}";
        mv -i -f "${cache_7_graph}%" "${cache_7_graph}";
        mv -i -f "${cache_6_search}%" "${cache_6_search}";
        mv -i -f "${cache_6_search}%" "${cache_6_search}";
        mv -i -f "${cache_5_km}%" "${cache_5_km}";
        mv -i -f "${cache_5_km}%" "${cache_5_km}";
        mkv)
        mkv)
        mkv)
        mkv)
        m)
        m)
        m)
        m)
        logger -s "^^^ $*";
        logger -s "^^^ $*";
        logger -s ">>> $*";
        logger -s ">>> $*";
        logger -s ">>> $*";
        logger -s ">>> $*";
        local yn mn wn dn hn nn sn;
        local yn mn wn dn hn nn sn;
        local xs="$1" y=0 m=0 w=0 d=0 h=0 n=0 s=0;
        local xs="$1" y=0 m=0 w=0 d=0 h=0 n=0 s=0;
        local title="${_fname%%_^*}";
        local title="${_fname%%_^*}";
        local str= char='-';
        local str= char='-';
        local src="$1" dst="$2";
        local src="$1" dst="$2";
        local sortargs='';
        local sortargs='';
        local rstrn="$(( 2 + strn - lstrn ))";
        local rstrn="$(( 2 + strn - lstrn ))";
        local rcols="$(( cols - lcols - lstrn - rstrn ))";
        local rcols="$(( cols - lcols - lstrn - rstrn ))";
        local path;
        local path;
        local out="${infile}${secn}${tn}${pn}${fhzn}${cn}${Fn}${cfn}${lnn}";
        local out="${infile}${secn}${tn}${pn}${fhzn}${cn}${Fn}${cfn}${lnn}";
        local off="${off:=0}" tp="${tp:=-0.5}" lra="${lra:=7}" i="${i:=-23}";
        local off="${off:=0}" tp="${tp:=-0.5}" lra="${lra:=7}" i="${i:=-23}";
        local o=$xs;
        local o=$xs;
        local lstrn="$(( 2 + strn / 2 ))";
        local lstrn="$(( 2 + strn / 2 ))";
        local lcols="$(( cols / 2 - lstrn ))";
        local lcols="$(( cols / 2 - lstrn ))";
        local k4h="$(_kdb_file_headg . "$k4")";
        local k4h="$(_kdb_file_headg . "$k4")";
        local inpath infile="${f##*/}";
        local inpath infile="${f##*/}";
        local infilep="$(cd "${inpath}"; pwd -P)/${infile}";
        local infilep="$(cd "${inpath}"; pwd -P)/${infile}";
        local id="$(sed "s/\.${ext}.*//" <<< "${_fname##*_^}")";
        local id="$(sed "s/\.${ext}.*//" <<< "${_fname##*_^}")";
        local ext='' id='' orig='';
        local ext='' id='' orig='';
        local ext="$(sed -e 's/_^[^.]*.//' -e 's/\..*//' -e 's/-.*//' <<< "_^${_fname##*_^}")";
        local ext="$(sed -e 's/_^[^.]*.//' -e 's/\..*//' -e 's/-.*//' <<< "_^${_fname##*_^}")";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(tput cols)";
        local cols="$(( $(tput cols) - strn - 4 ))";
        local cols="$(( $(tput cols) - strn - 4 ))";
        local cols="$(( $(tput cols) - strn - 4 ))";
        local cols="$(( $(tput cols) - strn - 4 ))";
        local a;
        local a;
        local _fname="${_fpath##*/}";
        local _fname="${_fpath##*/}";
        local $(grep measured "${inpath}/tmp/${infile}${secn}.meas");
        local $(grep measured "${inpath}/tmp/${infile}${secn}.meas");
        ln -f "$pool/knxptr/0" "$pool/xssptr/$xs$ss";
        ln -f "$pool/knxptr/0" "$pool/xssptr/$xs$ss";
        ln -f "$pool/knxptr/0" "$pool/knxptr/$knx" || { 
        ln -f "$pool/knxptr/0" "$pool/knxptr/$knx" || { 
        ln -f "$pool/knxhln/0" "$pool/knxhln/$knx" || { 
        ln -f "$pool/knxhln/0" "$pool/knxhln/$knx" || { 
        ln -f "$knxf" "$pool/knxptr/0" || { 
        ln -f "$knxf" "$pool/knxptr/0" || { 
        kz)
        kz)
        kz)
        kz)
        kx)
        kx)
        kx)
        kx)
        kv)
        kv)
        kv)
        kv)
        kqm)
        kqm)
        knx="$(base 32 "$n" | xargs printf "%02s")";
        knx="$(base 32 "$n" | xargs printf "%02s")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knx="$(awk 'NR==3' "${pool}/xssptr/${xss}")";
        knnbxs $i $xs;
        knnbxs $i $xs;
        knnbxs $i $xs;
        knnbxs $i $xs;
        knbxs $i $xs;
        knbxs $i $xs;
        knbxs $i $xs;
        knbxs $i $xs;
        ki)
        ki)
        ki)
        ki)
        ke)
        ke)
        ke)
        ke)
        kdbxss
        kdbxss
        kdb_xs2tai "$1" | tai64nlocal | sed -e 's/\.[0]\{9\}$//' -e "s/[: -]//g" -e 's/..$/\.&/' && return $?
        kdb_xs2tai "$1" | tai64nlocal | sed -e 's/\.[0]\{9\}$//' -e "s/[: -]//g" -e 's/..$/\.&/' && return $?
        kdb_valid_dir "$a" || { 
        kdb_valid_dir "$a" || { 
        kdb_pool_vptr_xssptr $@;
        kdb_pool_vptr_xssptr $@;
        kdb_pool_vptr_xssptr "$type" "$xss";
        kdb_pool_vptr_xssptr "$type" "$xss";
        kdb_pool_vptr_xssptr "$n" "$xs$ss";
        kdb_pool_vptr_xssptr "$n" "$xs$ss";
        kdb_pool_vptr_knxptr $@;
        kdb_pool_vptr_knxptr $@;
        kdb_pool_add "$k4";
        kdb_pool_add "$k4";
        kdb_pool_add "$k4";
        kdb_pool_add "$k4";
        k4s="$1";
        k4s="$1";
        k4s="$(printf "%s\n%s\n" "$k4s" "$1")";
        k4s="$(printf "%s\n%s\n" "$k4s" "$1")";
        k4mi)
        k4mi)
        k4mi)
        k4mi)
        jq --ascii-output --raw-output '(.fulltitle, .duration_string)' "$1" | tr -d '"';
        jq --ascii-output --raw-output '(.fulltitle, .duration_string)' "$1" | tr -d '"';
        inpath="${inpath%/*}";
        inpath="${inpath%/*}";
        inpath="${_k4%/*}";
        inpath="${_k4%/*}";
        inpath="${_k4%/*}";
        inpath="${_k4%/*}";
        inpath="${_k4%/*}";
        inpath="${_k4%/*}";
        hlnf="$(find "$xsshln" -samefile "$in" -regex ".*/xsshln/[[:xdigit:]]\{16\}$")";
        hlnf="$(find "$xsshln" -samefile "$in" -regex ".*/xsshln/[[:xdigit:]]\{16\}$")";
        hln="${pool}/xsshln/${xss}";
        hln="${pool}/xsshln/${xss}";
        gst ) | awk -v a="${a%/*}/./" '{printf "%-2s",$1; $1=""; $2=a$2; printf "%s\n",$0}';
        gst ) | awk -v a="${a%/*}/./" '{printf "%-2s",$1; $1=""; $2=a$2; printf "%s\n",$0}';
        grep -E '(measured|out)' "${inpath}/tmp/${infile}${secn}${lnn}.meas" | while IFS= read a; do
        grep -E '(measured|out)' "${inpath}/tmp/${infile}${secn}${lnn}.meas" | while IFS= read a; do
        grep -E "^${kind}\ " <<< "$k4h" >> "$k4x";
        grep -E "^${kind}\ " <<< "$k4h" >> "$k4x";
        grep --no-filename "^[_[:alpha:]][_[:alnum:]]* () .*$kind" "$vkdb/"*.bash | sed -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' | sort | column -s'`' -t;
        grep --no-filename "^[_[:alpha:]][_[:alnum:]]* () .*$kind" "$vkdb/"*.bash | sed -e 's/ was:.*//' -e 's/\ ()\ {/ () `/' | sort | column -s'`' -t;
        grep 'ss=' <<< "$sortargs" > /dev/null || sortargs="ss=0 $sortargs";
        grep 'ss=' <<< "$sortargs" > /dev/null || sortargs="ss=0 $sortargs";
        grep '^%km ' <<< "$k4h" | awk -v k4="$k4" 'END{printf "%s %s ",$6,k4}' | multitee 0,5,6,7,8,9;
        grep '^%km ' <<< "$k4h" | awk -v k4="$k4" 'END{printf "%s %s ",$6,k4}' | multitee 0,5,6,7,8,9;
        function _hashfn () 
        function _hashfn () 
        function _hashex () 
        function _hashex () 
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$1";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        fs="$(printf "%s\n%s\n" "$fs" "$1")";
        for parm in ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v=;
        for parm in ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v=;
        for parm in % ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v=;
        for parm in % ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v=;
        for b in ptr hln;
        for b in ptr hln;
        for b in ptr hln;
        for b in ptr hln;
        fold -s -w $cols
        fold -s -w $cols
        find "$p" -type f $not_find | awk 'END{printf "%d) ",FNR}';
        find "$p" -type f $not_find | awk 'END{printf "%d) ",FNR}';
        find "$lock" -mmin +4 -exec rm \{\} \; 2> /dev/null && $kdblog "0x $lock : $invoke" || true;
        find "$lock" -mmin +4 -exec rm \{\} \; 2> /dev/null && $kdblog "0x $lock : $invoke" || true;
        find "$i" -exec stat -f "%N %Y" \{\} \; 2> /dev/null | sort -u | awk '{printf "%s\t%s\n", $2, $1}';
        find "$i" -exec stat -f "%N %Y" \{\} \; 2> /dev/null | sort -u | awk '{printf "%s\t%s\n", $2, $1}';
        find "$1" -type f | wc -l;
        find "$1" -type f | wc -l;
        fhzn="-chz"
        fhzn="-chz"
        fhzn="-bhz"
        fhzn="-bhz"
        fhzc="-f 1.01851851851851";
        fhzc="-f 1.01851851851851";
        fhzc="-f 0.98181818181818";
        fhzc="-f 0.98181818181818";
        f="$2" b="$3"
        f="$2" b="$3"
        f="$1" b="$2"
        f="$1" b="$2"
        f2rb2mp3 help;
        f2rb2mp3 help;
        f2rb2mp3 help;
        f2rb2mp3 help;
        expr "${stop}" : "${start}" > /dev/null && chkwrn "$FUNCNAME : unintended consequences : $start $stop";
        expr "${stop}" : "${start}" > /dev/null && chkwrn "$FUNCNAME : unintended consequences : $start $stop";
        expr "$f" : ".*/" > /dev/null && inpath="${f%/*}" || inpath=".";
        expr "$f" : ".*/" > /dev/null && inpath="${f%/*}" || inpath=".";
        expr "$c" : '^[0123456]$' > /dev/null || { 
        expr "$c" : '^[0123456]$' > /dev/null || { 
        expr "$_fpath" : ".*/" > /dev/null && path="${_fpath%/*}" || path=".";
        expr "$_fpath" : ".*/" > /dev/null && path="${_fpath%/*}" || path=".";
        expr "$(( 0x$xs - 0x$(ckstat "$f" | awk '{print $5}') ))" '>' "$rotatefile_secs" > /dev/null && rm -i -f "$f" || true;
        expr "$(( 0x$xs - 0x$(ckstat "$f" | awk '{print $5}') ))" '>' "$rotatefile_secs" > /dev/null && rm -i -f "$f" || true;
        export -f $(grep '^[_[:alpha:]][_[:alnum:]]*[ ]*() ' "$f" | sed 's/() .*//'; true) > /dev/null && export $(grep '^[_[:alpha:]][_[:alnum:]]*=' "$f" | sed 's/=.*//'; true) > /dev/null
        export -f $(grep '^[_[:alpha:]][_[:alnum:]]*[ ]*() ' "$f" | sed 's/() .*//'; true) > /dev/null && export $(grep '^[_[:alpha:]][_[:alnum:]]*=' "$f" | sed 's/=.*//'; true) > /dev/null
        exit 1
        exit 1
        exit 1
        exit 1
        exit 1
        exit 1
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo;
        echo | tai64n | sed -e 's/^@4[0]*//' -e 's/.\{9\}$//'
        echo | tai64n | sed -e 's/^@4[0]*//' -e 's/.\{9\}$//'
        echo files
        echo files
        echo 1;
        echo 1;
        echo -n ' ';
        echo -n ' ';
        echo -n ' ';
        echo -n ' ';
        echo -n ' ';
        echo -n ' ';
        echo -n "$o (";
        echo -n "$o (";
        echo -n "$char$char $str ";
        echo -n "$char$char $str ";
        echo -n " $str ";
        echo -n " $str ";
        echo 'List sessions, attach last, or create session 0,
        echo 'List sessions, attach last, or create session 0,
        echo $2;
        echo $2;
        echo $2 $3;
        echo $2 $3;
        echo $(base 32 $(printf "%d " "0x${1}"); base 32 $(printf "%d" "0x${2}"))
        echo $(base 32 $(printf "%d " "0x${1}"); base 32 $(printf "%d" "0x${2}"))
        echo ">>> $0 : Not bash shell (fc4768) <<<" 1>&2;
        echo ">>> $0 : Not bash shell (fc4768) <<<" 1>&2;
        echo ">>> $0 : Not bash shell (62af847c) <<<" 1>&2;
        echo ">>> $0 : Not bash shell (62af847c) <<<" 1>&2;
        echo ">>> $0 : Not bash shell (62af847c) <<<" 1>&2;
        echo ">>> $0 : Not bash shell (62af847c) <<<" 1>&2;
        echo ")"
        echo ")"
        echo "%kz $xs %% default event end, now"
        echo "%kz $xs %% default event end, now"
        echo "%kx $(printf "%08x" "$(( 34 * 31556926 + 0x$xs ))") %% default expire 34 years";
        echo "%kx $(printf "%08x" "$(( 34 * 31556926 + 0x$xs ))") %% default expire 34 years";
        echo "%kv $(printf '%08x' "$(( 0x$xs + 0x1edb85f4))") %% default value xs + 1edb85f4";
        echo "%kv $(printf '%08x' "$(( 0x$xs + 0x1edb85f4))") %% default value xs + 1edb85f4";
        echo "%ki $(printf "%08x" "$(( 86400 * 57 ))") %% default interval 57 day review";
        echo "%ki $(printf "%08x" "$(( 86400 * 57 ))") %% default interval 57 day review";
        echo "%ke $(printf '%08x' "$(( $((0x$xs)) - 86400 * 18 ))") %% default begin 18 days prior, 0017bb00";
        echo "%ke $(printf '%08x' "$(( $((0x$xs)) - 86400 * 18 ))") %% default begin 18 days prior, 0017bb00";
        echo "$stdin" | grep -E "(^$1$|^$1 | $1 | $1$)" > /dev/null && echo "$stdin" || echo "$stdin $1"
        echo "$stdin" | grep -E "(^$1$|^$1 | $1 | $1$)" > /dev/null && echo "$stdin" || echo "$stdin $1"
        echo "$sortargs f2rb2mp3 $orig $title";
        echo "$sortargs f2rb2mp3 $orig $title";
        echo "$f";
        echo "$f";
        echo "$check";
        echo "$check";
        echo "$check";
        echo "$check";
        echo "$a" | strings -e s;
        echo "$a" | strings -e s;
        echo "$FUNCNAME : validfn unavailable (630c4002)" 1>&2;
        echo "$FUNCNAME : validfn unavailable (630c4002)" 1>&2;
        echo "$FUNCNAME : chkerr unavailable (630bacd0)" 1>&2;
        echo "$FUNCNAME : chkerr unavailable (630bacd0)" 1>&2;
        echo "$0 : validfn not defined" 1>&2;
        echo "$0 : validfn not defined" 1>&2;
        echo "$*" | tai64n >> "${log}";
        echo "$*" | tai64n >> "${log}";
        echo "$*" > "$arg";
        echo "$*" > "$arg";
        echo "$(find "$part" -type f | awk 'END{print NR}')";
        echo "$(find "$part" -type f | awk 'END{print NR}')";
        echo "$$" > "$lock"
        echo "$$" > "$lock"
        echo "#";
        echo "#";
        echo "# ss=$ss to=$to t=$t p=$p f=$f c=$c F=$F CF=$CF off=$off tp=$tp lra=$lra i=$i cmp=$cmp v=$v f2rb2mp3 {file-in} {prepend-out}";
        echo "# ss=$ss to=$to t=$t p=$p f=$f c=$c F=$F CF=$CF off=$off tp=$tp lra=$lra i=$i cmp=$cmp v=$v f2rb2mp3 {file-in} {prepend-out}";
        echo "# ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v= f2rb2mp3 {file-in} {prepend-out}";
        echo "# ss= to= t= p= f= c= F= CF= off= tp= lra= i= cmp= v= f2rb2mp3 {file-in} {prepend-out}";
        echo "# cmp= $(declare -f $FUNCNAME | sed -e '/compand/!d' -e '/sed/d' -e 's/=.*//' -e 's/local//' | tr -s ' \n' '|')";
        echo "# cmp= $(declare -f $FUNCNAME | sed -e '/compand/!d' -e '/sed/d' -e 's/=.*//' -e 's/local//' | tr -s ' \n' '|')";
        echo "# Formant y/''  CenterFocus y/'' vol 0db/'' frequency (bhz|chz|N)/'' reverse y/''";
        echo "# Formant y/''  CenterFocus y/'' vol 0db/'' frequency (bhz|chz|N)/'' reverse y/''";
        echo "# ${_fname}";
        echo "# ${_fname}";
        echo " $str $char$char";
        echo " $str $char$char";
        du -sh "$p/"
        du -sh "$p/"
        du -sh "$1";
        du -sh "$1";
        dst="$2";
        dst="$2";
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done;
        done | while IFS= read a; do
        done | while IFS= read a; do
        done | awk '{printf "%s %d %s\n",$0,NR,$0}' | sed -e '/^ /d' -e "s/^[${b32char}]*,//" -e '/^$/d' | while IFS= read a; do
        done | awk '{printf "%s %d %s\n",$0,NR,$0}' | sed -e '/^ /d' -e "s/^[${b32char}]*,//" -e '/^$/d' | while IFS= read a; do
        done | awk '{printf "%8s : %s %s %s %s %s %s\n",$1,$2,$3,$4,$5,$6,$7}'
        done | awk '{printf "%8s : %s %s %s %s %s %s\n",$1,$2,$3,$4,$5,$6,$7}'
        done
        done
        done
        done
        done
        done
        do
        do
        do
        do
        do
        do
        do
        do
        dirs="$1";
        dirs="$1";
        dirs="$(printf "%s\n%s\n" "$dirs" "$1")";
        dirs="$(printf "%s\n%s\n" "$dirs" "$1")";
        default 18 days = 60 seconds per minute * 60 per hour * 24
        default 18 days = 60 seconds per minute * 60 per hour * 24
        declare -f $FUNCNAME | sed -e '/compand/!d' -e '/sed/d' | while IFS= read a; do
        declare -f $FUNCNAME | sed -e '/compand/!d' -e '/sed/d' | while IFS= read a; do
        date -j -r $((0x$2)) "+%a %e %b %Z"
        date -j -r $((0x$2)) "+%a %e %b %Z"
        date -j -r $((0x$2)) "+%a %e %b %Z"
        date -j -r $((0x$2)) "+%a %e %b %Z"
        ct <<< "$unsupported_types";
        ct <<< "$unsupported_types";
        ct <<< "$types";
        ct <<< "$types";
        ckstat "$a";
        ckstat "$a";
        chkwrn 'inode\links . 0x-size 0x-mdate input';
        chkwrn 'inode\links . 0x-size 0x-mdate input';
        chkwrn 'inode\links . 0x-size 0x-mdate input';
        chkwrn 'inode\links . 0x-size 0x-mdate input';
        chkwrn 'Return sortable stat data for args (OR stdin file list):';
        chkwrn 'Return sortable stat data for args (OR stdin file list):';
        chkwrn 'Return sortable stat data for args (OR stdin file list):';
        chkwrn 'Return sortable stat data for args (OR stdin file list):';
        chkwrn "rsync hardlink to dst/ from src/";
        chkwrn "rsync hardlink to dst/ from src/";
        chkwrn "find not BSD (61083f5c)"
        chkwrn "find not BSD (61083f5c)"
        chkwrn "each filename into a rendering command.";
        chkwrn "each filename into a rendering command.";
        chkwrn "Usage, for args (or per line stdin) decompose";
        chkwrn "Usage, for args (or per line stdin) decompose";
        chkwrn "${b} siffx: no file '$f'" && return 0 || return $?
        chkwrn "${b} siffx: no file '$f'" && return 0 || return $?
        chkwrn "$invoke irregular pool '${kdb}/0/p/${kdb_pool}' (62ef2510)";
        chkwrn "$invoke irregular pool '${kdb}/0/p/${kdb_pool}' (62ef2510)";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$invoke irregular pool '${kdb}/0/${kdb_pool}'";
        chkwrn "$FUNCNAME {src_dir} {dst_dir}";
        chkwrn "$FUNCNAME {src_dir} {dst_dir}";
        chkwrn "$FUNCNAME irregular nth unexpected nth (60fb6ccb)";
        chkwrn "$FUNCNAME irregular nth unexpected nth (60fb6ccb)";
        chkwrn "$FUNCNAME invalid pool '${kdb}/0/${kdb_pool}'"
        chkwrn "$FUNCNAME invalid pool '${kdb}/0/${kdb_pool}'"
        chkwrn "$FUNCNAME : exists $lock";
        chkwrn "$FUNCNAME : exists $lock";
        chkwrn "$FUNCNAME : executable not in PATH, '$exin' (643d9a87)";
        chkwrn "$FUNCNAME : executable not in PATH, '$exin' (643d9a87)";
        chkwrn "$FUNCNAME : cache locked "${cache_9_topic}%" (62eda9ad)";
        chkwrn "$FUNCNAME : cache locked "${cache_9_topic}%" (62eda9ad)";
        chkwrn "$FUNCNAME : cache locked "${cache_8_value}%" (62eda9ac)";
        chkwrn "$FUNCNAME : cache locked "${cache_8_value}%" (62eda9ac)";
        chkwrn "$FUNCNAME : cache locked "${cache_7_graph}%" (62eda9ab)";
        chkwrn "$FUNCNAME : cache locked "${cache_7_graph}%" (62eda9ab)";
        chkwrn "$FUNCNAME : cache locked "${cache_6_search}%" (62eda9aa)";
        chkwrn "$FUNCNAME : cache locked "${cache_6_search}%" (62eda9aa)";
        chkwrn "$FUNCNAME : cache locked "${cache_5_km}%" (62eda9a9)";
        chkwrn "$FUNCNAME : cache locked "${cache_5_km}%" (62eda9a9)";
        chktrue 'base32 = "0123456789abcdefghjkmnpqrstuvxyz"';
        chktrue 'base32 = "0123456789abcdefghjkmnpqrstuvxyz"';
        chktrue '(sans "ilow")';
        chktrue '(sans "ilow")';
        chktrue "base and input are intergers, base <= 32   ";
        chktrue "base and input are intergers, base <= 32   ";
        chktrue "$f";
        chktrue "$f";
        chktrue "$FUNCNAME : convert {decimal} arg2 to {base} arg1";
        chktrue "$FUNCNAME : convert {decimal} arg2 to {base} arg1";
        chkerr "usage: $FUNCNAME {src_dir} {dst_dir}";
        chkerr "usage: $FUNCNAME {src_dir} {dst_dir}";
        chkerr "tai64n : not in path ; apt-get install daemontools";
        chkerr "tai64n : not in path ; apt-get install daemontools";
        chkerr "prependf: base filepath (arg1) not set $@";
        chkerr "prependf: base filepath (arg1) not set $@";
        chkerr "prependf: base filepath (arg1) not a file $@";
        chkerr "prependf: base filepath (arg1) not a file $@";
        chkerr "no input flle $1";
        chkerr "no input flle $1";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "no id?";
        chkerr "irregular env OS='$OS' (6325b4d6)";
        chkerr "irregular env OS='$OS' (6325b4d6)";
        chkerr "irregular env LC_ALL='$LC_ALL' (62aed4e9)";
        chkerr "irregular env LC_ALL='$LC_ALL' (62aed4e9)";
        chkerr "irregular env LANG='$LANG' (62aed4d1)";
        chkerr "irregular env LANG='$LANG' (62aed4d1)";
        chkerr "irregular \${kdb} : ${kdb} (5d1a0a1d)";
        chkerr "irregular \${kdb} : ${kdb} (5d1a0a1d)";
        chkerr "find : not in path (61083eb5)";
        chkerr "find : not in path (61083eb5)";
        chkerr "ci (rcs) : not in path (6108e185)";
        chkerr "ci (rcs) : not in path (6108e185)";
        chkerr "Lock exists: $LOCK";
        chkerr "Lock exists: $LOCK";
        chkerr "$invoke";
        chkerr "$invoke";
        chkerr "$invoke";
        chkerr "$invoke";
        chkerr "$invoke {kdb_pool} not set and no arg provided (62f1552e)";
        chkerr "$invoke {kdb_pool} not set and no arg provided (62f1552e)";
        chkerr "$invoke not a regular, writeable file '$f' (6113fb01)";
        chkerr "$invoke not a regular, writeable file '$f' (6113fb01)";
        chkerr "$invoke missing pool dir '${kdb}/0/p/${kdb_pool}' (62f154bc)";
        chkerr "$invoke missing pool dir '${kdb}/0/p/${kdb_pool}' (62f154bc)";
        chkerr "$invoke irregular epoch span maskx = '$eph$span$maskx' (d5b5c68)";
        chkerr "$invoke irregular epoch span maskx = '$eph$span$maskx' (d5b5c68)";
        chkerr "$invoke irregular '{xa} {xs} {ss} {maskx}' = '$xa $xs $ss $maskx' (d5b5c58)";
        chkerr "$invoke irregular '{xa} {xs} {ss} {maskx}' = '$xa $xs $ss $maskx' (d5b5c58)";
        chkerr "$invoke ; kdb_rcs";
        chkerr "$invoke ; kdb_rcs";
        chkerr "$invoke ; kdb_pool_add";
        chkerr "$invoke ; kdb_pool_add";
        chkerr "$invoke ; kdb_pool_add $k4 (62ee088e)";
        chkerr "$invoke ; kdb_pool_add $k4 (62ee088e)";
        chkerr "$invoke ; kdb_k4_head_seq";
        chkerr "$invoke ; kdb_k4_head_seq";
        chkerr "$invoke ; kdb_cache_upd";
        chkerr "$invoke ; kdb_cache_upd";
        chkerr "$invoke ; kdb_cache_upd $k4 (62ee088f)";
        chkerr "$invoke ; kdb_cache_upd $k4 (62ee088f)";
        chkerr "$invoke ; k";
        chkerr "$invoke ; k";
        chkerr "$invoke : unsupported type '$type'";
        chkerr "$invoke : unsupported type '$type'";
        chkerr "$invoke : unknown type '$type'";
        chkerr "$invoke : unknown type '$type'";
        chkerr "$invoke : parse fail : dir '$d' file '$f' (61241430)";
        chkerr "$invoke : parse fail : dir '$d' file '$f' (61241430)";
        chkerr "$invoke : not full path (611bf112)";
        chkerr "$invoke : not full path (611bf112)";
        chkerr "$invoke : not a regular file (bda5b1f)";
        chkerr "$invoke : not a regular file (bda5b1f)";
        chkerr "$invoke : no args, see k4_help";
        chkerr "$invoke : no args, see k4_help";
        chkerr "$invoke : k4 arg1 not provided (6119903b)";
        chkerr "$invoke : k4 arg1 not provided (6119903b)";
        chkerr "$invoke : irregular path '$k4' : "'^${kdb}/${base32rep}*/^/${k4##*/}'" (6108ce31)";
        chkerr "$invoke : irregular path '$k4' : "'^${kdb}/${base32rep}*/^/${k4##*/}'" (6108ce31)";
        chkerr "$invoke : failed to set pool vptr type (611d9e27)";
        chkerr "$invoke : failed to set pool vptr type (611d9e27)";
        chkerr "$invoke : extra pool elements found '${kdb}/0/${kdb_pool}' (6132cebd)";
        chkerr "$invoke : extra pool elements found '${kdb}/0/${kdb_pool}' (6132cebd)";
        chkerr "$invoke : cannot use parm '$p' (6124184c)"
        chkerr "$invoke : cannot use parm '$p' (6124184c)"
        chkerr "$invoke : cannot use '$k4' (6136a617)";
        chkerr "$invoke : cannot use '$k4' (6136a617)";
        chkerr "$invoke : cannot use '$1' (61243650)";
        chkerr "$invoke : cannot use '$1' (61243650)";
        chkerr "$invoke : cannot retrive '$k' (bfd7c86)";
        chkerr "$invoke : cannot retrive '$k' (bfd7c86)";
        chkerr "$invoke : Invalid k4 %ks line count (62ef284c)";
        chkerr "$invoke : Invalid k4 %ks line count (62ef284c)";
        chkerr "$invoke : Invalid k4 %km line count (62ef284d)";
        chkerr "$invoke : Invalid k4 %km line count (62ef284d)";
        chkerr "$invoke : Invalid k4 %ki line count (6326110f)";
        chkerr "$invoke : Invalid k4 %ki line count (6326110f)";
        chkerr "$invoke : '$f' not text (61257b7c)";
        chkerr "$invoke : '$f' not text (61257b7c)";
        chkerr "$b siffx: export signal $? in '$f'";
        chkerr "$b siffx: export signal $? in '$f'";
        chkerr "$FUNCNAME parm invalid : t=$t";
        chkerr "$FUNCNAME parm invalid : t=$t";
        chkerr "$FUNCNAME not writeable '$d' (d5c073b)";
        chkerr "$FUNCNAME not writeable '$d' (d5c073b)";
        chkerr "$FUNCNAME not executeable '$d' (d5c075f)";
        chkerr "$FUNCNAME not executeable '$d' (d5c075f)";
        chkerr "$FUNCNAME not a dir '$d' (d5c0702)";
        chkerr "$FUNCNAME not a dir '$d' (d5c0702)";
        chkerr "$FUNCNAME fail : kdb_pool=${kdb_pool} (631d223b)";
        chkerr "$FUNCNAME fail : kdb_pool=${kdb_pool} (631d223b)";
        chkerr "$FUNCNAME fail : ${kdb}/0/${kdb_pool}/";
        chkerr "$FUNCNAME fail : ${kdb}/0/${kdb_pool}/";
        chkerr "$FUNCNAME fail : ${kdb}/0/${kdb_pool}/ (62ef010)";
        chkerr "$FUNCNAME fail : ${kdb}/0/${kdb_pool}/ (62ef010)";
        chkerr "$FUNCNAME cannot init pool : (6113f230)";
        chkerr "$FUNCNAME cannot init pool : (6113f230)";
        chkerr "$FUNCNAME cannot create vptr : ${vptrf} (611ffc62)";
        chkerr "$FUNCNAME cannot create vptr : ${vptrf} (611ffc62)";
        chkerr "$FUNCNAME cannot create tmp : ${pool}/${kdb_tmp} (6111b0eb)";
        chkerr "$FUNCNAME cannot create tmp : ${pool}/${kdb_tmp} (6111b0eb)";
        chkerr "$FUNCNAME cannot create directory: $dst";
        chkerr "$FUNCNAME cannot create directory: $dst";
        chkerr "$FUNCNAME cannot create dir : (6113f207)";
        chkerr "$FUNCNAME cannot create dir : (6113f207)";
        chkerr "$FUNCNAME bad input : $k4";
        chkerr "$FUNCNAME bad input : $k4";
        chkerr "$FUNCNAME bad input : $k4";
        chkerr "$FUNCNAME bad input : $k4";
        chkerr "$FUNCNAME bad characters, not a parm '$1' (6123928b)";
        chkerr "$FUNCNAME bad characters, not a parm '$1' (6123928b)";
        chkerr "$FUNCNAME : {rotatefile_secs} not an interger '$rotatefile_secs' (630b9a9f)";
        chkerr "$FUNCNAME : {rotatefile_secs} not an interger '$rotatefile_secs' (630b9a9f)";
        chkerr "$FUNCNAME : {rotatefile_keep} not an interger '$rotatefile_keep' (630b9ac3)";
        chkerr "$FUNCNAME : {rotatefile_keep} not an interger '$rotatefile_keep' (630b9ac3)";
        chkerr "$FUNCNAME : xssptr does not exist xssptr='${pool}/xssptr/${xss}' (6325bcc3)";
        chkerr "$FUNCNAME : xssptr does not exist xssptr='${pool}/xssptr/${xss}' (6325bcc3)";
        chkerr "$FUNCNAME : unexpected k4db : ${kdb} : (5bc11a93)";
        chkerr "$FUNCNAME : unexpected k4db : ${kdb} : (5bc11a93)";
        chkerr "$FUNCNAME : unexpected ckstat (630bab5c)";
        chkerr "$FUNCNAME : unexpected ckstat (630bab5c)";
        chkerr "$FUNCNAME : tai64n not in path (630bb522)";
        chkerr "$FUNCNAME : tai64n not in path (630bb522)";
        chkerr "$FUNCNAME : sox not in path";
        chkerr "$FUNCNAME : sox not in path";
        chkerr "$FUNCNAME : not an interger kdb_locksleep='$kdb_locksleep' (63222222)";
        chkerr "$FUNCNAME : not an interger kdb_locksleep='$kdb_locksleep' (63222222)";
        chkerr "$FUNCNAME : not a file : ${1}";
        chkerr "$FUNCNAME : not a file : ${1}";
        chkerr "$FUNCNAME : not a file '$f' (630b96a3)";
        chkerr "$FUNCNAME : not a file '$f' (630b96a3)";
        chkerr "$FUNCNAME : no hash";
        chkerr "$FUNCNAME : no hash";
        chkerr "$FUNCNAME : no file (arg1) (630c469e)";
        chkerr "$FUNCNAME : no file (arg1) (630c469e)";
        chkerr "$FUNCNAME : must provide output {base} arg1, and input {decimal} arg2 : arg1='$1' arg2='$2'";
        chkerr "$FUNCNAME : must provide output {base} arg1, and input {decimal} arg2 : arg1='$1' arg2='$2'";
        chkerr "$FUNCNAME : k4 does not exist k4='$k4' (6325bc5d)";
        chkerr "$FUNCNAME : k4 does not exist k4='$k4' (6325bc5d)";
        chkerr "$FUNCNAME : k4 (arg1) filename does not have .kdb extension (62bb6691)";
        chkerr "$FUNCNAME : k4 (arg1) filename does not have .kdb extension (62bb6691)";
        chkerr "$FUNCNAME : irregular pool : ${kdb}/0/${kdb_pool} (6101d811)";
        chkerr "$FUNCNAME : irregular pool : ${kdb}/0/${kdb_pool} (6101d811)";
        chkerr "$FUNCNAME : irregular dir : "$cache_dir" (62eda81e)";
        chkerr "$FUNCNAME : irregular dir : "$cache_dir" (62eda81e)";
        chkerr "$FUNCNAME : irregular dir : "$cache_dir" (62eda81e)";
        chkerr "$FUNCNAME : irregular dir : "$cache_dir" (62eda81e)";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : invalid dir '$d'";
        chkerr "$FUNCNAME : ffmpeg not in path";
        chkerr "$FUNCNAME : ffmpeg not in path";
        chkerr "$FUNCNAME : failed k4_search cksum (62aed4bf)"
        chkerr "$FUNCNAME : failed k4_search cksum (62aed4bf)"
        chkerr "$FUNCNAME : exists ${1}.txt";
        chkerr "$FUNCNAME : exists ${1}.txt";
        chkerr "$FUNCNAME : env rb not set to rubberband executable";
        chkerr "$FUNCNAME : env rb not set to rubberband executable";
        chkerr "$FUNCNAME : editor returned invalid $k4 (6102d15c)";
        chkerr "$FUNCNAME : editor returned invalid $k4 (6102d15c)";
        chkerr "$FUNCNAME : cannot find '$in' (611e52d6)";
        chkerr "$FUNCNAME : cannot find '$in' (611e52d6)";
        chkerr "$FUNCNAME : arg2 (decimal input) must be an integer : arg2='$2'";
        chkerr "$FUNCNAME : arg2 (decimal input) must be an integer : arg2='$2'";
        chkerr "$FUNCNAME : arg1 must be a regular file (62bb5de5)";
        chkerr "$FUNCNAME : arg1 must be a regular file (62bb5de5)";
        chkerr "$FUNCNAME : arg1 (output base) must be an integer : arg1='$1'";
        chkerr "$FUNCNAME : arg1 (output base) must be an integer : arg1='$1'";
        chkerr "$FUNCNAME $1 : Invalid input $t0 $t1 (5bc4dcae)";
        chkerr "$FUNCNAME $1 : Invalid input $t0 $t1 (5bc4dcae)";
        chkerr "$0 : no parm provided (62b20a94)";
        chkerr "$0 : no parm provided (62b20a94)";
        cc="--crisp $c" cn="-c${c}"
        cc="--crisp $c" cn="-c${c}"
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat 1>&2 <<-EOF
        cat "${cache_9_topic}%" >> "${cache_9_topic}";
        cat "${cache_9_topic}%" >> "${cache_9_topic}";
        cat "${cache_8_value}%" >> "${cache_8_value}";
        cat "${cache_8_value}%" >> "${cache_8_value}";
        cat "${cache_7_graph}%" >> "${cache_7_graph}";
        cat "${cache_7_graph}%" >> "${cache_7_graph}";
        cat "${cache_6_search}%" >> "${cache_6_search}";
        cat "${cache_6_search}%" >> "${cache_6_search}";
        cat "${cache_5_km}%" >> "${cache_5_km}";
        cat "${cache_5_km}%" >> "${cache_5_km}";
        c="$b";
        c="$b";
        b=$(sed 's/^[0123456789abcdefghjkmnpqrstuvxyz]*,//' <<< "$1");
        b=$(sed 's/^[0123456789abcdefghjkmnpqrstuvxyz]*,//' <<< "$1");
        b="$(base 32 $p)";
        b="$(base 32 $p)";
        awk -v xs="$1" '{ printf "%s%08x%s\n","@40000000","0x"xs,"00000000" }' <<< 0x"$1" && return $? || { 
        awk -v xs="$1" '{ printf "%s%08x%s\n","@40000000","0x"xs,"00000000" }' <<< 0x"$1" && return $? || { 
        awk -v xs="$1" '{ printf "%s%08x%s\n","@40000000","0x"xs,"00000000" }' && return $? || { 
        awk -v xs="$1" '{ printf "%s%08x%s\n","@40000000","0x"xs,"00000000" }' && return $? || { 
        awk -v cols="$((cols))" 'length > cols{$0=substr($0,0,cols)""}1'
        awk -v cols="$((cols))" 'length > cols{$0=substr($0,0,cols)""}1'
        awk '{print $1}' <<< "$types";
        awk '{print $1}' <<< "$types";
        awk '{ printf "%x",$1 }' | kdb_xs2touchfmt
        awk '{ printf "%x",$1 }' | kdb_xs2touchfmt
        awk '{ printf "%x",$1 }' <<< "$1" | kdb_xs2touchfmt
        awk '{ printf "%x",$1 }' <<< "$1" | kdb_xs2touchfmt
        awk 'NR==1,/^$/' "$_k4" | awk '!/^$/' | grep -E "$e";
        awk 'NR==1,/^$/' "$_k4" | awk '!/^$/' | grep -E "$e";
        awk '/class="news-article__hero__info"/,/class="col-12"/' "${_t}/${_html}";
        awk '/class="news-article__hero__info"/,/class="col-12"/' "${_t}/${_html}";
        awk '/class="bodySection"/,/class="multi-search"/' "${_t}/${_html}"
        awk '/class="bodySection"/,/class="multi-search"/' "${_t}/${_html}"
        args='%';
        args='%';
        args="$(tr ' ' '\n' <<< "$args" | sed '/^$/d')";
        args="$(tr ' ' '\n' <<< "$args" | sed '/^$/d')";
        args="$(sed -E -e "
        args="$(sed -E -e "
        arg1     # expands addl %k fields in listing, v in arg1 expands vptr value
        arg1     # expands addl %k fields in listing, v in arg1 expands vptr value
        and move file {arg1} to {arg1}-{0x mtime}
        and move file {arg1} to {arg1}-{0x mtime}
        _tmu_active_sessions;
        _tmu_active_sessions;
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_xss_sec_diff "${tmp}/tx.${FUNCNAME}" sec
        _kdb_valid_k4 "${in}" && kdb_pool_add "${in}" && $FUNCNAME 0 && return 0
        _kdb_valid_k4 "${in}" && kdb_pool_add "${in}" && $FUNCNAME 0 && return 0
        _kdb_valid_k4 "$_k4" || { 
        _kdb_valid_k4 "$_k4" || { 
        _kdb_valid_k4 "$_k4" || { 
        _kdb_valid_k4 "$_k4" || { 
        _kdb_valid_k4 "$_k4" || { 
        _kdb_valid_k4 "$_k4" || { 
        _kdb_term_pright "unsupported types";
        _kdb_term_pright "unsupported types";
        _kdb_term_pright "supported types";
        _kdb_term_pright "supported types";
        _kdb_term_pleft "$(echo "$types" | grep "$kind")";
        _kdb_term_pleft "$(echo "$types" | grep "$kind")";
        _kdb_term_pleft "$(cat "$vptrf")";
        _kdb_term_pleft "$(cat "$vptrf")";
        _kdb_help_skel;
        _kdb_help_skel;
        _kdb_file_headg '^%km\ ' "$k4" | awk '{print $5}';
        _kdb_file_headg '^%km\ ' "$k4" | awk '{print $5}';
        _kdb_file_headg "^%ks " "$k4" | ct;
        _kdb_file_headg "^%ks " "$k4" | ct;
        _kdb_file_headg "$filter" "$k4" | _kdb_k4_default_squash | sed -E "s/$filter//"
        _kdb_file_headg "$filter" "$k4" | _kdb_k4_default_squash | sed -E "s/$filter//"
        [[ $1 == *:*:*:* ]] && { 
        [[ $1 == *:*:*:* ]] && { 
        [[ $1 == *:*:* ]] && { 
        [[ $1 == *:*:* ]] && { 
        [[ $1 == *:* ]] || echo $1
        [[ $1 == *:* ]] || echo $1
        [[ $1 == *:* ]] && echo $1 | sed -e 's/:/ 0/g' | awk '{print "3 k "$1" 60 * "$2" + p"}' | dc;
        [[ $1 == *:* ]] && echo $1 | sed -e 's/:/ 0/g' | awk '{print "3 k "$1" 60 * "$2" + p"}' | dc;
        [ -f "$infilep" ] && { 
        [ -f "$infilep" ] && { 
        [ -f "$f" ] && { 
        [ -f "$f" ] && { 
        [ -f "$f" ] && { 
        [ -f "$f" ] && { 
        [ -e "${inpath}/tmp/${out}.wav" ] || { 
        [ -e "${inpath}/tmp/${out}.wav" ] || { 
        [ -e "$f" ] && { 
        [ -e "$f" ] && { 
        [ -e "$f" ] && { 
        [ -e "$f" ] && { 
        [ -d "$dir" ] && { 
        [ -d "$dir" ] && { 
        [ $x = 0 ] && { 
        [ $x = 0 ] && { 
        [ "${#w}" -ge "$c" ] && echo "${#w} ${w}";
        [ "${#w}" -ge "$c" ] && echo "${#w} ${w}";
        [ "$yn" ] && echo -n "$y $yn ";
        [ "$yn" ] && echo -n "$y $yn ";
        [ "$wn" ] && echo -n "$w $wn ";
        [ "$wn" ] && echo -n "$w $wn ";
        [ "$v" ] && { 
        [ "$v" ] && { 
        [ "$tp" ] && { 
        [ "$tp" ] && { 
        [ "$to" ] && { 
        [ "$to" ] && { 
        [ "$t" ] && { 
        [ "$t" ] && { 
        [ "$src" = "$dst" ] || [ -e "$dst" ] && chkwrn "$FUNCNAME collision : $dst" || echo "mv \"$src\" \"$dst\"";
        [ "$src" = "$dst" ] || [ -e "$dst" ] && chkwrn "$FUNCNAME collision : $dst" || echo "mv \"$src\" \"$dst\"";
        [ "$sn" ] && echo -n "$s $sn ";
        [ "$sn" ] && echo -n "$s $sn ";
        [ "$p" ] && { 
        [ "$p" ] && { 
        [ "$origfiles" ] && orig="$(awk 'NR==1' <<< "${origfiles}")" || orig="'@/_^${id}.${ext}'";
        [ "$origfiles" ] && orig="$(awk 'NR==1' <<< "${origfiles}")" || orig="'@/_^${id}.${ext}'";
        [ "$off" ] && { 
        [ "$off" ] && { 
        [ "$numlistbump" -gt 0 ] 2> /dev/null && { 
        [ "$numlistbump" -gt 0 ] 2> /dev/null && { 
        [ "$nn" ] && echo -n "$n $nn ";
        [ "$nn" ] && echo -n "$n $nn ";
        [ "$mn" ] && echo -n "$m $mn ";
        [ "$mn" ] && echo -n "$m $mn ";
        [ "$lra" ] && { 
        [ "$lra" ] && { 
        [ "$k4s" ] && echo "$k4s" || kdb_k4_list
        [ "$k4s" ] && echo "$k4s" || kdb_k4_list
        [ "$i" ] && { 
        [ "$i" ] && { 
        [ "$hn" ] && echo -n "$h $hn ";
        [ "$hn" ] && echo -n "$h $hn ";
        [ "$hlnf" ] && xss="${hlnf##*/}" && ptrf="$xssptr/$xss"
        [ "$hlnf" ] && xss="${hlnf##*/}" && ptrf="$xssptr/$xss"
        [ "$f" ] && { 
        [ "$f" ] && { 
        [ "$f" = 'y' ] || return 1
        [ "$f" = 'y' ] || return 1
        [ "$dn" ] && echo -n "$d $dn ";
        [ "$dn" ] && echo -n "$d $dn ";
        [ "$cmp" ] && { 
        [ "$cmp" ] && { 
        [ "$cf" = "y" ] && cfc='--centre-focus' cfn='-cf' || cfc='' cfn='';
        [ "$cf" = "y" ] && cfc='--centre-focus' cfn='-cf' || cfc='' cfn='';
        [ "$c" ] || local c=5
        [ "$c" ] || local c=5
        [ "$c" ] && { 
        [ "$c" ] && { 
        [ "$addl_re" ] && { 
        [ "$addl_re" ] && { 
        [ "$F" ] && { 
        [ "$F" ] && { 
        [ "$F" = "y" ] && Fc='--formant' Fn='-F' || Fc='' Fn='';
        [ "$F" = "y" ] && Fc='--formant' Fn='-F' || Fc='' Fn='';
        [ "$CF" ] && { 
        [ "$CF" ] && { 
        [ "$1" ] && { 
        [ "$1" ] && { 
        [ "$1" = "$dst" ] || { 
        [ "$1" = "$dst" ] || { 
        [ "$*" ] && echo "$*" || cat
        [ "$*" ] && echo "$*" || cat
        [ "$#" -gt 0 ] && filter="$(echo -n '('
        [ "$#" -gt 0 ] && filter="$(echo -n '('
        Linux)
        Linux)
        Linux)
        Linux)
        Keep at least {rotatefile_keep} files
        Keep at least {rotatefile_keep} files
        Darwin)
        Darwin)
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        ;;
        /^%kt $/d
        /^%kt $/d
        /^%kr # matrix reason/d
        /^%kr # matrix reason/d
        /^%kr # matrix reason/d
        /^%kr # matrix reason/d
        /^%kq # value relative/d
        /^%kq # value relative/d
        /^%kp # hier superord/d
        /^%kp # hier superord/d
        /^%kl # like link    /d
        /^%kl # like link    /d
        /^%kk .*# class define #$/d
        /^%kk .*# class define #$/d
        /^%kj motive/d
        /^%kj motive/d
        /^%kj # motive subord/d
        /^%kj # motive subord/d
        /^%kd_.*index.md$/d
        /^%kd_.*index.md$/d
        /^%kc hist/d
        /^%kc hist/d
        /^%kc hist ignore # hist class/d
        /^%kc hist ignore # hist class/d
        /^%kc hist exmp # class note/d
        /^%kc hist exmp # class note/d
        /^%kc hist exam # class onto/d
        /^%kc hist exam # class onto/d
        /^%kc hist # hist class/d
        /^%kc hist # hist class/d
        /^%kc blah/d
        /^%kc blah/d
        /^%kc # topic class   /d
        /^%kc # topic class   /d
        /^%kc  # hist class/d
        /^%kc  # hist class/d
        /^%kc  # class/d
        /^%kc  # class/d
        /^%kb # better subject/d
        /^%kb # better subject/d
        /^%k. $/d
        /^%k. $/d
        /^%k(l|r|p)_5.* self [ ]*# (super|related|linked)/d
        /^%k(l|r|p)_5.* self [ ]*# (super|related|linked)/d
        /^%k(l|r|p)_(%kl )5.* self [ ]*# (super|related)/d
        /^%k(l|r|p)_(%kl )5.* self [ ]*# (super|related)/d
        /^%k(l|r|p)_(%kl )5.* self #/d
        /^%k(l|r|p)_(%kl )5.* self #/d
        /^%k(l|r|p)_(%kl )5.* isbe #/d
        /^%k(l|r|p)_(%kl )5.* isbe #/d
        /^ %kl .*link #$/d
        /^ %kl .*link #$/d
        /^ %k. .*root #$/d
        /^ %k. .*root #$/d
        /^ %k. .*ord #$/d
        /^ %k. .*ord #$/d
        /^ %k. .*def #$/d
        /^ %k. .*def #$/d
        .webpage_url_basename, .author_thumbnail, .playable_in_embed, .live_status, .automatic_captions,
        .webpage_url_basename, .author_thumbnail, .playable_in_embed, .live_status, .automatic_captions,
        .extractor, .is_live, .was_live )' "$1" | yq --yaml-output | tr -cd '[ -~]\n' >> "${1}.txt";
        .extractor, .is_live, .was_live )' "$1" | yq --yaml-output | tr -cd '[ -~]\n' >> "${1}.txt";
        . "${f}" || { 
        . "${f}" || { 
        *)
        *)
        *)
        *)
        *)
        *)
        ( cd "${a%/*}";
        ( cd "${a%/*}";
        ( [ -d "$a" ] && { 
        ( [ -d "$a" ] && { 
        '
        '
        ${verb} "$b siffx: export '${f}'"
        ${verb} "$b siffx: export '${f}'"
        $verb2 sox "${inpath}/tmp/${out}.wav" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc;
        $verb2 sox "${inpath}/tmp/${out}.wav" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc;
        $verb2 sox "${inpath}/tmp/${out}.flac" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc;
        $verb2 sox "${inpath}/tmp/${out}.flac" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc;
        $verb2 "$*"
        $verb2 "$*"
        $verb2 "$(hms2sec $(ffprobe -hide_banner -loglevel info "${inpath}/tmp/${out}.wav" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds rubberband";
        $verb2 "$(hms2sec $(ffprobe -hide_banner -loglevel info "${inpath}/tmp/${out}.wav" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) seconds rubberband";
        $verb "${inpath}/tmp/${out}${vn}.mp3";
        $verb "${inpath}/tmp/${out}${vn}.mp3";
        $verb "${inpath}/tmp/${out}${vn}.mp3";
        $verb "${inpath}/tmp/${out}${vn}.mp3";
        $s/"$//' | tr -d '\n' | awk '{gsub(/\\n/,"\n")}1'
        $s/"$//' | tr -d '\n' | awk '{gsub(/\\n/,"\n")}1'
        $kdblog "0x : $invoke";
        $kdblog "0x : $invoke";
        $kdblog "0= $lock : $invoke";
        $kdblog "0= $lock : $invoke";
        $kdblog "$FUNCNAME : stale $a (62f16771)";
        $kdblog "$FUNCNAME : stale $a (62f16771)";
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME --help;
        $FUNCNAME $@
        $FUNCNAME $@
        $FUNCNAME "$xs";
        $FUNCNAME "$xs";
          " <<< "^${a##*^}" | awk '{printf "%- 11s %- 11s %s %s %s\n",$1,$2,$3,$4,$5}';
          " <<< "^${a##*^}" | awk '{printf "%- 11s %- 11s %s %s %s\n",$1,$2,$3,$4,$5}';
            };
            };
            };
            };
            };
            };
            };
            };
            };
            };
            };
            };
            } || { 
            } || { 
            } || true;
            } || true;
            } | tr '\n' ' ' | awk '{printf "%07x %02x %08x % 8x %08x \200",$1,$2,$5,$3,$4}';
            } | tr '\n' ' ' | awk '{printf "%07x %02x %08x % 8x %08x \200",$1,$2,$5,$3,$4}';
            }
            }
            }
            }
            }
            }
            }
            }
            { 
            { 
            { 
            { 
            { 
            { 
            { 
            { 
            xs=$(printf "%x" "$(( 0x$xs % 86400 ))")
            xs=$(printf "%x" "$(( 0x$xs % 86400 ))")
            xs=$(printf "%x" "$(( 0x$xs % 604800 ))")
            xs=$(printf "%x" "$(( 0x$xs % 604800 ))")
            xs=$(printf "%x" "$(( 0x$xs % 60 ))")
            xs=$(printf "%x" "$(( 0x$xs % 60 ))")
            xs=$(printf "%x" "$(( 0x$xs % 3600 ))")
            xs=$(printf "%x" "$(( 0x$xs % 3600 ))")
            xs=$(printf "%x" "$(( 0x$xs % 31556926 ))")
            xs=$(printf "%x" "$(( 0x$xs % 31556926 ))")
            xs=$(printf "%x" "$(( 0x$xs % 2629743 ))")
            xs=$(printf "%x" "$(( 0x$xs % 2629743 ))")
            v="$(_kdb_file_headg '^%kz ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kz ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kx ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kx ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%ki ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%ki ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%ke ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            v="$(_kdb_file_headg '^%ke ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
            true
            true
            tput sgr0;
            tput sgr0;
            tput sgr0;
            tput sgr0;
            tput bold;
            tput bold;
            tput bold;
            tput bold;
            touch -t "$(kdb_xs2touchfmt ${xss::8})" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt ${xss::8})" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}" "$d/_/kx"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}" "$d/_/kx"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_xs2touchfmt "$v")" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_decs2touchfmt $(( 0x${xss::8} + 0x$v )))" "${pool}/xssptr/${xss}"
            touch -t "$(kdb_decs2touchfmt $(( 0x${xss::8} + 0x$v )))" "${pool}/xssptr/${xss}"
            touch -r "${pool}/xsshln/${xss}" "${pool}/xssptr/${xss}"
            touch -r "${pool}/xsshln/${xss}" "${pool}/xssptr/${xss}"
            tail='tail -F'
            tail='tail -F'
            tail='tail --follow=name'
            tail='tail --follow=name'
            src="$1";
            src="$1";
            spin2 0
            spin2 0
            sox "${inpath}/tmp/${out}.wav" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc 2>&1 | while IFS= read a; do
            sox "${inpath}/tmp/${out}.wav" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc 2>&1 | while IFS= read a; do
            sox "${inpath}/tmp/${out}.flac" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc 2>&1 | while IFS= read a; do
            sox "${inpath}/tmp/${out}.flac" "${inpath}/tmp/${out}${vn}.tmp.mp3" $vc 2>&1 | while IFS= read a; do
            sortargs="$sortargs $(grep "^$parm" <<< "$args")";
            sortargs="$sortargs $(grep "^$parm" <<< "$args")";
            sortargs="$sortargs $(grep "^$parm" <<< "$args")";
            sortargs="$sortargs $(grep "^$parm" <<< "$args")";
            set $a;
            set $a;
            set $a;
            set $a;
            set $a;
            set $a;
            sed -e "/^$b[${b32char}]*,./!d" -e "/^${b}00,/d" <<< "$fs" || true
            sed -e "/^$b[${b32char}]*,./!d" -e "/^${b}00,/d" <<< "$fs" || true
            s/^ p/ t=1 p/
            s/^ p/ t=1 p/
            s/[ ](cmp|rev|ss|to|F|cf|c|v|off|tp|lra|i)=[^ ]*//g
            s/[ ](cmp|rev|ss|to|F|cf|c|v|off|tp|lra|i)=[^ ]*//g
            s/.mp3$//
            s/.mp3$//
            s/.mp3$//
            s/.mp3$//
            s/.*\.${ext}//
            s/.*\.${ext}//
            s/.*\.${ext}//
            s/.*\.${ext}//
            s/-v/ v=/
            s/-v/ v=/
            s/-v/ v=/
            s/-v/ v=/
            s/-tp/ tp=/
            s/-tp/ tp=/
            s/-tp/ tp=/
            s/-tp/ tp=/
            s/-to/ to=/
            s/-to/ to=/
            s/-to/ to=/
            s/-to/ to=/
            s/-t/ t=/
            s/-t/ t=/
            s/-t/ t=/
            s/-t/ t=/
            s/-ss/ ss=/
            s/-ss/ ss=/
            s/-ss/ ss=/
            s/-ss/ ss=/
            s/-rev/ rev=y/
            s/-rev/ rev=y/
            s/-rev/ rev=y/
            s/-rev/ rev=y/
            s/-r3/ c=r3/
            s/-r3/ c=r3/
            s/-r3/ c=r3/
            s/-r3/ c=r3/
            s/-p/ p=/
            s/-p/ p=/
            s/-p/ p=/
            s/-p/ p=/
            s/-off/ off=/
            s/-off/ off=/
            s/-off/ off=/
            s/-off/ off=/
            s/-lra/ lra=/
            s/-lra/ lra=/
            s/-lra/ lra=/
            s/-lra/ lra=/
            s/-ln//
            s/-ln//
            s/-ln//
            s/-ln//
            s/-i/ i=/
            s/-i/ i=/
            s/-i/ i=/
            s/-i/ i=/
            s/-f/ f=/
            s/-f/ f=/
            s/-f/ f=/
            s/-f/ f=/
            s/-cf/ cf=y/
            s/-cf/ cf=y/
            s/-cf/ cf=y/
            s/-cf/ cf=y/
            s/-c/ c=/
            s/-c/ c=/
            s/-c/ c=/
            s/-c/ c=/
            s/-F/ F=y/
            s/-F/ F=y/
            s/-F/ F=y/
            s/-F/ F=y/
            s/-(ckb|hrn|cps|par)/ cmp=\1/
            s/-(ckb|hrn|cps|par)/ cmp=\1/
            s/-(ckb|hrn|cps|par)/ cmp=\1/
            s/-(ckb|hrn|cps|par)/ cmp=\1/
            s/-(bhz|chz)/ f=\1/
            s/-(bhz|chz)/ f=\1/
            s/-(bhz|chz)/ f=\1/
            s/-(bhz|chz)/ f=\1/
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 1
            return 0
            return 0
            printf '%3s ' "$knx";
            printf '%3s ' "$knx";
            printf '%3s ' "$knx";
            printf '%3s ' "$knx";
            printf '%3s ' "$knx";
            printf '%3s ' "$knx";
            printf "%s\n" "$f";
            printf "%s\n" "$f";
            printf "%s %s%s%02s,%s\n" "$3" "$numlist" "$c" "$(base 32 $2)" "$1";
            printf "%s %s%s%02s,%s\n" "$3" "$numlist" "$c" "$(base 32 $2)" "$1";
            printf "%8x" "0x$v" > "$d/_/kx";
            printf "%8x" "0x$v" > "$d/_/kx";
            n="$((++n))";
            n="$((++n))";
            mv -i -f "${inpath}/tmp/${out}.wav~" "${inpath}/tmp/${out}.wav"
            mv -i -f "${inpath}/tmp/${out}.wav~" "${inpath}/tmp/${out}.wav"
            mkdir -p "${pool}/${a}${b}" || { 
            mkdir -p "${pool}/${a}${b}" || { 
            mkdir -p "$d/_";
            mkdir -p "$d/_";
            ls | awk ${start},${stop} | sed -e '/.mp3$/!d' -e "s%^%$prefix%"
            ls | awk ${start},${stop} | sed -e '/.mp3$/!d' -e "s%^%$prefix%"
            ls -dF "$f"
            ls -dF "$f"
            ls -dF "$f"
            ls -dF "$f"
            ls -Ldl --full-time "$d"
            ls -Ldl --full-time "$d"
            ls -Ld "${d}"
            ls -Ld "${d}"
            ls -LTdl "$d" | awk '{printf "%-10s %+8s:%-8s %+8s %8s %2s %3s %s ", \
            ls -LTdl "$d" | awk '{printf "%-10s %+8s:%-8s %+8s %8s %2s %3s %s ", \
            knx="$(base 32 $n)";
            knx="$(base 32 $n)";
            kdbeph | awk {print $4,$1};
            kdbeph | awk {print $4,$1};
            kdbeph | awk '{print $4}';
            kdbeph | awk '{print $4}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdbeph | awk '{print $4,$1}';
            kdb_xs2tai "$1"
            kdb_xs2tai "$1"
            kdb_xs2tai
            kdb_xs2tai
            kdb_xs2local "$xs"
            kdb_xs2local "$xs"
            kdb_valid_dir "${pool}/${a}${b}" || { 
            kdb_valid_dir "${pool}/${a}${b}" || { 
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2local
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2h
            kdb_stat "$ptrf" | kdb_argn 4 | kdb_xs2h
            kdb_stat "$ptrf" | kdb_argn 4
            kdb_stat "$ptrf" | kdb_argn 4
            kdb_stat "$ptrf" | kdb_argn 4
            kdb_stat "$ptrf" | kdb_argn 4
            kdb_stat "$ptrf" | kdb_argn 4
            kdb_stat "$ptrf" | kdb_argn 4
            inpath="${inpath%/*}";
            inpath="${inpath%/*}";
            grep -q 'V' <<< "$addl_re" && kdb_print_vxssptr "$vptr" "${pool}/xssptr/${xss}" | sed "s/^/${vptrfmt} /"
            grep -q 'V' <<< "$addl_re" && kdb_print_vxssptr "$vptr" "${pool}/xssptr/${xss}" | sed "s/^/${vptrfmt} /"
            grep -E "^%km\ " <<< "$k4h" | tr '\n' ' ';
            grep -E "^%km\ " <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_value" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_value" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_topic" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_topic" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_search" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_search" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_graph" <<< "$k4h" | tr '\n' ' ';
            grep -E "$k4_graph" <<< "$k4h" | tr '\n' ' ';
            grep "v=$v" > /dev/null <<< "$sortargs" || args="$args v=$v"
            grep "v=$v" > /dev/null <<< "$sortargs" || args="$args v=$v"
            grep "tp=$tp" > /dev/null <<< "$sortargs" || args="$args tp=$tp"
            grep "tp=$tp" > /dev/null <<< "$sortargs" || args="$args tp=$tp"
            grep "to=$to" > /dev/null <<< "$sortargs" || args="$args to=$to"
            grep "to=$to" > /dev/null <<< "$sortargs" || args="$args to=$to"
            grep "t=$t" > /dev/null <<< "$sortargs" || args="$args t=$t"
            grep "t=$t" > /dev/null <<< "$sortargs" || args="$args t=$t"
            grep "p=$p" > /dev/null <<< "$sortargs" || args="$args p=$p"
            grep "p=$p" > /dev/null <<< "$sortargs" || args="$args p=$p"
            grep "off=$off" > /dev/null <<< "$sortargs" || args="$args off=$off"
            grep "off=$off" > /dev/null <<< "$sortargs" || args="$args off=$off"
            grep "lra=$lra" > /dev/null <<< "$sortargs" || args="$args lra=$lra"
            grep "lra=$lra" > /dev/null <<< "$sortargs" || args="$args lra=$lra"
            grep "i=$i" > /dev/null <<< "$sortargs" || args="$args i=$i"
            grep "i=$i" > /dev/null <<< "$sortargs" || args="$args i=$i"
            grep "f=$f" > /dev/null <<< "$sortargs" || args="$args f=$f"
            grep "f=$f" > /dev/null <<< "$sortargs" || args="$args f=$f"
            grep "cmp=$cmp" > /dev/null <<< "$sortargs" || args="$args cmp=$cmp"
            grep "cmp=$cmp" > /dev/null <<< "$sortargs" || args="$args cmp=$cmp"
            grep "c=$c" > /dev/null <<< "$sortargs" || args="$args c=$c"
            grep "c=$c" > /dev/null <<< "$sortargs" || args="$args c=$c"
            grep "^[${b32char}]*," <<< "$src" > /dev/null && dst="$2" || dst="0,$2";
            grep "^[${b32char}]*," <<< "$src" > /dev/null && dst="$2" || dst="0,$2";
            grep "F=$F" > /dev/null <<< "$sortargs" || args="$args F=$F"
            grep "F=$F" > /dev/null <<< "$sortargs" || args="$args F=$F"
            grep "CF=$CF" > /dev/null <<< "$sortargs" || args="$args CF=$CF"
            grep "CF=$CF" > /dev/null <<< "$sortargs" || args="$args CF=$CF"
            for b in "$dir"/*mp3;
            for b in "$dir"/*mp3;
            for a in {1..$numlistbump};
            for a in {1..$numlistbump};
            ffplay5 -hide_banner -stats -autoexit -loglevel error -top 52 -x 1088 -y 280 $v "$f" || return 1
            ffplay5 -hide_banner -stats -autoexit -loglevel error -top 52 -x 1088 -y 280 $v "$f" || return 1
            ffplay5 -hide_banner -stats -autoexit -loglevel error -nodisp "$f" || return 1
            ffplay5 -hide_banner -stats -autoexit -loglevel error -nodisp "$f" || return 1
            ffmpeg5 -hide_banner -loglevel info -benchmark -y $secc -i "$infilep" -af "loudnorm=print_format=json:linear=true
            ffmpeg5 -hide_banner -loglevel info -benchmark -y $secc -i "$infilep" -af "loudnorm=print_format=json:linear=true
            ffmpeg5 -hide_banner -loglevel info -benchmark -y $secc -i "$infilep" -af "loudnorm=print_format=json" -f flac "${inpath}/tmp/${infile}${secn}.flac~" 2>&1 | awk '/^{/,0' | jq --compact-output '
            ffmpeg5 -hide_banner -loglevel info -benchmark -y $secc -i "$infilep" -af "loudnorm=print_format=json" -f flac "${inpath}/tmp/${infile}${secn}.flac~" 2>&1 | awk '/^{/,0' | jq --compact-output '
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="1edb85f4";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="1edb85f4";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="1edb85f4";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="1edb85f4";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} - 0x00010000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} - 0x00010000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x10000000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x10000000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x02f00000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x02f00000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x00100000 ))")";
            expr "$v" : '^[[:xdigit:]]\{8\}$' > /dev/null || v="$(printf "%08x" "$(( 0x${xss::8} + 0x00100000 ))")";
            echo z;
            echo z;
            echo h;
            echo h;
            echo 0;
            echo 0;
            echo -n "$1 ";
            echo -n "$1 ";
            echo $1 | sed -e 's/:/ 0/g' | awk '{print "3 k "$1" 60 60 * * "$2" 60 * "$3" + + p"}' | dc && return 0
            echo $1 | sed -e 's/:/ 0/g' | awk '{print "3 k "$1" 60 60 * * "$2" 60 * "$3" + + p"}' | dc && return 0
            echo "validfn error : $fndata" 1>&2;
            echo "validfn error : $fndata" 1>&2;
            echo "f";
            echo "f";
            echo "$0 : validfn error : $a" 1>&2;
            echo "$0 : validfn error : $a" 1>&2;
            echo "$0 : validfn error : $a" 1>&2;
            echo "$0 : validfn error : $a" 1>&2;
            echo "# ${infile}${secn}.meas infile secn meas flac";
            echo "# ${infile}${secn}.meas infile secn meas flac";
            echo "# ${infile}${secn}${lnn}.flac infile ln flac";
            echo "# ${infile}${secn}${lnn}.flac infile ln flac";
            echo
            echo
            echo
            echo
            echo
            echo
            echo
            echo
            echo
            echo
            done;
            done;
            done
            done
            done
            done
            done
            done
            do
            do
            do
            do
            declare -f "$1" | printf "%s %08x %08x\n" "$1" $(cksum)
            declare -f "$1" | printf "%s %08x %08x\n" "$1" $(cksum)
            date -r $2;
            date -r $2;
            d="$(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration: N\/A, /d' -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')";
            d="$(ffprobe -hide_banner -loglevel info "$infilep" 2>&1 | sed -e '/Duration: N\/A, /d' -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')";
            chktrue sec $(hms2sec $(ffprobe -hide_banner -loglevel info "$f" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) vol ${v##* };
            chktrue sec $(hms2sec $(ffprobe -hide_banner -loglevel info "$f" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) vol ${v##* };
            chktrue sec $(hms2sec $(ffprobe -hide_banner -loglevel info "$f" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) vol ${v##* };
            chktrue sec $(hms2sec $(ffprobe -hide_banner -loglevel info "$f" 2>&1 | sed -e '/Duration/!d' -e 's/,.*//' -e 's/.* //')) vol ${v##* };
            chktrue "$f";
            chktrue "$f";
            chktrue "$f";
            chktrue "$f";
            chkerr "too many ':' in $1";
            chkerr "too many ':' in $1";
            chkerr "sox '${inpath}/tmp/${out}.wav' '${inpath}/tmp/${out}${vn}.tmp.mp3' $vc";
            chkerr "sox '${inpath}/tmp/${out}.wav' '${inpath}/tmp/${out}${vn}.tmp.mp3' $vc";
            chkerr "sox '${inpath}/tmp/${out}.flac' '${inpath}/tmp/${out}${vn}.tmp.mp3' $vc";
            chkerr "sox '${inpath}/tmp/${out}.flac' '${inpath}/tmp/${out}${vn}.tmp.mp3' $vc";
            chkerr "internal error (62b1e8fd)";
            chkerr "internal error (62b1e8fd)";
            chkerr "internal error (62b1e8fc)";
            chkerr "internal error (62b1e8fc)";
            chkerr "internal error (62b1e8ec)";
            chkerr "internal error (62b1e8ec)";
            chkerr "$b siffx: source signal $? in '$f'";
            chkerr "$b siffx: source signal $? in '$f'";
            chkerr "$FUNCNAME parm invalid : c=$c";
            chkerr "$FUNCNAME parm invalid : c=$c";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b1405f)";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b1405f)";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b1405e)";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b1405e)";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b12359)";
            chkerr "$FUNCNAME : not valid k4 from arg1 or stdin : '$_k4' (62b12359)";
            chkerr "$FUNCNAME : irregular xs stdin input ''  (612234fa)";
            chkerr "$FUNCNAME : irregular xs stdin input ''  (612234fa)";
            chkerr "$FUNCNAME : irregular xs arg1 input '$1' (612234f9)";
            chkerr "$FUNCNAME : irregular xs arg1 input '$1' (612234f9)";
            chkerr "$FUNCNAME : irregular dir : $a (6101d7cf)";
            chkerr "$FUNCNAME : irregular dir : $a (6101d7cf)";
            cd "$a";
            cd "$a";
            cat $(which "$1") | printf "%s %08x %08x\n" "$1" $(cksum)
            cat $(which "$1") | printf "%s %08x %08x\n" "$1" $(cksum)
            c="$(find "${pool}/${a}${b}" -type f -not -name 0 | awk 'END{print NR}')";
            c="$(find "${pool}/${a}${b}" -type f -not -name 0 | awk 'END{print NR}')";
            base 4 "$i" | awk '{printf "%02s",$1}'
            base 4 "$i" | awk '{printf "%02s",$1}'
            base 4 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            base 4 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            base 32 "$i" | awk '{printf "%02s",$1}'
            base 32 "$i" | awk '{printf "%02s",$1}'
            base 32 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            base 32 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            base 18 "$i" | awk '{printf "%02s",$1}'
            base 18 "$i" | awk '{printf "%02s",$1}'
            base 18 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            base 18 "$(( ( ($dxs - $ke ) % ( $i * $day ) ) / $day + 1  ))" | awk '{printf "%02s",$1}';
            _stat "$f" | awk '{printf "%07x %02x . % 8x %08x \200",$1,$2,$3,$4}';
            _stat "$f" | awk '{printf "%07x %02x . % 8x %08x \200",$1,$2,$3,$4}';
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_pool_stat
            _kdb_help_sub;
            _kdb_help_sub;
            _kdb_help_skel;
            _kdb_help_skel;
            _kdb_file_headg "^%ks " "$hln";
            _kdb_file_headg "^%ks " "$hln";
            _kdb_file_headg "^%ks " "$hln";
            _kdb_file_headg "^%ks " "$hln";
            _kdb_file_headg "^%ks " "$hln"
            _kdb_file_headg "^%ks " "$hln"
            _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/     /'
            _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/     /'
            [ -t 1 ] && { 
            [ -t 1 ] && { 
            [ -e "${k4},/mkv" ] && expr "$(kdb_stat_mod "${k4},/mkv")" '>' "$(kdb_stat_mod "$k4")" > /dev/null || { 
            [ -e "${k4},/mkv" ] && expr "$(kdb_stat_mod "${k4},/mkv")" '>' "$(kdb_stat_mod "$k4")" > /dev/null || { 
            [ -e "${k4},/k4mi" ] && expr "$(kdb_stat_mod "${k4},/k4mi")" '>' "$(kdb_stat_mod "$k4")" > /dev/null || { 
            [ -e "${k4},/k4mi" ] && expr "$(kdb_stat_mod "${k4},/k4mi")" '>' "$(kdb_stat_mod "$k4")" > /dev/null || { 
            [ -e "$dst" ] && chkwrn "$FUNCNAME collision : $dst" || echo "mv '$1' '$dst'"
            [ -e "$dst" ] && chkwrn "$FUNCNAME collision : $dst" || echo "mv '$1' '$dst'"
            [ $# -gt 0 ] && echo "$*" || cat
            [ $# -gt 0 ] && echo "$*" || cat
            [ "$src" = "$dst" ] || [ -e "$dst" ] || echo "mv '$src' '$dst'";
            [ "$src" = "$dst" ] || [ -e "$dst" ] || echo "mv '$src' '$dst'";
            [ "$n" -eq "$c" ] || { 
            [ "$n" -eq "$c" ] || { 
            [ "$d" ] && echo "$d $infilep" || true
            [ "$d" ] && echo "$d $infilep" || true
            [ "$addl_re" ] && { 
            [ "$addl_re" ] && { 
            [ "$addl_re" ] && { 
            [ "$addl_re" ] && { 
            [ "$a" = "$opwd" ] && prefix="" || prefix="$PWD/";
            [ "$a" = "$opwd" ] && prefix="" || prefix="$PWD/";
            /^$/d
            /^$/d
            / t=1 p=0$/d
            / t=1 p=0$/d
            ${verb2} "$a";
            ${verb2} "$a";
            ${verb2} "$a";
            ${verb2} "$a";
            $verb2 $rb -q $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~";
            $verb2 $rb -q $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~";
            $verb "${inpath}/tmp/${out}.wav";
            $verb "${inpath}/tmp/${out}.wav";
            $kdblog2 "++ $invoke ${k4},/k4mi"
            $kdblog2 "++ $invoke ${k4},/k4mi"
            $FUNCNAME "$a";
            $FUNCNAME "$a";
            # start with block from formfile
            # start with block from formfile
            # squash to tempo and pitch parameters
            # squash to tempo and pitch parameters
            # fixup odd case
            # fixup odd case
            " <<< "_^${_fname##*_^}" | tr ' ' '\n')";
            " <<< "_^${_fname##*_^}" | tr ' ' '\n')";
                }
                }
                verb2=chkwrn kdblog "$invoke : unsupported vptr='$vptr'";
                verb2=chkwrn kdblog "$invoke : unsupported vptr='$vptr'";
                v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
                v="$(_kdb_file_headg '^%kv ' "${pool}/xsshln/${xss}" | kdb_argn 2)";
                touch -t "$(kdb_xs2touchfmt "$cv")" "${pool}/xssptr/${xss}" || { 
                touch -t "$(kdb_xs2touchfmt "$cv")" "${pool}/xssptr/${xss}" || { 
                touch -t "$(kdb_decs2touchfmt "$cv")" "${pool}/xssptr/${xss}" "${k4},/k4mi"
                touch -t "$(kdb_decs2touchfmt "$cv")" "${pool}/xssptr/${xss}" "${k4},/k4mi"
                touch "${k4},/mkv";
                touch "${k4},/mkv";
                spin2;
                spin2;
                sed -E -e "
                sed -E -e "
                s/^ [ ]*//g
                s/^ [ ]*//g
                s/ [ ]*/ /g
                s/ [ ]*/ /g
                s/ [ ]*$//
                s/ [ ]*$//
                s/ % /   /');
                s/ % /   /');
                return 1
                return 1
                return 1
                return 1
                return 1
                return 1
                return 1
                return 1
                return 1
                return 1
                printf "%s" "$char$char $str ";
                printf "%s" "$char$char $str ";
                printf "%08x" "$cv" > "${k4},/k4mi";
                printf "%08x" "$cv" > "${k4},/k4mi";
                printf "%*s\n" "$cols" '' | tr ' ' "$char"
                printf "%*s\n" "$cols" '' | tr ' ' "$char"
                mkdir -p "${k4},";
                mkdir -p "${k4},";
                local cols="$(( $(tput cols) - ${#str} - 4 ))";
                local cols="$(( $(tput cols) - ${#str} - 4 ))";
                kdb_rcs "${k4},/mkv" "++ $invoke";
                kdb_rcs "${k4},/mkv" "++ $invoke";
                ext="$(sed -e 's/[^.]*.//' -e 's/-.*//' <<< "^${a##*^}")";
                ext="$(sed -e 's/[^.]*.//' -e 's/-.*//' <<< "^${a##*^}")";
                echo "$cv" > "${k4},/mkv";
                echo "$cv" > "${k4},/mkv";
                done
                done
                cv="$(printf "%x" "$(( 0x0$(kdb_stat "${pool}/xsshln/${xss}" | kdb_argn 4) + 0x0$v ))")";
                cv="$(printf "%x" "$(( 0x0$(kdb_stat "${pool}/xsshln/${xss}" | kdb_argn 4) + 0x0$v ))")";
                cv="$(( 0x0$(kdb_stat_mod "${k4}") + 0x0$(_kdb_file_headg '^%ki ' "${pool}/xsshln/${xss}" | kdb_argn 2) ))";
                cv="$(( 0x0$(kdb_stat_mod "${k4}") + 0x0$(_kdb_file_headg '^%ki ' "${pool}/xsshln/${xss}" | kdb_argn 2) ))";
                cksum < "$f"
                cksum < "$f"
                chkerr $rb $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~";
                chkerr $rb $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~";
                chkerr "unsupported vptr '$vptr' (61297aaa)";
                chkerr "unsupported vptr '$vptr' (61297aaa)";
                chkerr "$invoke irregular pool dir : ${pool}/${a}${b} (62f1550a)";
                chkerr "$invoke irregular pool dir : ${pool}/${a}${b} (62f1550a)";
                chkerr "$invoke ${pool} irregular count $n/knxptr:$c/${a}${b} (610867e2)";
                chkerr "$invoke ${pool} irregular count $n/knxptr:$c/${a}${b} (610867e2)";
                chkerr "$FUNCNAME cannot create pool : ${pool}/${a}${b} (d49f583)";
                chkerr "$FUNCNAME cannot create pool : ${pool}/${a}${b} (d49f583)";
                c="$(tr "${b32char}" "${b32char:1}${b32char::1}" <<< $b)";
                c="$(tr "${b32char}" "${b32char:1}${b32char::1}" <<< $b)";
                a="${b##*/}";
                a="${b##*/}";
                _stat "$f";
                _stat "$f";
                _r=1
                _r=1
                _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/    /'
                _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/    /'
                _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/    /'
                _kdb_file_headg "$addl_re" "$hln" | _kdb_k4_default_squash | sed 's/^/    /'
                ${verb} "$a";
                ${verb} "$a";
                ${verb} "$a";
                ${verb} "$a";
                $rb -q $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~" 2>&1 | while IFS= read a; do
                $rb -q $tc $pc $fhzc $cc $Fn $cfc "${inpath}/tmp/${infile}${secn}${lnn}.flac" "${inpath}/tmp/${out}.wav~" 2>&1 | while IFS= read a; do
                   :offset=${off}:i=${i}:tp=${tp}:lra=${lra}" -f flac "${inpath}/tmp/${infile}${secn}${lnn}.flac~" 2>&1 | awk '/^{/,0' | jq --compact-output '
                   :offset=${off}:i=${i}:tp=${tp}:lra=${lra}" -f flac "${inpath}/tmp/${infile}${secn}${lnn}.flac~" 2>&1 | awk '/^{/,0' | jq --compact-output '
                   :measured_LRA=${measured_LRA}:measured_thresh=${measured_thresh}
                   :measured_LRA=${measured_LRA}:measured_thresh=${measured_thresh}
                   :measured_I=${measured_I}:measured_TP=${measured_TP}
                   :measured_I=${measured_I}:measured_TP=${measured_TP}
                    return 1
                    return 1
                    chkerr "$invoke : touch fail '$cv' '${pool}/xssptr/${xss}' (61351caf)";
                    chkerr "$invoke : touch fail '$cv' '${pool}/xssptr/${xss}' (61351caf)";
                    ${verb} "$a";
                    ${verb} "$a";
                                ' | tr -d '"{}' | tr ':' '=' | awk -F, '{printf "% 18s % 18s % 18s % 22s % 15s \n",$1,$2,$3,$4,$5}'
                                ' | tr -d '"{}' | tr ':' '=' | awk -F, '{printf "% 18s % 18s % 18s % 22s % 15s \n",$1,$2,$3,$4,$5}'
                                 {out_i_LUFS:.output_i,out_tp_dBTP:.output_tp,out_lra_LU:.output_lra,out_tr_LUFS:.output_thresh,offset_LU:.target_offset},
                                 {out_i_LUFS:.output_i,out_tp_dBTP:.output_tp,out_lra_LU:.output_lra,out_tr_LUFS:.output_thresh,offset_LU:.target_offset},
                                 {measured_I:.input_i,measured_TP:.input_tp,measured_LRA:.input_lra,measured_thresh:.input_thresh},
                                 {measured_I:.input_i,measured_TP:.input_tp,measured_LRA:.input_lra,measured_thresh:.input_thresh},
                                 {linear:.linear}
                                 {linear:.linear}
                                  ' | tr -d '"{}' | tr ':' '=' | awk -F, '{printf "% 18s % 18s % 18s % 22s % 15s \n",$1,$2,$3,$4,$5}'
                                  ' | tr -d '"{}' | tr ':' '=' | awk -F, '{printf "% 18s % 18s % 18s % 22s % 15s \n",$1,$2,$3,$4,$5}'
                                   {out_i_LUFS:.output_i,out_tp_dBTP:.output_tp,out_lra_LU:.output_lra,out_tr_LUFS:.output_thresh,offset_LU:.target_offset},
                                   {out_i_LUFS:.output_i,out_tp_dBTP:.output_tp,out_lra_LU:.output_lra,out_tr_LUFS:.output_thresh,offset_LU:.target_offset},
                                   {measured_I:.input_i,measured_TP:.input_tp,measured_LRA:.input_lra,measured_thresh:.input_thresh},
                                   {measured_I:.input_i,measured_TP:.input_tp,measured_LRA:.input_lra,measured_thresh:.input_thresh},
                                   {linear:.linear}
                                   {linear:.linear}




























































    local ckb3="compand 0.2,0.8  -60,-99,-50,-56,-38,-32,-23,-18,0,-4         -2 -60 0.2";
    local ckb3="compand 0.2,0.8  -60,-99,-50,-56,-38,-32,-23,-18,0,-4         -2 -60 0.2";
    local cps1="compand 0.07,0.25 -70,-84,-50,-45,-32,-33,-0,-21               3 -71 0.07";
    local cps1="compand 0.07,0.25 -70,-84,-50,-45,-32,-33,-0,-21               3 -71 0.07";
    local ckb2="compand 0.2,0.9  -70,-99,-50,-60,-50,-45,-30,-30,-20,-25,0,-13 6 -70 0.2";
    local ckb2="compand 0.2,0.9  -70,-99,-50,-60,-50,-45,-30,-30,-20,-25,0,-13 6 -70 0.2";
    local ckb0="compand 0.2,0.9  -70,-70,-60,-55,-50,-45,-35,-35,-20,-25,0,-12 6 -70 0.2";
    local ckb0="compand 0.2,0.9  -70,-70,-60,-55,-50,-45,-35,-35,-20,-25,0,-12 6 -70 0.2";
    local par4="compand 0.13,0.16 -72,-97,-68,-84,-64,-73,-56,-65,-55,-61,-32,-57,-17,-53,0,-49  25 -55 0.12";
    local par4="compand 0.13,0.16 -72,-97,-68,-84,-64,-73,-56,-65,-55,-61,-32,-57,-17,-53,0,-49  25 -55 0.12";
    local hrn3="compand 0.08,0.3 -74,-80,-50,-46,-18,-18,-0,-6                -1 -68 0";
    local hrn3="compand 0.08,0.3 -74,-80,-50,-46,-18,-18,-0,-6                -1 -68 0";
    local parc="compand 0.09,0.25 -97,-106,-85,-89,-73,-73,-57,-61,-40,-49,-21,-37,0,-25         11 -95 0.08";
    local parc="compand 0.09,0.25 -97,-106,-85,-89,-73,-73,-57,-61,-40,-49,-21,-37,0,-25         11 -95 0.08";
    local par2="compand 0.09,0.25 -100,-116,-88,-97,-80,-80,-63,-72,-54,-60,-23,-48,0,-36        19 -95 0.08";
    local par2="compand 0.09,0.25 -100,-116,-88,-97,-80,-80,-63,-72,-54,-60,-23,-48,0,-36        19 -95 0.08";
