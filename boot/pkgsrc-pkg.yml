### pkgsrc packages
### cf bootstrap ~/vcs/pub/boot/pkgsrc.yml
---
read: cat ./pkgsrc-pkg.yml | sed -e "/X $(uname)/d" -e '/X xtra/d' -e '/:/d' -e 's/#.*//' -e '/^---/d' -e '/^\.\.\./d' -e 's/ //g' -e '/^$/d'
packages:
    min: |
        shells/bash
        sysutils/daemontools
        sysutils/runit
        devel/openrcs
        misc/tmux
        misc/getopt
        editors/vim
        security/netpgp
        security/netpgpverify
        security/pcsc-tools
        security/pcsc-lite
        net/djbdnscurve6
        sysutils/pstree
        misc/colorls
        lang/lua54
        devel/jq
        textproc/yq
        net/rsync
        devel/git
        pkgtools/rcorder
        pkgtools/pkglint
        meta-pkgs/pkg_developer
        devel/scmcvs
        sysutils/htop
        sysutils/file
        net/wget
        www/curl
        www/w3m
        net/fping
        net/ipcalc
        net/mtr
        net/tcpdump
        net/speedtest-cli
        net/netcat
        net/netcat6
        textproc/aspell-en
        textproc/par
        audio/rubberband
        audio/sox
        archivers/lz4json
        net/rclone
        chat/irssi

        multimedia/ffplay6  # X Darwin dep: devel/gobject-introspection error: 'gitypes.h' file not found with <angled> include; use "quotes" instead
        multimedia/ffmpeg6  # X Darwin dep: devel/gobject-introspection error: 'gitypes.h' file not found with <angled> include; use "quotes" instead
        graphics/graphviz   # X Darwin graphics/netpbm ld: library 'netpbm' not found, @mach-0 s/lib/dylib/?
        graphics/gnuplot    # X Darwin dep: ../devel/gobject-introspection/build-err.yml <header> vs "header"

        sysutils/lsof   # X Darwin
        sysutils/strace # X Darwin
        net/gh              # X xtra
        databases/duckdb    # X xtra
        databases/tinycdb   # X xtra
        databases/sqlite3   # X xtra
        mail/neomutt        # X Darwin dep: ... graphviz... netpbm...
        net/nmap            # X Darwin dep: ... gcc12 ...  configure: error: gmp.h can't be found, or is unusable. /private/tmp/pkg-2024Q3-670fa-Darwin_22.6.0_arm64-14.2-work/lang/gcc12/work.aarch64/build
        net/paris-traceroute # X Darwin, Server.cc:126:9: error: assigning to 'int' from incompatible type
        misc/tailspin       # X Darwin, dep: lang/rust installed package archivers/xz, same error

    special: |
        parallel/slurm-wlm # X xtra
    lua_mod: |
        textproc/lua-cjson
        devel/lua-argparse
        databases/lua-ldap          # X xtra
        databases/lua-lsqlite3      # X xtra
        databases/lua-sql-postgres  # X xtra
        devel/lua-BitOp             # X xtra
        devel/lua-alt-getopt        # X xtra
        devel/lua-ansicolors        # X xtra
        devel/lua-busted            # X xtra
        devel/lua-check             # X xtra
        devel/lua-cov               # X xtra
        devel/lua-event             # X xtra
        devel/lua-fifo              # X xtra
        devel/lua-filesystem        # X xtra
        devel/lua-fun               # X xtra
        devel/lua-inspect           # X xtra
        devel/lua-lpeg              # X xtra
        devel/lua-lpeg-patterns     # X xtra
        devel/lua-luassert          # X xtra
        devel/lua-std-_debug        # X xtra
        devel/lua-std-normalize     # X xtra
        devel/lua-stdlib            # X xtra
        textproc/lua-lyaml          # X xtra
        textproc/lua-stringy        # X xtra
        time/lua-chrono             # X xtra
        time/lua-date               # X xtra

#   cd /opt/pkgsrc-reltag/audio/libvorbis && cvs -q upd -dP -r pkgsrc-2023Q3 .
#     /opt/pkgsrc-reltag/audio/sox
#   */opt/pkgsrc-reltag/audio/vamp-plugin-sdk  dylib vs so?
#   https://pkgsrc.se/audio/vamp-plugin-sdk
#     */opt/pkgsrc-reltag/audio/rubberband
# */opt/pkgsrc-reltag/multimedia/ffmpeg6



pkgsrc is an unix operating system agnostic package manager, a repository of makefiles and patches such that after bootstrap, packages may be compiled and run on the host without depending on host/vendor libraries or packages. pkgsrc packages depend on pkgsrc packages. in addition to the HEAD branch, pkgsrc uses quarterly release tags to stay close to upstream package versions, and reduce dependency package patching.

one deployment technique, is to bootstrap each new release tag in a unique prefix. in this way, validated dependencies can be maintained on systems that also follow the release tags. users can run the release tag or an older tag according to their needs.

upstream packages may have a primary user base in Linux, BSD, or Darwin (Mac); and they may only test builds on their primary platform. This can cause problems for the platform agnostic package manager. Each upstream release requires per platform patch development when upstream focuses on only one platform

When a package fails on a platform, the flexibility of pkgsrc allows for any of multiple solutions.
- the user can create a problem report for the package maintainer to address in HEAD and the next tag
- the extracted source can be hand edited and fixed to build the package and install
- the user can identify the fix in PR for the package maintainer to implement with pkgsrc patching patterns
- the user can implement pkgsrc patching patterns for local build and install, and submit for inclusion in future release

The following have presented themselves to me across multiple packages, that is to say I have seen these issues enough times that I don't precisly remember if I've seen them in the same or different packages before.


- packages that use '--' as an argument to GNU 'ar' will (generally) build when the '--' is removed from the makefile invocation.
- packages that use <header> to reference header.h should instead use "header"
- packages that require /usr/bin/clang (like lang/gcc12) may not find dependancies (like devel/gmp) when installed in a pkgsrc prefix, vs the platform root prefix
- packages that depend on other packages may include src but cannot find, nor when installed from pkgsrc
- pkgsrc may not include approprate patches for Mach-O dylib plist files, when upstream uses lib files

That is to say the following have been fixed in at least one of the prior tags, but today they are broken again, due to the reocurring pattern.

- graphics/graphviz   # X Darwin dep: graphics/netpbm ld: library 'netpbm' not found, @mach-0 s/lib/dylib/?
- mail/neomutt        # X Darwin dep: graphics/netpbm ld: library 'netpbm' not found, @mach-0 s/lib/dylib/?
- net/nmap            # X Darwin dep: lang/gcc12 configure: error: gmp.h can't be found, or is unusable.
- misc/tailspin       # X Darwin dep: lang/rust includes xz but cannot be found, nor the installed archivers/xz
- graphics/gnuplot    # X Darwin dep: devel/gobject-introspection <header> vs "header"
- multimedia/ffmpeg6  # X Darwin dep: devel/gobject-introspection error: 'gitypes.h' file not found with <angled> include; use "quotes" instead
- multimedia/ffplay6  # X Darwin dep: devel/gobject-introspection error: 'gitypes.h' file not found with <angled> include; use "quotes" instead
- net/paris-traceroute # X Darwin, Server.cc:126:9: error: assigning to 'int' from incompatible type (how could this work elsewhere?)

I've never successfully built tailspin or paris-traceroute on Darwin, but for all the others I have completed a build and installed the package, as the following binaries in old bootstrap prefixes show.

/opt/pkg-2022Q4/bin/dot
/opt/pkg-2022Q4/bin/ffmpeg5
/opt/pkg-2022Q4/bin/ffplay5
/opt/pkg-2022Q4/bin/nmap
/opt/pkg-2023Q3-sdk-14.2/bin/dot
/opt/pkg-2023Q3-sdk-14.2/bin/gnuplot
/opt/pkg-2023Q3-sdk-14.2/bin/neomutt
/opt/pkg-2023Q3-sdk-14.2/bin/nmap
/opt/pkg-2023Q4-sdk-14.2/bin/dot
/opt/pkg-2023Q4-sdk-14.2/bin/ffmpeg6
/opt/pkg-2023Q4-sdk-14.2/bin/ffplay6
/opt/pkg-2023Q4-sdk-14.2/bin/neomutt
/opt/pkg-2023Q4-sdk-14.2/bin/nmap
/opt/pkg-657a9f42-sdk-14.2/bin/ffmpeg6 (HEAD at 2023-12-13 22:22:48)
/opt/pkg-657a9f42-sdk-14.2/bin/ffplay6 (HEAD at 2023-12-13 22:22:48)

So, now with pkg-2024Q3, if I want to use any of these: dot (graphviz), ffmpeg5, ffmpeg6, ffplay5, ffplay6, ffplay6, gnuplot, neomutt, or nmap; I have a few choices. I can use one of the earlier mentioned problem reports and patch fixups, or I can use a binary from an old tag bootstrap.

The answer is probablty I'll use a bit of all the posibilities; but for the sake of this discussion


The most common of these build issues, "gnu syntax on bsd tools," "Darwin dylib PLIST fail," '<angled> include vs "quotes"' and "lib not found" probably have a very standard best way to create a package patch, even if automating it is not feasible. But, since this isn't what I usually do, I can never remember the steps. I have to lookup the patch build targets recipies, http://kflu.github.io/2021/07/19/2021-07-19-pkgsrc-survival-guide/ then invent my own way to patch upstream for Darwin only, and even if I patch the right files, the package maintainer almost certainly will prefer different method, syntax, or patch file nomenclature and reimplement my careful patch staging and testing.


Could someone build a doc that explains the best way to resolve these reocurring problems? Most of the time I spend on this type of patches is reverse engineering the makefile include fragments, and refreshing my packaging chops. And still wondering, should I patch the upstream or the pkgsrc package data? It's frustrating when after that effort, two tags later when an upstream rev is folded in the PLIST, gnu, lib path, or dylib errors return. I would prefer helping a patch uplift, but some that I've done were hard to do, and now it looks like it needs to be done again. Definately would be easier to just use my old dot file.




ontents

 - BOOTSTRAPPING
 - PARALLEL BUILD
 - USEFUL TARGETS, GETTING HELP
 - USEFUL PKG TOOLS
 - DISTFILES, FETCHING ETC
 - BUILD OPTIONS
 - USEFUL ENVIRONMENT VARS
 - TROUBLESHOOTING
 - BUILD PHASES
 - Use pkgsrc along side Joyent pkgsrc binary distribution
 - Rebuild only changed files


now revise this unrelated forum post for most effective acceptance. this is for a technical audience that understands systems and programming, they operate well with verbatim file paths and error messages and concise language to explain the broader situation, they will understand the request before they have finished reading it. Don't get into unnecessary background knowledge, or try to explain technical terms unnecessarily. the url is a third party link which goes into detail about the makefile targets for generating pkgsrc patchsets, eg makesum, makepatchsum, makedistinfo, and print-PLIST.



/opt/pkg-2024Q3-670fa-Darwin_22.6.0_arm64-14.2/bin/bmake
